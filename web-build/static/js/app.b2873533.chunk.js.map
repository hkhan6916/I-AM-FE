{"version":3,"sources":["src/components/GifModal.jsx","src/components/SearchBar.jsx","src/components/ImageWithCache.jsx","src/helpers/hooks/usePersistedWebParams.js","src/screens/Main/MainTabStack/Profile.jsx","src/components/ProfileScreenHeader.jsx","src/screens/Main/MainTabStack/Search.jsx","src/components/UserThumbnail/Thumbnail.jsx","src/components/SearchFeedItem.jsx","src/helpers/sqlite/userSearchHistory/createUserSearchHistoryTable.js","src/helpers/sqlite/userSearchHistory/deleteUserSearchHistoryTable.js","src/helpers/sqlite/userSearchHistory/getUserSearchHistory.js","src/helpers/sqlite/userSearchHistory/insertUserSearchHistory.js","src/screens/Main/MainTabStack/Contacts/index.jsx","src/screens/Main/MainTabStack/Contacts/Contacts.jsx","src/screens/Main/MainTabStack/Contacts/ContactRequests.jsx","src/screens/Main/SubScreens/UserProfileScreen.jsx","src/components/ProfileInfo.jsx","src/components/UserOptionsModal.jsx","src/components/ContentLoader/helpers.jsx","src/helpers/makeCancelable.js","src/screens/Main/SubScreens/MediaScreen.jsx","src/screens/Main/SubScreens/ShareScreen.jsx","src/screens/Main/SubScreens/CommentsScreen.jsx","src/screens/Main/SubScreens/CommentRepliesScreen.jsx","src/components/CommentReplyCard.jsx","src/screens/Main/SubScreens/PostScreen.jsx","src/screens/Main/SubScreens/ChatScreen.jsx","src/helpers/get12HourTime.js","src/helpers/getNameDate.js","src/components/MessageContainer.jsx","src/components/MessageBox.jsx","src/helpers/slashedDate.js","src/screens/Main/SubScreens/ChatListScreen.jsx","src/components/ChatCard.jsx","src/screens/Main/SubScreens/CreateChatScreen.jsx","src/screens/Main/SubScreens/EditUserDetailsScreen.jsx","src/components/InputNoBorder.jsx","src/components/PasswordInputNoBorder.jsx","src/screens/Main/SubScreens/SettingsScreen.jsx","src/screens/Main/SubScreens/PrivacyPolicyScreen.jsx","src/screens/Main/SubScreens/TermsOfUseScreen.jsx","src/screens/Main/SubScreens/OtherUserContactsScreen.jsx","src/screens/Main/SubScreens/EditPostScreen.jsx","src/screens/Main/SubScreens/AccountScreen.jsx","src/screens/Main/SubScreens/FollowersModeScreen.jsx","src/screens/Main/SubScreens/AccountVisibilityScreen.jsx","src/screens/Main/SubScreens/EmailVerificationScreen.jsx","src/components/CodeInput.jsx","src/components/UserThumbnail/index.jsx","src/theme.style.js","src/components/PreviewVideo.jsx","src/helpers/openAppSettings.js","src/helpers/formatAge.js","src/components/ContentLoader/index.jsx","src/components/Input.jsx","src/helpers/validateEmail.js","src/helpers/hooks/useScreenOrientation.js","src/components/PostCard/index.jsx","src/components/VideoPlayer.web.js","src/components/CardImage.web.js","src/helpers/apiCall.js","src/components/RepostCard.jsx","src/components/Image.web.js","src/components/PostOptionsModal.jsx","src/components/UserSearchBar.jsx","src/Logo.jsx","src/helpers/validatePassword.js","src/components/ProfileVideoCamera.web.js","src/components/PostAge.jsx","src/components/CameraStandard.web.js","src/helpers/backgroundUpload.js","src/helpers/sqlite/userSearchHistory/index.js","src/components/ExpoVideoPlayer.jsx","src/components/PostCommentCard.jsx","src/components/CommentTextInput.jsx","src/components/CommentOptionsModal.jsx","src/helpers/getWebPersistedData.js","App.jsx","src/reducers/rootReducer.js","src/reducers/userReducer.js","src/reducers/postsReducer.js","src/reducers/cameraReducer.js","src/reducers/deviceReducer.js","src/screens/index.jsx","src/screens/Auth/index.jsx","src/screens/Auth/Login.jsx","src/helpers/webPersistUserData.js","src/components/AppStoreBadges/AppStoreBadge.jsx","src/components/AppStoreBadges/PlayStoreBadge.jsx","assets/google-play-badge.png","src/screens/Auth/Register/index.jsx","src/screens/Auth/Register/Step1.jsx","src/screens/Auth/Register/Step2.jsx","src/components/PasswordInput.jsx","src/screens/Auth/Register/Step3.jsx","src/components/Avatar.jsx","src/screens/Auth/ForgotPasswordScreen.jsx","src/screens/Utility/index.jsx","src/screens/Utility/ConnectionFailedScreen.jsx","src/screens/Main/index.jsx","src/screens/Main/MainTabStack/index.jsx","src/screens/Main/MainTabStack/Home/index.jsx","src/components/PostCard/PostAuthor.jsx","src/components/PostCard/Actions.jsx","assets/via_tenor_logo_blue.png","src/screens/Main/MainTabStack/Home/HomeScreenHeader.jsx","src/components/ContentLoader/PostCard.jsx","src/screens/Main/MainTabStack/Add.jsx"],"names":["setShowModal","selectGif","active","useState","error","setError","gifs","setGifs","screen","Dimensions","get","width","screenWidth","Math","min","handleGifSearch","searchInput","async","Platform","OS","localStorage","getItem","getItemAsync","tenorApiKey","axios","method","url","response","data","results","cancel","rowRenderer","useCallback","_","item","style","flex","flexDirection","margin","backgroundColor","themeStyle","colors","grayscale","higher","onPress","media","tinygif","justifyContent","alignItems","height","round","resizeMode","source","uri","nanogif","useEffect","dataProvider","DataProvider","r1","r2","cloneWithRows","layoutProvider","useRef","LayoutProvider","dim","current","onRequestClose","visible","highest","maxWidth","alignSelf","marginHorizontal","marginVertical","AntDesign","name","size","color","lowest","fontSize","placeholder","onTypingEnd","v","default","textAlign","RecyclerListView","styles","StyleSheet","create","searchBar","defaultContainerStyles","borderBottomWidth","borderBottomColor","low","searchIcon","padding","React","memo","onFocus","onSubmitEditing","setSearchInput","typing","typingTimeout","typingStatus","setTypingStatus","Ionicons","value","placeholderTextColor","autoCorrect","onChangeText","searchTerm","clearTimeout","setTimeout","returnKeyType","paddingHorizontal","zIndex","opacity","aspectRatio","mediaUrl","mediaIsSelfie","mediaHeaders","isFullScreen","toggleFullScreen","removeBorderRadius","onLoad","onError","removeBackround","background","screenHeight","fullScreenWebStyles","objectFit","platformProps","webProps","borderRadius","mobileProps","presentationStyle","black","position","top","right","white","textShadowOffset","textShadowRadius","textShadowColor","headers","maxHeight","transform","scaleX","e","newParams","params","setParams","persistedData","Object","keys","setItem","JSON","stringify","parse","container","userPosts","setUserPosts","userData","setUserData","setLoading","allPostsLoaded","setAllPostsLoaded","refreshing","setRefreshing","showPostOptions","setShowPostOptions","profileVideoVisible","setProfileVideoVisible","nativeGobalUserData","useSelector","state","globalUserData","getWebPersistedUserData","navigation","useNavigation","listRef","mobileSpecificListProps","renderAheadOffset","useScrollToTop","scrollToTop","scrollToOffset","offset","ViewTypes","handleNavigation","post","navigate","type","index","extendedState","isVisible","deleted","triggerOptionsModal","disableVideo","_id","getUserData","apiCall","success","addListener","removeListener","length","paddingVertical","numberOfLines","username","MaterialCommunityIcons","verified","profileVideoUrl","secondary","fontWeight","ref","minHeight","minWidth","onEndReached","getUserPosts","onEndReachedThreshold","forceNonDeterministicRendering","onVisibleIndicesChanged","i","scrollViewProps","contentContainerStyle","removeClippedSubviews","refreshControl","onRefresh","showOptions","reportPost","reasonIndex","postId","reason","deletePost","newPosts","map","customKey","editPost","belongsToUser","ProfileScreenHeader","forwardRef","children","props","isFullWidth","previewText","flipProfileVideo","followersMode","marginTop","MaterialIcons","marginLeft","private","lower","jobTitle","primary","numberOfFriends","displayName","prev","next","setResults","searchFeed","setSearchFeed","showAllResults","setShowAllResults","hideFeedAndSuggestions","setHideFeedAndSuggestions","userSearchHistory","setUserSearchHistory","searchItemsVisible","setSearchItemsVisible","lastSuccessfullSearchQuery","setLastSuccessfullSearchQuery","db","SQLite","openDatabase","getSearchFeed","newFeed","filter","postAuthor","profileGifUrl","thumbnailRenderer","user","avatarSize","showSeparator","userDataProvider","userLayoutProvider","userLayoutProviderAllResults","keyboardDidShowListener","Keyboard","keyboardDidHideListener","createUserSearchHistoryTable","getUserSearchHistory","history","remove","Fragment","StatusBar","translucent","searchQuery","insertUserSearchHistory","dismiss","newHistory","onUserSearch","onClear","deleteUserSearchHistoryTable","onReset","resultsVisible","feedIsVisible","cardsOuter","cards","marginBottom","isRequest","acceptFriendRequest","rejectFriendRequest","flexWrap","avatarUrl","profileGifHeaders","preventClicks","paddingRight","firstName","lastName","borderWidth","borderColor","pushScreen","StackActions","push","dispatch","thumbnailUrl","thumbnailHeaders","high","body","marginRight","mediaType","Feather","transaction","tx","executeSql","Promise","resolve","reject","rows","_array","message","date","Date","now","toString","t","Stack","createNativeStackNavigator","Navigator","initialRouteName","Screen","options","headerShown","headerTintColor","headerTitleStyle","headerStyle","title","component","ContactsScreen","ContactRequestsScreen","friends","setFriends","requests","setRequests","sections","setSections","offsets","setOffsets","loading","nativeUserData","sectionListRef","getFriends","friendsAsSenderOffset","friendsAsReceiverOffset","indexOf","updatedSections","splice","accepted","renderItem","keyExtractor","animating","stickySectionHeadersEnabled","keyboardShouldPersistTaps","renderSectionHeader","section","renderSectionFooter","userId","flexGrow","initialNumToRender","maxToRenderPerBatch","activeTab","tabsContainer","paddingBottom","requestsTab","requestsTabText","currentTab","setCurrentTab","friendRequestsReceived","setFriendRequestsReceived","friendRequestsSent","setFriendRequestsSent","getFriendRequests","sentOffset","receivedOffset","received","sent","ScrollView","route","setUser","setAccepted","isFocused","useIsFocused","sendFriendRequest","userRequestSent","requestSent","userRequestRemoved","isFriend","recallFriendRequest","userIsFriend","userIsNotFriend","userRequestRejected","requestReceived","removeConnection","initializeData","makeCancelable","handleReaction","oldUserposts","liked","p","likes","canAdd","promise","then","otherUser","setOptions","isSameUser","isProfileVideo","listSize","showUserOptions","setShowUserOptions","modalLoading","setModalLoading","modalError","setModalError","reportUser","userToReport","blockUser","blockedByUser","unblockUser","onHide","disableBlurListener","disabled","participants","chatUserId","chatUserFirstName","existingChat","handleChatNavigation","Entypo","handleUserFriendsNavigation","blockedByThem","showReportOptions","setShowReportOptions","showBlockUserGuard","setShowBlockUserGuard","transparent","behavior","keyboardVerticalOffset","borderTopColor","borderTopWidth","option","animation","duration","Animated","loop","sequence","timing","toValue","useNativeDriver","start","interpolate","inputRange","outputRange","pHeight","pWidth","constructor","Array","primaryColor","secondaryColor","animationDuration","titleStyles","avatar","aShape","aSize","reverse","containerStyles","hasCanceled","val","isCanceled","text","iconShadow","routeParamsObj","persistedParams","usePersistedWebParams","setLiked","setLikes","setPost","getAdditionalPostData","useScreenOrientation","ScreenOrientation","lockAsync","OrientationLock","DEFAULT","PORTRAIT_UP","initialPost","hidden","isSelfie","goBack","left","display","bottom","FontAwesome","suffixNum","floor","shortValue","parseFloat","pow","toPrecision","toFixed","intToString","prevScreen","repostBody","setRepostBody","useDispatch","textAlignVertical","multiline","maxLength","postContent","isPreview","mediaIsFullWidth","payload","posted","handleRepost","commentsContainer","comments","setComments","replyingTo","setReplyingTo","newCommentsIds","setNewCommentsIds","allCommentsLoaded","setAllCommentsLoaded","intialLoading","setInitialLoading","loadingMore","setLoadingMore","showOptionsForComment","setShowOptionsForComment","textInputRef","getInitialComments","loadMoreComments","reply","oldReplies","replyToUser","commentId","replyingToType","focus","replyCount","new","comment","renderFooter","showAvatar","onScrollEndDrag","updateComment","newComments","edited","updated","deleteComment","reportComment","submitAction","commentBody","tweakedResponse","age","minutes","updatedComments","repliesContainer","replies","setReplies","setComment","newRepliesIds","setNewRepliesIds","allRepliessLoaded","setAllRepliesLoaded","getCommentReplies","refresh","handleReplyToReply","HEADER","isNestedInList","newReply","STANDARD","initialComment","newReplies","replace","replyingToObj","replyContainer","paddingLeft","profileInfoContainer","replyBodyContainer","replyAuthorName","actionsContainer","actions","replyTrigger","margiHormarginHorizontal","likeTrigger","commentAge","replyAuthor","replyingToId","ageObject","formatAge","unit","postAuthorContainer","setInitialPost","bodyCollapsed","setBodyCollapsed","isCollapsible","setIsCollapsible","numberOfComments","initial","underlayColor","delayPressIn","gif","shouldPlay","isUploading","ready","isCancelled","cancelled","setUnMuteVideos","isFull","onTextLayout","nativeEvent","lines","newPost","repostPostObj","justifySelf","horizontalLines","gestureHandlerRootHOC","authInfo","setAuthInfo","socket","setSocket","setHeight","setMedia","showMediaSizeError","setShowMediaSizeError","messageBody","setMessageBody","messages","setMessages","showError","setShowError","cameraActive","setCameraActive","recording","setRecording","chat","setChat","setExistingChat","setChatUserId","setChatUserFirstName","allMessagesLoaded","setAllMessagesLoaded","showActions","setShowActions","recipient","setRecipient","userIsBlocked","setUserIsBlocked","userHasBlocked","setUserHasBlocked","creatingChat","setCreatingChat","sendingMessage","setSendingMessage","loadingMessages","setLoadingMessages","mediaSize","createUpdatedMessagesArray","newMessage","createChat","emit","chatId","senderId","getChatMessages","initSocket","port","token","connection","io","auth","withCredentials","transports","generateThumbnail","getThumbnailAsync","time","console","warn","handleBackgroundUpload","compressedUrl","messageId","filePath","filename","split","pop","signedResponse","backgroundUpload","signedUrl","disableLogs","extraFields","mediaKey","fileKey","handleMessageSend","connected","online","recipientId","ImageCompress","compress","compressionMethod","progress","tempId","nanoid","newMessages","stringTime","get12HourTime","stringDate","getNameDate","postData","thumbnailKey","VideoCompress","minimumFileSizeForCompress","cancelUpload","firstMessageDate","messageDate","belongsToSender","users","isMounted","on","prevMessages","find","disconnect","off","existing","setFile","scaleY","inverted","disableVirtualization","isWeb","max","ImagePicker","requestMediaLibraryPermissionsAsync","status","Alert","alert","openAppSettings","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","quality","result","getInfoAsync","mediaInfo","mediaSizeInMb","pickImage","scrollEnabled","paddingTop","editable","onContentSizeChange","event","contentSize","includes","Video","useNativeControls","hours","getHours","getMinutes","ampm","ageDifMs","ageDate","showYear","abs","getUTCFullYear","year","getFullYear","month","getMonth","day","getDate","senderName","subContainer","failed","mediaFullScreen","setMediaFullScreen","slashedDate","createdAt","borderTopRightRadius","borderTopLeftRadius","light","dateArg","yyyy","mm","dd","chats","setChats","loaded","setLoaded","getUserChats","upToDateUsers","focusListener","hideExtraText","chatInfo","lastMessage","toUpperCase","contacts","setContacts","searchedContacts","setSearchedContacts","onEndReachedCalledDuringMomentum","getUserContacts","customSearch","publicUsers","avoidSameUser","onMomentumScrollBegin","statusBarHeight","Constants","formContainer","newPostPill","elevation","formHeader","updateError","resetProfileVideoText","faceDetectionError","faceDetectionErrorText","buttonContainer","button","textInputContainer","submitButtonContainer","submitButton","takeVideoButton","takeVideoButtonText","label","errorText","visibleTextInputs","searchSection","userResult","isUpdating","setIsUpdating","setUserId","unFocussed","setUnFocussed","email","setEmail","setUsername","password","setPassword","setFirstName","setLastName","setJobTitle","jobTitleOptions","setJobTitleOptions","loadingVideo","setLoadingVideo","validationErrors","setValidationErrors","initialProfileData","setInitialProfileData","detectingFaces","setDetectingFaces","hasCameraPermission","setHasCameraPermission","hasAudioPermission","setHasAudioPermission","cameraActivated","setCameraActivated","recordingLength","setRecordingLength","faceDetected","setFaceDetected","profileVideo","setProfileVideo","setPrevProfileVideo","setupdateError","setShowVideoSizeError","tooShort","setTooShort","tooLong","setTooLong","showUpdatedPill","setShowUpdatedPill","pickedFromCameraRoll","setPickedFromCameraRoll","existingNativeUserData","userdata","pickProfileVideo","Videos","allowsMultipleSelection","videoMaxDuration","allowsEditing","handleFaceDetection","Number","detectFacesAsync","faces","validateInfo","validateEmail","emailValid","validatePassword","passwordValid","emailMessage","passwordMessage","validationResult","checkUserExists","identifier","exists","updatedValidationErrors","_userId","Camera","requestCameraPermissionsAsync","cameraStatus","requestMicrophonePermissionsAsync","audioStatus","video","isInput","info","durationMillis","profileVideoHeaders","FontAwesome5","setValue","query","letter","onBlur","onEndEditing","newValidationErrorsObj","passwordGuide","validationResults","validData","key","other","signedData","path","maxRetries","field","notification","enabled","useUtf8Charset","Upload","startUpload","uploadId","responseBody","responseCode","profileVideoKey","webPersistUserData","catch","updateProfile","textInput","passwordInput","passwordInputContainer","eyeIcon","isOutlined","showPassword","setShowPassword","secureTextEntry","basicOptions","basicOptionsText","optionContent","signoutContainer","searchedFriends","setSearchedFriends","contactName","apiRoute","apiConfig","postLimitMessage","errorTitle","errorMessage","postBody","setPostBody","setSuccess","existingPost","setExistingPost","removeMedia","setRemoveMedia","handlePostUpdate","repostPostId","autoHidePlayer","fullscreen","videoProps","showDeleteGuard","setShowDeleteGuard","deleteAccount","setItemAsync","setEnabled","trackColor","false","true","thumbColor","onValueChange","nativeGlobalUserData","setVerified","onSubmit","code","handleVerification","root","codeFiledRoot","cell","lineHeight","focusCell","useBlurOnFulfill","cellCount","useClearByFocusCell","getCellOnLayoutHandler","CodeField","rootStyle","keyboardType","textContentType","renderCell","symbol","onLayout","Cursor","handleUserProfileNavigation","Appearance","getColorScheme","bright","warning","videoStatus","setVideoStatus","setReady","profileVideoRef","handleOnLoad","pauseAsync","LinearGradient","end","isPlaying","playAsync","positionMillis","onReadyForDisplay","onPlaybackStatusUpdate","progressUpdateIntervalMillis","isLooping","require","autoPlay","speed","seconds","handleVideoDuration","packageName","manifest","releaseChannel","android","package","Linking","openURL","startActivityAsync","ActivityAction","APPLICATION_DETAILS_SETTINGS","days","ContentLoader","isSquare","pRows","paragraphStyles","tHeight","tWidth","secondaryTitleStyles","sTWidth","avatarStyles","customBackground","isPost","postHeight","Value","startAnimation","startAnimationHelper","interpolatedBackground","getInterpolatedColor","titleInitialStyles","secondaryTitleInitialStyles","avatarInitialStyles","fullWidthStyles","View","input","content","secondaryTitle","paragraphContainer","paragraph","paragraphInitialStyles","defaultProps","commonDefaultProps","rest","String","toLowerCase","match","orientation","setOrientation","getOrientationAsync","subscription","addOrientationChangeListener","orientationInfo","borderRightWidth","borderLeftWidth","preview","author","unMute","prevProps","nextProps","buttons","controls","durationStyles","showToggle","preventPlay","calculatedVideoHeight","globalUnMuteVideos","decidedHeight","readyForDisplay","setReadyForDisplay","repeat","muted","playInBackground","isl","onProgress","playableDuration","currentTime","calculatedImage","imageRef","src","fetch","res","blob","URL","createObjectURL","err","apiUrl","extra","callConfig","Authorization","FormData","transformRequest","repostedPostContent","srcBlob","setSrcBlob","customSearchStyles","showHistory","setShowHistory","searchUsers","handleSearch","search","blurOnSubmit","fill","viewBox","xmlns","Path","d","stroke","strokeWidth","postAge","parameters","failureRoute","onComplete","videoRef","useFocusEffect","setStatusAsync","timeVisible","slider","headerContainer","commentBodyContainer","commentAuthorName","commentAuthor","CommentTextInput","hasBorderRadius","initialCommentBody","setCommentBody","replyingToFieldsExists","replyingToBanner","replyingToBannerText","inputBoxContainer","inputBox","handleSubmit","postTrigger","parentLoading","isEditing","setIsEditing","inputRef","resetOptions","store","createStore","rootReducer","ignoreWarns","arg","startsWith","LogBox","ignoreLogs","ScreenNav","select","web","config","createBrowserApp","createAppContainer","createApp","createSwitchNavigator","Main","Screens","enableScreens","Provider","combineReducers","loggedIn","loggedInReducer","userDataReducer","postCreated","postCreatedReducer","cameraActivatedReducer","updatedPost","updatedPostReducer","globalUnMuteVideosReducer","canPlayFeedVideos","canPlayFeedVideosReducer","action","setLoggedIn","notificationToken","setNotificationToken","connectionFailed","setConnectionFailed","loginAttemptStatus","colorScheme","useColorScheme","Theme","DefaultTheme","navigationContainerRef","checkUserConnected","NetInfo","isConnected","preventAutoHideAsync","hideAsync","Notifications","addNotificationResponseReceivedListener","notificationRes","request","isDevice","getPermissionsAsync","existingStatus","finalStatus","requestPermissionsAsync","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","getExpoPushTokenAsync","experienceId","setNotificationChannelAsync","importance","AndroidImportance","HIGH","vibrationPattern","lightColor","registerForPushNotificationsAsync","getTotalMemory","ram","NavigationContainer","linking","theme","screenOptions","cardStyle","LoginScreen","RegisterStack","ForgotPasswordScreen","logoContainer","loginError","loginButton","loginButtonText","forgotPassword","registerButton","usernameInput","signupText","signupSection","setIdentifier","setLoginError","apiKeys","forEach","authenticateUser","appStoreId","x","y","version","xmlSpace","G","module","exports","Step1","Step2","Step3","registerationButton","nextButtonText","titleText","checkAllDetailsProvided","existingInfo","test","usernameCheck","emailCheck","handleNext","registerationError","registerationButtonText","uploadVideoButton","helpModalListItem","verifying","setVerifying","showHelpModal","setShowHelpModal","skipProfileVideo","setSkipProfileVideo","setRegisterationError","profileVideoIsValid","sendUserData","profileVideoFileName","signedProfileVideoUploadUrl","registerUser","hasBorder","overflow","emailSent","setEmailSent","emailError","setEmailError","found","createPasswordReset","ConnectionFailedScreen","contentStyle","MainTabStack","UserProfileScreen","MediaScreen","ShareScreen","CommentsScreen","CommentsRepliesScreen","PostScreen","ChatScreen","ChatListScreen","CreateChatScreen","EditUserDetailsScreen","AccountScreen","SettingsScreen","PrivacyPolicyScreen","TermsOfUseScreen","OtherUserContactsScreen","EditPostScreen","FollowersModeScreen","AccountVisibilityScreen","EmailVerificationScreen","Tab","createBottomTabNavigator","mounted","detachInactiveScreens","tabBarHideOnKeyboard","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","tabBarIcon","iconName","HomeScreen","SearchStack","AddScreen","ProfileScreen","newPostCreated","isFocussed","setFocussed","feed","setFeed","originalFeed","setOriginalFeed","postIds","setPostIds","connectionsAsSenderOffset","setConnectionsAsSenderOffset","connectionsAsReceiverOffset","setConnectionsAsReceiverOffset","setFeedError","currentVisible","setCurrentVisible","prevVisible","scrolling","setScrolling","positionBeforeScroll","setPositionBeforeScroll","calculateOffsets","friendsInterestsOffset","likedBy","feedTimelineOffset","ids","oldFeed","handleUnMute","initialOffset","applyWindowCorrection","offsetY","windowCorrection","startCorrection","noDuplicatesResponse","getUserFeed","onScroll","contentOffset","items","onMomentumScrollEnd","hasImage","lottieRef","play","colorSchema","barStyle","unreadChatsCount","foregroundColor","Circle","cx","cy","r","Rect","rx","ry","file","showGifsModal","setShowGifsModal","setGif","setWidth","thumbnail","setThumbnail","createPostData","thumbnailUri","thumbnailFormat","mimetype","format","handlePostCreation","handleVideoUpload","compressorUpload","httpMethod","handleLargeFileCompression","gifUrl","pickMedia"],"mappings":"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","file":"static/js/app.b2873533.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  Modal,\n  TouchableOpacity,\n  Text,\n  Dimensions,\n  SafeAreaView,\n  Image,\n  Platform,\n} from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport themeStyle from \"../theme.style\";\nimport { getItemAsync } from \"expo-secure-store\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from \"recyclerlistview\";\n\nconst GifModal = ({ setShowModal, selectGif, active }) => {\n  const [error, setError] = useState(\"\");\n  const [gifs, setGifs] = useState([]);\n\n  const { width: screen } = Dimensions.get(\"window\");\n  const screenWidth = Math.min(screen, 900);\n  const imageHeight = screenWidth / 2;\n  const handleGifSearch = async (searchInput) => {\n    let isCancelled = false;\n    if (!isCancelled) {\n      const tenorApiKey =\n        Platform.OS === \"web\"\n          ? localStorage.getItem(\"tenorApiKey\")\n          : await getItemAsync(\"tenorApiKey\");\n      try {\n        const response = await axios({\n          method: \"POST\",\n          url: `https://g.tenor.com/v1/search?q=${\n            searchInput || \"\"\n          }&key=${tenorApiKey}&limit=20&mediaFilter=basic&contentfilter=high&locale=en_US&ar_range=standard`,\n        });\n        if (error) {\n          setError(\"\");\n        }\n\n        setGifs(response.data?.results);\n      } catch (err) {\n        setError(\n          \"Unable to retrieve gifs at the moment, please try again later.\"\n        );\n        return;\n      }\n    }\n    return {\n      cancel() {\n        isCancelled = true;\n      },\n    };\n  };\n\n  const rowRenderer = useCallback((_, item) => {\n    return (\n      <View\n        style={{\n          flex: 1,\n          flexDirection: \"column\",\n          margin: 1,\n          backgroundColor: themeStyle.colors.grayscale.higher,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            selectGif(item?.media[0].tinygif.url); // TODO: pick a smaller gif here. These take too long to render\n            setShowModal(false);\n          }}\n        >\n          <Image\n            style={{\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: screenWidth / Math.round(screenWidth / 200),\n              width: \"100%\",\n            }}\n            resizeMode=\"cover\"\n            source={{\n              uri: item.media[0].nanogif.url,\n            }}\n\n            // mediaUrl={item.media[0].tinygif.url}\n          />\n        </TouchableOpacity>\n      </View>\n    );\n  }, []);\n\n  const getWindowWidth = () => {\n    // To deal with precision issues on android\n    return Math.round(Dimensions.get(\"window\").width * 1000) / 1000 - 6; //Adjustment for margin given to RLV;\n  };\n\n  useEffect(() => {\n    (async () => {\n      await handleGifSearch();\n    })();\n  }, []);\n\n  let dataProvider = new DataProvider((r1, r2) => {\n    return r1 !== r2;\n  }).cloneWithRows([...gifs]);\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      () => 0,\n      (_, dim) => {\n        dim.width = screenWidth / Math.round(screenWidth / 200) - 1;\n        dim.height = screenWidth / Math.round(screenWidth / 200) - 1;\n      }\n    )\n  ).current;\n\n  return (\n    <Modal\n      onRequestClose={async () => {\n        (await handleGifSearch()).cancel();\n        setShowModal(false);\n      }}\n      visible={active}\n    >\n      <SafeAreaView\n        style={{\n          backgroundColor: themeStyle.colors.grayscale.highest,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: themeStyle.colors.grayscale.highest,\n            justifyContent: \"center\",\n            maxWidth: 900,\n            width: \"100%\",\n          }}\n        >\n          <View\n            style={{\n              alignSelf: \"flex-start\",\n              marginHorizontal: 10,\n              marginVertical: 10,\n            }}\n          >\n            <TouchableOpacity\n              onPress={() => setShowModal(false)}\n              style={{\n                justifyContent: \"center\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <AntDesign\n                name=\"arrowleft\"\n                size={24}\n                color={themeStyle.colors.grayscale.lowest}\n              />\n              <Text\n                style={{\n                  color: themeStyle.colors.grayscale.lowest,\n                  fontSize: 16,\n                  marginHorizontal: 10,\n                }}\n              >\n                Select GIF\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <SearchBar\n            placeholder=\"Search GIFs\"\n            onTypingEnd={(v) => handleGifSearch(v)}\n          />\n          {error ? (\n            <View style={{ flex: 1 }}>\n              <Text\n                style={{\n                  color: themeStyle.colors.error.default,\n                  textAlign: \"center\",\n                }}\n              >\n                {error}\n              </Text>\n            </View>\n          ) : (\n            <RecyclerListView\n              style={{ flex: 1 }}\n              dataProvider={dataProvider}\n              layoutProvider={layoutProvider}\n              rowRenderer={rowRenderer}\n            />\n          )}\n        </View>\n      </SafeAreaView>\n    </Modal>\n  );\n};\n\nexport default GifModal;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { View, TextInput, StyleSheet, TouchableOpacity } from \"react-native\";\nimport themeStyle from \"../theme.style\";\n\nconst SearchBar = ({ onTypingEnd, onFocus, onSubmitEditing, placeholder }) => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [typingStatus, setTypingStatus] = useState({\n    name: \"\",\n    typing: false,\n    typingTimeout: 0,\n  });\n  const searchUsers = (searchTerm) => {\n    if (typingStatus.typingTimeout) {\n      clearTimeout(typingStatus.typingTimeout);\n    }\n    setSearchInput(searchTerm);\n    setTypingStatus({\n      name: searchTerm,\n      typing: false,\n      typingTimeout: setTimeout(() => {\n        if (onTypingEnd) {\n          onTypingEnd(searchTerm);\n        }\n      }, 250),\n    });\n  };\n\n  return (\n    <View style={styles.defaultContainerStyles}>\n      <Ionicons\n        style={styles.searchIcon}\n        name=\"search\"\n        size={16}\n        color={\n          searchInput\n            ? themeStyle.colors.grayscale.lowest\n            : themeStyle.colors.grayscale.low\n        }\n      />\n      <TextInput\n        value={searchInput}\n        style={styles.searchBar}\n        placeholderTextColor={themeStyle.colors.grayscale.low}\n        autoCorrect={false}\n        placeholder={placeholder || \"Type here...\"}\n        onChangeText={(v) => searchUsers(v)}\n        returnKeyType=\"search\"\n        onFocus={onFocus ? () => onFocus() : null}\n        onSubmitEditing={onSubmitEditing ? () => onSubmitEditing() : null}\n      />\n      <View>\n        <TouchableOpacity\n          onPress={() => {\n            onTypingEnd(\"\");\n            setSearchInput(\"\");\n          }}\n          style={{\n            paddingHorizontal: 10,\n            zIndex: 10,\n          }}\n        >\n          <Ionicons\n            style={{ opacity: searchInput ? 1 : 0 }}\n            name=\"close\"\n            size={20}\n            color={themeStyle.colors.grayscale.lowest}\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  searchBar: {\n    flex: 1,\n    color: themeStyle.colors.grayscale.lowest,\n    height: \"100%\",\n  },\n  defaultContainerStyles: {\n    flexDirection: \"row\",\n    height: 48,\n    alignItems: \"center\",\n    backgroundColor: themeStyle.colors.grayscale.highest,\n    borderBottomWidth: 1,\n    borderBottomColor: themeStyle.colors.grayscale.low,\n  },\n  searchIcon: {\n    padding: 10,\n  },\n});\nexport default React.memo(SearchBar);\n","import React from \"react\";\nimport {\n  View,\n  Modal,\n  TouchableOpacity,\n  Dimensions,\n  Platform,\n} from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport themeStyle from \"../theme.style\";\nimport Image from \"./Image\";\n\nconst ImageWithCache = ({\n  resizeMode = \"contain\",\n  aspectRatio,\n  mediaUrl,\n  mediaIsSelfie,\n  mediaHeaders,\n  isFullScreen,\n  toggleFullScreen,\n  removeBorderRadius,\n  onLoad,\n  onError,\n  removeBackround,\n  style,\n  background,\n}) => {\n  const { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\n\n  const fullScreenWebStyles =\n    Platform.OS === \"web\" ? { objectFit: \"contain\" } : {};\n\n  const platformProps =\n    Platform.OS === \"web\"\n      ? {\n          webProps: {\n            style: {\n              borderRadius: removeBorderRadius ? 0 : 10,\n              width: \"100%\",\n              objectFit: resizeMode,\n              ...(aspectRatio\n                ? { aspectRatio: aspectRatio }\n                : { width: \"100%\", maxWidth: 900 }),\n              ...style,\n            },\n          },\n        }\n      : {\n          mobileProps: {\n            style: [\n              {\n                borderRadius: removeBorderRadius ? 0 : 10,\n                height: \"100%\",\n              },\n              aspectRatio\n                ? { aspectRatio: aspectRatio }\n                : { width: screenWidth },\n              style && style,\n            ],\n            resizeMode: resizeMode,\n          },\n        };\n\n  if (isFullScreen) {\n    return (\n      <Modal\n        presentationStyle=\"pageSheet\"\n        onRequestClose={() => isFullScreen && toggleFullScreen()}\n      >\n        <View\n          style={{\n            backgroundColor: themeStyle.colors.black,\n            flex: 1,\n          }}\n        >\n          <View\n            style={{\n              position: \"absolute\",\n              top: 10,\n              right: 10,\n              zIndex: 10,\n            }}\n          >\n            <TouchableOpacity onPress={() => toggleFullScreen(false)}>\n              <AntDesign\n                name=\"close\"\n                size={24}\n                color={themeStyle.colors.white}\n                style={{\n                  color: themeStyle.colors.white,\n                  textShadowOffset: {\n                    width: 1,\n                    height: 1,\n                  },\n                  textShadowRadius: 8,\n                  textShadowColor: themeStyle.colors.black,\n                }}\n              />\n            </TouchableOpacity>\n          </View>\n          <Image\n            onError={() => {\n              if (onError) {\n                onError();\n              }\n            }}\n            resizeMode={\"contain\"}\n            source={{ uri: mediaUrl, headers: mediaHeaders || {} }}\n            style={{\n              borderRadius: removeBorderRadius ? 0 : 10,\n              width: \"100%\",\n              height: \"100%\",\n              maxHeight: screenHeight,\n              maxWidth: screenWidth,\n              ...fullScreenWebStyles,\n            }}\n          />\n        </View>\n      </Modal>\n    );\n  }\n\n  return (\n    <View\n      style={[\n        {\n          transform: [{ scaleX: mediaIsSelfie ? -1 : 1 }],\n        },\n      ]}\n    >\n      <View\n        style={{\n          backgroundColor:\n            !removeBackround && !background\n              ? themeStyle.colors.grayscale.higher\n              : background,\n        }}\n      >\n        <Image\n          onError={() => {\n            if (onError) {\n              onError();\n            }\n          }}\n          onLoad={(e) => {\n            if (onLoad) {\n              onLoad(e);\n            }\n          }}\n          source={{\n            uri: mediaUrl,\n            headers: mediaHeaders || {},\n          }}\n          // not using conditional with Platform.OS here for simplicity and less logic\n          {...platformProps}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default React.memo(ImageWithCache);\n","import { useEffect, useState } from \"react\";\nimport { Platform } from \"react-native\";\n\nconst usePersistedWebParams = (newParams = {}) => {\n  const [params, setParams] = useState({});\n  useEffect(() => {\n    if (Platform.OS === \"web\") {\n      const persistedData = localStorage.getItem(\"params\") || \"{}\";\n      // params have values meaning no refresh, so we store it in localstorage\n      if (newParams[Object.keys(newParams)[0]] !== \"[object Object]\") {\n        console.log(\"hey\");\n        localStorage.setItem(\"params\", JSON.stringify(newParams));\n      }\n      setParams(JSON.parse(persistedData));\n    }\n  }, [newParams]);\n  return params;\n};\n\nexport default usePersistedWebParams;\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport {\n  StyleSheet,\n  RefreshControl,\n  SafeAreaView,\n  Text,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Platform,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport PostCard from \"../../../components/PostCard\";\nimport themeStyle from \"../../../theme.style\";\nimport ProfileScreenHeader from \"../../../components/ProfileScreenHeader\";\nimport { useScrollToTop } from \"@react-navigation/native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport PostOptionsModal from \"../../../components/PostOptionsModal\";\nimport { useSelector } from \"react-redux\";\nimport {\n  RecyclerListView,\n  DataProvider,\n  LayoutProvider,\n} from \"recyclerlistview\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\n\nconst ProfileScreen = () => {\n  const [userPosts, setUserPosts] = useState([]);\n  const [userData, setUserData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [allPostsLoaded, setAllPostsLoaded] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [showPostOptions, setShowPostOptions] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [profileVideoVisible, setProfileVideoVisible] = useState(false);\n\n  const nativeGobalUserData = useSelector((state) => state.userData);\n\n  const globalUserData =\n    Platform.OS === \"web\"\n      ? { state: getWebPersistedUserData() }\n      : nativeGobalUserData;\n\n  const navigation = useNavigation();\n\n  const listRef = useRef(null);\n\n  const { height: screenHeight, width: screenWidth } = Dimensions.get(\"window\");\n\n  const mobileSpecificListProps =\n    Platform.OS !== \"web\"\n      ? {\n          renderAheadOffset: screenHeight,\n        }\n      : {};\n\n  useScrollToTop(\n    useRef({\n      scrollToTop: () => {\n        listRef.current?.scrollToOffset({ offset: 2000 });\n      },\n    })\n  );\n\n  useScrollToTop(listRef);\n  const ViewTypes = {\n    HEADER: 0,\n    STANDARD: 1,\n  };\n  const getUserPosts = async () => {\n    if (!allPostsLoaded) {\n      const { success, response } = await apiCall(\n        \"GET\",\n        `/user/posts/${userPosts.length}`\n      );\n\n      if (success) {\n        if (!response.length && userPosts.length) {\n          setAllPostsLoaded(true);\n        } else {\n          setUserPosts([...userPosts, ...response]);\n        }\n      } else if (userPosts.length) {\n        setAllPostsLoaded(true);\n      }\n    }\n  };\n\n  const handleNavigation = (post) => {\n    navigation.navigate(\"MediaScreen\", { post });\n  };\n\n  const rowRenderer = useCallback((type, item, index, extendedState) => {\n    //We have only one view type so not checks are needed here\n\n    if (type === ViewTypes.HEADER) {\n      return (\n        <ProfileScreenHeader\n          userData={extendedState.userData}\n          navigation={navigation}\n          isVisible={extendedState.profileVideoVisible}\n        />\n      );\n    }\n    if (!item.deleted) {\n      return (\n        <PostCard\n          post={item}\n          setShowPostOptions={triggerOptionsModal}\n          screenHeight={screenHeight}\n          screenWidth={screenWidth}\n          handleNavigation={handleNavigation}\n          isVisible={false}\n          disableVideo\n        />\n      );\n    }\n  }, []);\n\n  let dataProvider = new DataProvider(\n    (r1, r2) => {\n      return r1._id !== r2._id;\n    }\n    // (index) => `${userPosts[index]?._id}`\n  ).cloneWithRows([{}, ...userPosts]);\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      // (index) => index,\n      (index) => {\n        if (index === 0) {\n          return ViewTypes.HEADER;\n        } else {\n          return ViewTypes.STANDARD;\n        }\n      },\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 600;\n      }\n    )\n  ).current;\n\n  const getUserData = async () => {\n    setLoading(true);\n    const { success, response } = await apiCall(\"GET\", `/user/data`);\n    if (success) {\n      setUserData(response);\n    }\n    setLoading(false);\n  };\n\n  const reportPost = async (reasonIndex) => {\n    setLoading(true);\n    const { success } = await apiCall(\"POST\", \"/posts/report\", {\n      postId: showPostOptions?._id,\n      reason: reasonIndex,\n    });\n    setLoading(false);\n    if (!success) {\n      setError(\"An error occurred.\");\n    } else {\n      setShowPostOptions(null);\n    }\n  };\n\n  const editPost = () => {\n    setShowPostOptions(null);\n    navigation.navigate(\"EditPostScreen\", { postId: showPostOptions?._id });\n  };\n\n  const deletePost = async () => {\n    const { success } = await apiCall(\n      \"DELETE\",\n      `/posts/remove/${showPostOptions?._id}`\n    );\n    if (success) {\n      const newPosts = userPosts.map((post) => {\n        if (post._id === showPostOptions?._id) {\n          return {\n            ...post,\n            deleted: true,\n            customKey: `${post._id}-deleted}`,\n          };\n        }\n        return post;\n      });\n      setUserPosts(newPosts);\n      setShowPostOptions(null);\n    }\n  };\n\n  const onRefresh = async () => {\n    setRefreshing(true);\n    setAllPostsLoaded(false);\n    const { success, response } = await apiCall(\"GET\", \"/user/posts/0\");\n    if (success) {\n      setUserPosts([]);\n      setUserPosts([...response]);\n    }\n    await getUserData();\n    setRefreshing(false);\n  };\n\n  const triggerOptionsModal = (post) => {\n    setError(\"\");\n    setShowPostOptions(post);\n  };\n\n  useEffect(() => {\n    (async () => {\n      navigation.addListener(\"focus\", async () => {\n        // await getUserPosts();\n        await getUserData();\n      });\n    })();\n    return () => {\n      navigation.removeListener(\"focus\");\n      setUserPosts([]);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (globalUserData.state && Object.keys(userData).length === 0) {\n      setUserData(globalUserData.state);\n    }\n  }, [globalUserData?.state]);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          paddingVertical: 10,\n          paddingHorizontal: 15,\n          borderBottomWidth: 1,\n        }}\n      >\n        <Text\n          style={{ fontSize: 20, color: themeStyle.colors.grayscale.lowest }}\n          numberOfLines={1}\n        >\n          {userData?.username || \"\"}\n        </Text>\n        <TouchableOpacity onPress={() => navigation.navigate(\"SettingsScreen\")}>\n          <MaterialCommunityIcons\n            name=\"cog-outline\"\n            size={24}\n            color={themeStyle.colors.grayscale.lowest}\n          />\n        </TouchableOpacity>\n      </View>\n      {!userData?.verified && userData?.profileVideoUrl ? (\n        <View\n          style={{\n            backgroundColor: \"rgba(19, 130, 148, 0.2)\",\n            padding: 10,\n          }}\n        >\n          <Text\n            style={{\n              textAlign: \"center\",\n              color: themeStyle.colors.grayscale.lowest,\n            }}\n          >\n            Your account is not verified yet.{\" \"}\n            <Text\n              style={{\n                color: themeStyle.colors.secondary.default,\n                fontWeight: \"700\",\n              }}\n              onPress={() => navigation.navigate(\"EmailVerificationScreen\")}\n            >\n              Verify\n            </Text>\n          </Text>\n        </View>\n      ) : null}\n      {userData ? (\n        <RecyclerListView\n          {...mobileSpecificListProps}\n          ref={listRef}\n          style={{ minHeight: 1, minWidth: 1 }}\n          dataProvider={dataProvider}\n          layoutProvider={layoutProvider}\n          onEndReached={() => getUserPosts()}\n          onEndReachedThreshold={0.5}\n          rowRenderer={rowRenderer}\n          extendedState={{ userData, profileVideoVisible }}\n          forceNonDeterministicRendering\n          onVisibleIndicesChanged={(i) => {\n            // TODO: test on old device to see if preview video rerenders cause crashes\n            if (i?.[0] === 0 && !profileVideoVisible) {\n              setProfileVideoVisible(true);\n            } else if (profileVideoVisible) {\n              setProfileVideoVisible(false);\n            }\n          }}\n          scrollViewProps={{\n            contentContainerStyle: {\n              maxWidth: 900,\n              alignSelf: \"center\",\n            },\n            removeClippedSubviews: true,\n            refreshControl: (\n              <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n            ),\n            // decelerationRate: 0.9,\n          }}\n\n          // ListHeaderComponent={renderHeaderComponent}\n        />\n      ) : null}\n\n      <PostOptionsModal\n        showOptions={!!showPostOptions}\n        setShowPostOptions={setShowPostOptions}\n        reportPost={reportPost}\n        deletePost={deletePost}\n        editPost={editPost}\n        belongsToUser={true}\n        error={error}\n      />\n    </SafeAreaView>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\nexport default ProfileScreen;\n","import React from \"react\";\nimport themeStyle from \"../theme.style\";\nimport { TouchableOpacity, View, Text, ScrollView } from \"react-native\";\nimport PreviewVideo from \"./PreviewVideo\";\nimport { AntDesign, Ionicons, MaterialIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst ProfileScreenHeader = React.forwardRef(\n  ({ children, userData, isVisible, ...props }, ref) => {\n    const navigation = useNavigation();\n    return (\n      <ScrollView ref={ref} {...props}>\n        <View>\n          <PreviewVideo\n            uri={userData?.profileVideoUrl}\n            isFullWidth\n            previewText={\"Tap to play\"}\n            flipProfileVideo={userData?.flipProfileVideo}\n            isVisible={isVisible}\n          />\n          {userData?.followersMode ? (\n            <View\n              style={{\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                flexDirection: \"row\",\n                marginTop: 20,\n              }}\n            >\n              <MaterialIcons\n                name=\"public\"\n                size={16}\n                color={themeStyle.colors.grayscale.lowest}\n              />\n              <Text\n                style={{\n                  color: themeStyle.colors.grayscale.lowest,\n                  textAlign: \"center\",\n                  fontWeight: \"700\",\n                  fontSize: 12,\n                  marginLeft: 5,\n                }}\n              >\n                Your account is in followers mode.\n              </Text>\n            </View>\n          ) : null}\n          {!!userData?.private && !userData?.followersMode ? (\n            <Text\n              style={{\n                color: themeStyle.colors.grayscale.lowest,\n                textAlign: \"center\",\n                marginTop: 10,\n                fontWeight: \"700\",\n                fontSize: 12,\n              }}\n            >\n              <AntDesign\n                name=\"lock\"\n                size={16}\n                color={themeStyle.colors.grayscale.lower}\n              />\n              Your activity is only visible to contacts\n            </Text>\n          ) : null}\n          <View style={{ padding: 5, marginTop: 20 }}>\n            <View\n              style={{\n                flexDirection: \"column\",\n              }}\n            >\n              <Text\n                style={{\n                  fontWeight: \"700\",\n                  color: themeStyle.colors.grayscale.lowest,\n                }}\n              >\n                {userData?.username}{\" \"}\n              </Text>\n              {userData?.jobTitle ? (\n                <Text style={{ color: themeStyle.colors.grayscale.lower }}>\n                  {userData?.jobTitle}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                marginVertical: 20,\n              }}\n            >\n              <Ionicons\n                name=\"people\"\n                size={24}\n                color={themeStyle.colors.grayscale.lower}\n              />\n              <TouchableOpacity onPress={() => navigation.navigate(\"Contacts\")}>\n                <Text\n                  style={{\n                    marginHorizontal: 10,\n                    color: themeStyle.colors.primary.default,\n                  }}\n                >\n                  {userData?.numberOfFriends}{\" \"}\n                  {userData?.followersMode ? \"followers\" : \"contacts\"}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n        {children}\n      </ScrollView>\n    );\n  }\n);\n\nProfileScreenHeader.displayName = \"ProfileScreenHeader\";\n\nexport default React.memo(\n  ProfileScreenHeader,\n  (prev, next) =>\n    prev.userData === next.userData && prev.isVisible === next.isVisible\n);\n","import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  FlatList,\n  Keyboard,\n  Text,\n  View,\n  Dimensions,\n} from \"react-native\";\nimport UserThumbnail from \"../../../components/UserThumbnail\";\nimport themeStyle from \"../../../theme.style\";\nimport UserSearchBar from \"../../../components/UserSearchBar\";\nimport { StatusBar } from \"expo-status-bar\";\nimport SearchFeedItem from \"../../../components/SearchFeedItem\";\nimport * as SQLite from \"expo-sqlite\";\nimport {\n  createUserSearchHistoryTable,\n  insertUserSearchHistory,\n  getUserSearchHistory,\n  deleteUserSearchHistoryTable,\n} from \"../../../helpers/sqlite/userSearchHistory\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport {\n  RecyclerListView,\n  DataProvider,\n  LayoutProvider,\n} from \"recyclerlistview\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst SearchScreen = () => {\n  const [results, setResults] = useState([]);\n  const [searchFeed, setSearchFeed] = useState([]);\n  const [showAllResults, setShowAllResults] = useState(false);\n  const [hideFeedAndSuggestions, setHideFeedAndSuggestions] = useState(false);\n  const [userSearchHistory, setUserSearchHistory] = useState([]);\n  const [searchItemsVisible, setSearchItemsVisible] = useState(false);\n  const [lastSuccessfullSearchQuery, setLastSuccessfullSearchQuery] =\n    useState(\"\");\n\n  const { height: screenHeight, width: screenWidth } = Dimensions.get(\"window\");\n\n  const mobileSpecificListProps =\n    Platform.OS !== \"web\"\n      ? {\n          renderAheadOffset: 300,\n        }\n      : {};\n\n  const db = SQLite.openDatabase(\"localdb\");\n\n  const onUserSearch = async (searchQuery) => {\n    setLastSuccessfullSearchQuery(searchQuery);\n    if (!results.length) {\n      return;\n    }\n\n    await createUserSearchHistoryTable(db);\n\n    await insertUserSearchHistory({\n      db,\n      searchQuery,\n    });\n    Keyboard.dismiss();\n    const newHistory = await getUserSearchHistory(db);\n    setUserSearchHistory(newHistory);\n\n    setShowAllResults(true);\n  };\n\n  const getSearchFeed = async () => {\n    const { response, success } = await apiCall(\n      \"GET\",\n      `/posts/searchfeed/${searchFeed.length}`\n    );\n    if (success) {\n      const newFeed = [...searchFeed, ...response];\n      setSearchFeed(\n        [...searchFeed, ...response].filter(\n          (item) => !!item.postAuthor.profileGifUrl === true // Move this to the backend where we only return posts for users with completed profiles (with profile gifs)\n        )\n      );\n      if (!searchItemsVisible && newFeed.length) {\n        setTimeout(() => setSearchItemsVisible(true), 400);\n      }\n    }\n  };\n\n  const rowRenderer = useCallback(\n    (type, item, index) => {\n      //We have only one view type so not checks are needed here\n      return <SearchFeedItem post={item} />;\n      // return <FastImage source={{uri:item.mediaUrl}}/>\n    },\n    [searchItemsVisible]\n  );\n\n  const thumbnailRenderer = useCallback(\n    (_, item, index, extendedState) => {\n      return (\n        <UserThumbnail\n          key={item._id}\n          user={item}\n          avatarSize={extendedState?.showAllResults ? 70 : 40}\n          fontSize={!extendedState?.showAllResults ? 12 : 14}\n          showSeparator={true}\n          height={extendedState?.showAllResults ? 100 : 80}\n        />\n      );\n    },\n    [searchItemsVisible, showAllResults]\n  );\n\n  let dataProvider = new DataProvider((r1, r2) => {\n    return r1._id !== r2._id;\n  }).cloneWithRows(searchFeed);\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      () => 0,\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 150;\n      }\n    )\n  ).current;\n\n  let userDataProvider = new DataProvider((r1, r2) => {\n    return r1._id !== r2._id;\n  }).cloneWithRows(results);\n\n  const userLayoutProvider = useRef(\n    new LayoutProvider(\n      () => 0,\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 80;\n      }\n    )\n  ).current;\n\n  const userLayoutProviderAllResults = useRef(\n    new LayoutProvider(\n      () => 0,\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 100;\n      }\n    )\n  ).current;\n\n  const onEndReached = async () => {\n    const { response } = await apiCall(\n      \"POST\",\n      `/user/search/${results.length}`,\n      {\n        searchTerm: lastSuccessfullSearchQuery,\n      }\n    );\n    if (response.length) {\n      setResults([...results, ...(response || [])]);\n    }\n  };\n\n  useEffect(() => {\n    const keyboardDidShowListener = Keyboard.addListener(\n      \"keyboardDidShow\",\n      () => {\n        setHideFeedAndSuggestions(true);\n      }\n    );\n    const keyboardDidHideListener = Keyboard.addListener(\n      \"keyboardDidHide\",\n      () => {\n        if (!results.length && !lastSuccessfullSearchQuery) {\n          setHideFeedAndSuggestions(false);\n        }\n      }\n    );\n\n    (async () => {\n      await createUserSearchHistoryTable(db);\n\n      await getSearchFeed();\n\n      const history = await getUserSearchHistory(db);\n      setUserSearchHistory(history || []);\n    })();\n\n    return () => {\n      keyboardDidHideListener.remove();\n      keyboardDidShowListener.remove();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <SafeAreaView\n        style={{\n          flex: 0,\n          backgroundColor: themeStyle.colors.grayscale.highest,\n        }}\n      />\n      {Platform.OS === \"ios\" ? <StatusBar translucent={true} /> : null}\n      <SafeAreaView style={styles.container}>\n        <View style={{ flex: 1 }}>\n          <UserSearchBar\n            onFocus={() => {\n              setShowAllResults(false);\n              setHideFeedAndSuggestions(true);\n            }}\n            onSubmitEditing={(searchQuery) => onUserSearch(searchQuery)}\n            setResults={setResults}\n            userSearchHistory={userSearchHistory}\n            onClear={async () => {\n              await deleteUserSearchHistoryTable(db);\n              setUserSearchHistory([]);\n            }}\n            setShowAllResults={setShowAllResults}\n            showAllResults={showAllResults}\n            onReset={() => !results.length && setHideFeedAndSuggestions(false)}\n            resultsVisible={!!results.length}\n            feedIsVisible={!hideFeedAndSuggestions}\n            offset={results.length && showAllResults ? results.length : 0}\n          />\n          {!hideFeedAndSuggestions &&\n          !results.length &&\n          searchFeed.length >= 20 ? (\n            <View\n              style={{\n                borderBottomWidth: 2,\n                borderBottomColor: themeStyle.colors.grayscale.cardsOuter,\n                backgroundColor: themeStyle.colors.grayscale.cards,\n              }}\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.primary.default,\n                  fontSize: 20,\n                  marginHorizontal: 5,\n                  marginTop: 10,\n                  marginBottom: 10,\n                }}\n              >\n                Explore\n              </Text>\n            </View>\n          ) : null}\n          {results.length && showAllResults ? (\n            <RecyclerListView\n              style={{ minHeight: 1, minWidth: 1 }}\n              dataProvider={userDataProvider}\n              layoutProvider={userLayoutProviderAllResults}\n              rowRenderer={thumbnailRenderer}\n              onEndReached={() => onEndReached()}\n              onEndReachedThreshold={0.5}\n              extendedState={{ showAllResults }}\n            />\n          ) : results.length ? (\n            <RecyclerListView\n              style={{ minHeight: 1, minWidth: 1 }}\n              dataProvider={userDataProvider}\n              layoutProvider={userLayoutProvider}\n              rowRenderer={thumbnailRenderer}\n              onEndReachedThreshold={0.5}\n            />\n          ) : null}\n          {!hideFeedAndSuggestions &&\n          !results.length &&\n          searchFeed.length &&\n          searchItemsVisible ? (\n            <RecyclerListView\n              {...mobileSpecificListProps}\n              style={{\n                minHeight: 1,\n                minWidth: 1,\n              }}\n              dataProvider={dataProvider}\n              layoutProvider={layoutProvider}\n              onEndReached={() => getSearchFeed()}\n              onEndReachedThreshold={0.5}\n              rowRenderer={rowRenderer}\n              scrollViewProps={{\n                removeClippedSubviews: true,\n              }}\n            />\n          ) : null}\n        </View>\n      </SafeAreaView>\n    </Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\nexport default SearchScreen;\n","import React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport Avatar from \"../Avatar\";\nimport themeStyle from \"../../theme.style\";\n\nconst Thumbnail = ({\n  avatarSize,\n  user,\n  navigation,\n  fontSize,\n  isRequest,\n  acceptFriendRequest,\n  rejectFriendRequest,\n}) => (\n  <View\n    style={{\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n    }}\n  >\n    <Avatar\n      navigation={navigation}\n      size={avatarSize}\n      avatarUrl={user.profileGifUrl}\n      profileGifHeaders={user.profileGifHeaders}\n      preventClicks\n      flipProfileVideo={user?.flipProfileVideo}\n    />\n    <View\n      style={{\n        justifyContent: \"space-around\",\n        marginLeft: 20,\n        flex: 1,\n        paddingRight: 10,\n      }}\n    >\n      <Text\n        numberOfLines={1}\n        style={{\n          fontWeight: \"700\",\n          maxWidth: 200,\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: fontSize || 14,\n        }}\n      >\n        {user.username}\n      </Text>\n      <Text\n        style={{\n          maxWidth: 200,\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: fontSize || 14,\n        }}\n        numberOfLines={1}\n      >\n        {user.firstName} {user.lastName}\n      </Text>\n      {user.jobTitle && (\n        <Text\n          numberOfLines={1}\n          style={{\n            color: themeStyle.colors.grayscale.low,\n            maxWidth: 200,\n            fontSize: fontSize || 14,\n          }}\n        >\n          {user.jobTitle}\n        </Text>\n      )}\n    </View>\n    {isRequest ? (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flex: 1,\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => rejectFriendRequest(user)}\n          style={{\n            marginHorizontal: 10,\n            borderWidth: 1,\n            borderColor: themeStyle.colors.grayscale.lowest,\n            padding: 2,\n            borderRadius: 5,\n          }}\n        >\n          <Text style={{ color: themeStyle.colors.white }}>Remove</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => acceptFriendRequest(user)}\n          style={{\n            marginHorizontal: 10,\n            backgroundColor: themeStyle.colors.secondary.default,\n            paddingVertical: 2,\n            paddingHorizontal: 10,\n            borderRadius: 5,\n          }}\n        >\n          <Text style={{ color: themeStyle.colors.white }}>Add</Text>\n        </TouchableOpacity>\n      </View>\n    ) : null}\n  </View>\n);\n\nexport default React.memo(Thumbnail);\n","import React from \"react\";\nimport { View, TouchableOpacity, Text } from \"react-native\";\nimport themeStyle from \"../theme.style\";\nimport Avatar from \"./Avatar\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { StackActions, useNavigation } from \"@react-navigation/native\";\nimport Image from \"./Image\";\n\nconst SearchFeedItem = ({ post }) => {\n  const navigation = useNavigation();\n\n  const handleNavigation = () => {\n    const pushScreen = StackActions.push(\"PostScreen\", { post });\n    navigation.dispatch(pushScreen);\n  };\n\n  // if (!post || !post?.postAuthor?.profileGifUrl) return null;\n  return (\n    <TouchableOpacity onPress={() => handleNavigation()}>\n      <View\n        style={{\n          backgroundColor: themeStyle.colors.grayscale.cards,\n          borderBottomColor: themeStyle.colors.grayscale.cardsOuter,\n          borderBottomWidth: 3,\n          height: 150,\n        }}\n      >\n        <View\n          style={{\n            flex: 1,\n            flexDirection: \"row\",\n            width: \"100%\",\n            opacity: 1,\n          }}\n        >\n          <Image\n            source={{\n              uri: post.thumbnailUrl || post.mediaUrl,\n              headers: post.thumbnailHeaders || post.mediaHeaders,\n            }}\n            style={{\n              width: 146,\n              height: 146,\n              opacity: 1,\n              backgroundColor: themeStyle.colors.grayscale.high,\n            }}\n            webProps={{\n              style: {\n                objectFit: \"cover\",\n              },\n            }}\n          />\n          <View style={{ flexDirection: \"row\", flex: 1 }}>\n            <Text\n              style={{\n                flex: 1,\n                color: themeStyle.colors.grayscale.lowest,\n                marginLeft: 10,\n              }}\n            >\n              {post.body}\n            </Text>\n            <View\n              style={{\n                opacity: 0.5,\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n                marginRight: 10,\n                paddingVertical: 5,\n              }}\n            >\n              {post.mediaType === \"video\" ? (\n                <View\n                  style={{\n                    zIndex: 1,\n                  }}\n                >\n                  <Feather\n                    name=\"play\"\n                    size={20}\n                    color={themeStyle.colors.grayscale.lowest}\n                  />\n                </View>\n              ) : (\n                // need this as view here, not null\n                <View />\n              )}\n              <Avatar\n                style={{ borderWidth: 1 }}\n                size={25}\n                avatarUrl={post.postAuthor.profileGifUrl}\n                profileGifHeaders={post.postAuthor.profileGifHeaders}\n                flipProfileVideo={post.postAuthor.flipProfileVideo}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\nexport default React.memo(SearchFeedItem);\n","const createUserSearchHistoryTable = async (db) => {\n  db.transaction(\n    (tx) => {\n      tx.executeSql(`\n          CREATE TABLE IF NOT EXISTS user_search_history (\n            id TEXT,\n            searchQuery TEXT,\n            date TEXT\n          )\n          `);\n    },\n    (error) => {\n      console.log(\"db error creating user_search_history table\");\n      console.log(error);\n    },\n    (success) => {\n      // console.log(\"created user_search_history table\");\n    }\n  );\n};\n\nexport default createUserSearchHistoryTable;\n","const deleteUserSearchHistoryTable = async (db) => {\n  db.transaction(\n    (tx) => {\n      tx.executeSql(`DROP TABLE user_search_history `);\n    },\n    (error) => {\n      console.log(\"db error creating user_search_history table\");\n      console.log(error);\n    },\n    (success) => {\n      console.log(\"delete user_search_history table\");\n    }\n  );\n};\n\nexport default deleteUserSearchHistoryTable;\n","const getUserSearchHistory = async (db) => {\n  return new Promise((resolve, reject) => {\n    db.transaction((tx) => {\n      tx.executeSql(\n        \"select * from user_search_history order by date DESC LIMIT 10\",\n        [],\n        (tx, results) => {\n          resolve(results.rows._array);\n        },\n        (tx, error) => {\n          reject(\"Error SELECT: \", error.message);\n        }\n      );\n    });\n  });\n};\nexport default getUserSearchHistory;\n","const insertUserSearchHistory = async ({ db, searchQuery }) => {\n  if (!searchQuery) return;\n  const date = Date.now().toString();\n  db.transaction(\n    (tx) => {\n      tx.executeSql(\n        `insert into user_search_history (\n            searchQuery,\n            date\n            ) values (?,?)`,\n        [searchQuery, date]\n      );\n    },\n    (t, error) => {\n      console.log(t, error);\n    },\n    (t, success) => {\n      console.log(\"inserted into user_search_history\");\n    }\n  );\n};\nexport default insertUserSearchHistory;\n","import React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport ContactsScreen from \"./Contacts\";\nimport ContactRequestsScreen from \"./ContactRequests\";\nimport themeStyle from \"../../../../theme.style\";\n\nconst Stack = createNativeStackNavigator();\nconst ContactsStack = () => (\n  <Stack.Navigator initialRouteName=\"ContactsScreen\">\n    <Stack.Screen\n      options={{\n        headerShown: true,\n        headerTintColor: themeStyle.colors.primary.default,\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n        headerStyle: {\n          backgroundColor: themeStyle.colors.grayscale.highest,\n        },\n        title: \"Contacts\",\n      }}\n      name=\"ContactsScreen\"\n      component={ContactsScreen}\n    />\n    <Stack.Screen\n      name=\"ContactRequestsScreen\"\n      component={ContactRequestsScreen}\n      options={{\n        headerShown: true,\n        headerTintColor: themeStyle.colors.primary.default,\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n        headerStyle: {\n          backgroundColor: themeStyle.colors.grayscale.highest,\n        },\n        title: \"Requests\",\n      }}\n    />\n  </Stack.Navigator>\n);\n\nexport default ContactsStack;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  RefreshControl,\n  Text,\n  SectionList,\n  TouchableOpacity,\n  ActivityIndicator,\n  Platform,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport apiCall from \"../../../../helpers/apiCall\";\nimport UserThumbnail from \"../../../../components/UserThumbnail\";\nimport themeStyle from \"../../../../theme.style\";\nimport { useSelector } from \"react-redux\";\nimport getWebPersistedUserData from \"../../../../helpers/getWebPersistedData\";\nconst ContactsScreen = () => {\n  const [friends, setFriends] = useState([]);\n  const [requests, setRequests] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [offsets, setOffsets] = useState({});\n  const navigation = useNavigation();\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const nativeUserData = useSelector((state) => state.userData)?.state;\n\n  const userData =\n    Platform.OS === \"web\" ? getWebPersistedUserData() : nativeUserData;\n\n  const sectionListRef = useRef(null);\n\n  const getFriends = async () => {\n    const { success, response } = await apiCall(\n      \"POST\",\n      `/user/friend/fetch/all`,\n      offsets\n    );\n\n    const { friendsAsSenderOffset, friendsAsReceiverOffset } = response;\n    setOffsets({ friendsAsSenderOffset, friendsAsReceiverOffset });\n    if (success) {\n      setSections([\n        response.requests.length\n          ? {\n              title: \"Requests received\",\n              name: \"requests\",\n              data: response.requests,\n            }\n          : { data: response.requests },\n        {\n          title: \"My contacts\",\n          name: \"contacts\",\n          data: response.friends,\n        },\n      ]);\n      setFriends(response.friends);\n      setRequests(response.requests);\n    }\n  };\n\n  const acceptFriendRequest = async (user) => {\n    const { success } = await apiCall(\n      \"GET\",\n      `/user/friend/request/accept/${user._id}`\n    );\n    if (success) {\n      const index = sections[0].data.map((e) => e._id).indexOf(user._id);\n\n      const updatedSections = [\n        sections[0].data?.length - 1 !== 0\n          ? { ...sections[0], data: [...sections[0].data.splice(index, 1)] }\n          : { name: \"\", data: [] },\n        {\n          ...sections[1],\n          data: [...sections[1].data, { ...user, accepted: true }],\n        },\n      ];\n      setSections(updatedSections);\n    }\n    return true;\n  };\n\n  const rejectFriendRequest = async (user) => {\n    const { success } = await apiCall(\n      \"GET\",\n      `/user/friend/request/reject/${user._id}`\n    );\n    if (success) {\n      const index = sections[0].data.map((e) => e._id).indexOf(user._id);\n      const updatedSections = [\n        sections[0].data?.length - 1 !== 0\n          ? { ...sections[0], data: [...sections[0].data.splice(index, 1)] }\n          : { name: \"\", data: [] },\n        sections[1],\n      ];\n      setSections(updatedSections);\n    }\n\n    return true;\n  };\n\n  const renderItem = useCallback(\n    ({ item }) => (\n      <UserThumbnail\n        isRequest={item.accepted === false}\n        user={item}\n        avatarSize={50}\n        acceptFriendRequest={acceptFriendRequest}\n        rejectFriendRequest={rejectFriendRequest}\n      />\n    ),\n    [sections[0]?.data?.length, sections[1]?.data?.length]\n  );\n  const keyExtractor = useCallback((item, i) => item._id + i, [sections]);\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await getFriends(true);\n    setRefreshing(false);\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      setRefreshing(Platform.OS === \"android\");\n      setLoading(Platform.OS === \"ios\");\n      await getFriends();\n      setLoading(false);\n      setRefreshing(false);\n    })();\n  }, []);\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        style={{\n          alignSelf: \"flex-end\",\n          marginHorizontal: 20,\n          marginTop: 20,\n          marginBottom: 10,\n        }}\n        onPress={() => navigation.navigate(\"ContactRequestsScreen\")}\n      >\n        <Text\n          style={{\n            color: themeStyle.colors.secondary.default,\n            fontSize: 16,\n            fontWeight: \"700\",\n          }}\n        >\n          All requests\n        </Text>\n      </TouchableOpacity>\n      {loading ? (\n        <ActivityIndicator\n          size={\"small\"}\n          color={themeStyle.colors.grayscale.low}\n          animating={loading}\n        />\n      ) : null}\n      <SectionList // TODO convert to recycler list view\n        ref={sectionListRef}\n        stickySectionHeadersEnabled={true}\n        sections={sections}\n        renderItem={renderItem}\n        keyExtractor={keyExtractor}\n        keyboardShouldPersistTaps=\"always\"\n        refreshControl={\n          <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n        }\n        renderSectionHeader={({ section: { title, name } }) =>\n          title && (\n            <View\n              style={{ backgroundColor: themeStyle.colors.grayscale.highest }}\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.grayscale.lowest,\n                  marginVertical: 10,\n                  marginHorizontal: 10,\n                  fontWeight: \"700\",\n                }}\n              >\n                {title}\n              </Text>\n            </View>\n          )\n        }\n        renderSectionFooter={({ section: { name } }) =>\n          name === \"requests\" && requests?.length ? (\n            <TouchableOpacity\n              onPress={() => navigation.navigate(\"ContactRequestsScreen\")}\n              style={{\n                height: 48,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.secondary.default,\n                  textAlign: \"center\",\n                }}\n              >\n                View all requests\n              </Text>\n            </TouchableOpacity>\n          ) : name === \"contacts\" && friends?.length ? (\n            <TouchableOpacity\n              style={{\n                height: 48,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              onPress={() =>\n                navigation.navigate(\"OtherUserContactsScreen\", {\n                  userId: userData?._id,\n                  firstName: userData?.firstName,\n                })\n              }\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.secondary.default,\n                  textAlign: \"center\",\n                }}\n              >\n                View all contacts\n              </Text>\n            </TouchableOpacity>\n          ) : null\n        }\n        contentContainerStyle={{ flexGrow: 1 }}\n        onEndReachedThreshold={0.5}\n        initialNumToRender={10}\n        maxToRenderPerBatch={5}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n    maxWidth: 900,\n    alignSelf: \"center\",\n    width: \"100%\",\n  },\n});\n\nexport default ContactsScreen;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  RefreshControl,\n  Dimensions,\n  ActivityIndicator,\n  Platform,\n} from \"react-native\";\nimport themeStyle from \"../../../../theme.style\";\nimport apiCall from \"../../../../helpers/apiCall\";\nimport UserThumbnail from \"../../../../components/UserThumbnail\";\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from \"recyclerlistview\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nconst ContactRequestsScreen = () => {\n  const [currentTab, setCurrentTab] = useState(\"received\");\n  const [friendRequestsReceived, setFriendRequestsReceived] = useState([]);\n  const [friendRequestsSent, setFriendRequestsSent] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { width: screenWidth } = Dimensions.get(\"window\");\n\n  const getFriendRequests = async () => {\n    const { success, response } = await apiCall(\n      \"POST\",\n      \"/user/friend/requests\",\n      {\n        sentOffset: friendRequestsSent?.length,\n        receivedOffset: friendRequestsReceived?.length,\n      }\n    );\n\n    if (success) {\n      setFriendRequestsReceived([\n        ...friendRequestsReceived,\n        ...response.received,\n      ]);\n      setFriendRequestsSent([...friendRequestsSent, ...response.sent]);\n    }\n  };\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await getFriendRequests();\n    setRefreshing(false);\n  }, []);\n  const rowRenderer = useCallback(\n    (_, item) => <UserThumbnail user={item} avatarSize={50} />,\n    [friendRequestsReceived.length, friendRequestsSent.length]\n  );\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      () => 0,\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 80;\n      }\n    )\n  ).current;\n\n  let dataProvider = new DataProvider((r1, r2) => {\n    return r1._id !== r2._id;\n  }).cloneWithRows(\n    currentTab === \"received\" ? friendRequestsReceived : friendRequestsSent\n  );\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      setRefreshing(true);\n      await getFriendRequests();\n      setRefreshing(false);\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.tabsContainer}>\n        <TouchableOpacity\n          style={[\n            styles.requestsTab,\n            currentTab === \"received\" && styles.activeTab,\n          ]}\n          onPress={() => setCurrentTab(\"received\")}\n        >\n          <Text\n            style={[\n              styles.requestsTabText,\n              currentTab === \"received\" && {\n                color: themeStyle.colors.secondary.default,\n              },\n            ]}\n          >\n            Received\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.requestsTab,\n            currentTab === \"sent\" && styles.activeTab,\n          ]}\n          onPress={() => setCurrentTab(\"sent\")}\n        >\n          <Text\n            style={[\n              styles.requestsTabText,\n              currentTab === \"sent\" && {\n                color: themeStyle.colors.secondary.default,\n              },\n            ]}\n          >\n            Sent\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {(friendRequestsReceived.length && currentTab === \"received\") ||\n      (friendRequestsSent.length && currentTab === \"sent\") ? (\n        <RecyclerListView\n          style={{ minHeight: 1, minWidth: 1 }}\n          rowRenderer={rowRenderer}\n          dataProvider={dataProvider}\n          onEndReached={() => getFriendRequests()}\n          layoutProvider={layoutProvider}\n          onEndReachedThreshold={0.5}\n          scrollViewProps={{\n            refreshControl: (\n              <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n            ),\n          }}\n        />\n      ) : (\n        <ScrollView\n          contentContainerStyle={{ flex: 1 }}\n          refreshControl={\n            <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n          }\n        >\n          <ActivityIndicator\n            size={\"small\"}\n            color={themeStyle.colors.grayscale.low}\n            animating={Platform.OS === \"ios\" ? loading : false}\n          />\n        </ScrollView>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    maxWidth: 900,\n    alignSelf: \"center\",\n    width: \"100%\",\n  },\n  activeTab: {\n    borderBottomWidth: 3,\n    borderBottomColor: themeStyle.colors.secondary.default,\n  },\n  tabsContainer: {\n    flexDirection: \"row\",\n    borderBottomColor: themeStyle.colors.grayscale.high,\n    borderBottomWidth: 1,\n    paddingBottom: 5,\n  },\n  requestsTab: {\n    marginHorizontal: 10,\n    height: 50,\n    alignSelf: \"flex-end\",\n    justifyContent: \"center\",\n    paddingHorizontal: 10,\n  },\n  requestsTabText: {\n    fontWeight: \"700\",\n    color: themeStyle.colors.grayscale.lowest,\n  },\n});\n\nexport default ContactRequestsScreen;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  RefreshControl,\n  SafeAreaView,\n  Dimensions,\n  Platform,\n} from \"react-native\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\nimport PostCard from \"../../../components/PostCard\";\nimport ProfileInfo from \"../../../components/ProfileInfo\";\nimport ContentLoader from \"../../../components/ContentLoader\";\nimport PostOptionsModal from \"../../../components/PostOptionsModal\";\nimport { useSelector } from \"react-redux\";\nimport makeCancelable from \"../../../helpers/makeCancelable\";\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from \"recyclerlistview\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\n\nconst UserProfileScreen = (props) => {\n  const { userId } = props.route.params;\n  const [user, setUser] = useState({});\n  const [userPosts, setUserPosts] = useState([]);\n  const [accepted, setAccepted] = useState(false);\n  const [allPostsLoaded, setAllPostsLoaded] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [visibleItems, setVisibleItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showPostOptions, setShowPostOptions] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [profileVideoVisible, setProfileVideoVisible] = useState(false);\n\n  const nativeUserData = useSelector((state) => state.userData);\n\n  const userData =\n    Platform.OS === \"web\"\n      ? { state: getWebPersistedUserData() }\n      : nativeUserData;\n\n  const isFocused = useIsFocused();\n\n  const { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\n  const mobileSpecificListProps =\n    Platform.OS !== \"web\"\n      ? {\n          renderAheadOffset: screenHeight,\n        }\n      : {};\n  const navigation = useNavigation();\n\n  const flatlistRef = useRef(null);\n  const ViewTypes = {\n    HEADER: 0,\n    STANDARD: 1,\n  };\n\n  const handleNavigation = (post) => {\n    navigation.navigate(\"MediaScreen\", { post });\n  };\n\n  const reportPost = async (reasonIndex) => {\n    setLoading(true);\n    const { success } = await apiCall(\"POST\", \"/posts/report\", {\n      postId: showPostOptions?._id,\n      reason: reasonIndex,\n    });\n    setLoading(false);\n    if (!success) {\n      setError(\"An error occurred.\");\n    } else {\n      setShowPostOptions(null);\n    }\n  };\n\n  const editPost = () => {\n    setShowPostOptions(null);\n    navigation.navigate(\"EditPostScreen\", { postId: showPostOptions?._id });\n  };\n  const deletePost = async () => {\n    const { success } = await apiCall(\n      \"DELETE\",\n      `/posts/remove/${showPostOptions?._id}`\n    );\n    if (success) {\n      const newPosts = userPosts.map((post) => {\n        if (post._id === showPostOptions?._id) {\n          return {\n            ...post,\n            deleted: true,\n            customKey: `${post._id}-deleted}`,\n          };\n        }\n        return post;\n      });\n      setUserPosts(newPosts);\n      setShowPostOptions(null);\n    }\n  };\n\n  const sendFriendRequest = async () => {\n    if (user.private) {\n      const userRequestSent = { ...user, requestSent: true };\n\n      setUser(userRequestSent);\n\n      const { success, error } = await apiCall(\n        \"GET\",\n        `/user/friend/request/send/${userId}`\n      );\n\n      if (!success || error === \"CONNECTION_FAILED\") {\n        const userRequestRemoved = { ...user, requestSent: false };\n        setUser(userRequestRemoved);\n      }\n    } else {\n      const userRequestSent = { ...user, isFriend: true };\n\n      setUser(userRequestSent);\n\n      const { success, error } = await apiCall(\n        \"GET\",\n        `/user/friend/request/send/${userId}`\n      );\n\n      if (!success || error === \"CONNECTION_FAILED\") {\n        const userRequestRemoved = { ...user, isFriend: false };\n        setUser(userRequestRemoved);\n      }\n    }\n  };\n\n  const recallFriendRequest = async () => {\n    const userRequestSent = { ...user, requestSent: false };\n\n    setUser(userRequestSent);\n    const { success, error } = await apiCall(\n      \"GET\",\n      `/user/friend/request/recall/${userId}`\n    );\n    if (!success || error === \"CONNECTION_FAILED\") {\n      const userRequestRemoved = { ...user, requestSent: true };\n      setUser(userRequestRemoved);\n    }\n  };\n\n  const acceptFriendRequest = async () => {\n    const userIsFriend = { ...user, isFriend: true };\n\n    setUser(userIsFriend);\n\n    const { success, error } = await apiCall(\n      \"GET\",\n      `/user/friend/request/accept/${userId}`\n    );\n\n    if (!success || error === \"CONNECTION_FAILED\") {\n      const userIsNotFriend = { ...user, isFriend: false };\n\n      setUser(userIsNotFriend);\n    }\n    setAccepted(true);\n  };\n\n  const rejectFriendRequest = async () => {\n    const userRequestRejected = { ...user, requestReceived: false };\n\n    setUser(userRequestRejected);\n    const { success, error } = await apiCall(\n      \"GET\",\n      `/user/friend/request/reject/${userId}`\n    );\n    if (!success || error === \"CONNECTION_FAILED\") {\n      const userRequestRemoved = { ...user, requestReceived: true };\n      setUser(userRequestRemoved);\n    }\n  };\n\n  const removeConnection = async () => {\n    const userIsNotFriend = {\n      ...user,\n      isFriend: false,\n      requestReceived: false,\n      requestSent: false,\n    };\n\n    setUser(userIsNotFriend);\n\n    const { success, error } = await apiCall(\n      \"GET\",\n      `/user/friend/remove/${userId}`\n    );\n    if (success && user.private) {\n      setUserPosts([]);\n    }\n    if (!success || error === \"CONNECTION_FAILED\") {\n      const userIsFriend = { ...user, isFriend: true, requestReceived: false };\n\n      setUser(userIsFriend);\n    }\n  };\n\n  const getUserPosts = async () => {\n    if (!allPostsLoaded) {\n      setLoading(true);\n      const { success, response } = await apiCall(\n        \"GET\",\n        `/user/${userId}/posts/${userPosts.length}`,\n        null\n      );\n      setLoading(false);\n      if (success) {\n        if (!response.length && userPosts.length) {\n          setAllPostsLoaded(true);\n        } else {\n          setUserPosts([...userPosts, ...response]);\n        }\n      } else if (userPosts.length) {\n        setAllPostsLoaded(true);\n      }\n    }\n  };\n\n  const onRefresh = async () => {\n    setRefreshing(true);\n    const { success, response } = await apiCall(\"GET\", `/user/${userId}`, null);\n    if (success) {\n      setUser(response.otherUser);\n    }\n    setRefreshing(false);\n  };\n\n  const triggerOptionsModal = (post) => {\n    setError(\"\");\n    setShowPostOptions(post);\n  };\n\n  const initializeData = makeCancelable(\n    apiCall(\"GET\", `/user/${userId}`, null)\n  );\n\n  const handleReaction = async (post) => {\n    const oldUserposts = userPosts;\n\n    if (post.liked) {\n      setUserPosts((prev) => {\n        return prev.map((p) => {\n          if (p._id === post._id) {\n            return {\n              ...p,\n              liked: false,\n              likes: post.likes ? post.likes - 1 : post.likes,\n            };\n          }\n          return p;\n        });\n      });\n      const { success } = await apiCall(\n        \"GET\",\n        `/posts/like/remove/${post._id}`\n      );\n      if (!success) {\n        setUserPosts(oldUserposts);\n      }\n      return;\n    }\n    setUserPosts((prev) => {\n      return prev.map((p) => {\n        if (p._id === post._id) {\n          return {\n            ...p,\n            liked: true,\n            likes: typeof post.likes === \"number\" ? post.likes + 1 : post.likes,\n          };\n        }\n        return p;\n      });\n    });\n    const { success } = await apiCall(\"GET\", `/posts/like/add/${post._id}`);\n    if (!success) {\n      setUserPosts(oldUserposts);\n    }\n  };\n\n  const rowRenderer = useCallback(\n    (type, item, index, extendedState) => {\n      //We have only one view type so not checks are needed here\n      if (type === ViewTypes.HEADER) {\n        if (isFocused) {\n          return (\n            <ProfileInfo\n              user={user}\n              setUser={setUser}\n              setUserPosts={setUserPosts}\n              recallFriendRequest={recallFriendRequest}\n              acceptFriendRequest={acceptFriendRequest}\n              rejectFriendRequest={rejectFriendRequest}\n              sendFriendRequest={sendFriendRequest}\n              removeConnection={removeConnection}\n              canAdd={userData.state?.profileVideoUrl}\n              isVisible={extendedState.profileVideoVisible} // If scrolled to top\n            />\n          );\n        }\n        return (\n          <View\n            style={{\n              height: screenWidth + 150,\n              width: screenWidth + 150,\n              maxWidth: 900,\n              maxHeight: 900,\n            }}\n          ></View>\n        );\n      }\n      if (!item.deleted) {\n        return (\n          <PostCard\n            post={item}\n            setShowPostOptions={triggerOptionsModal}\n            screenHeight={screenHeight}\n            screenWidth={screenWidth}\n            handleNavigation={handleNavigation}\n            isVisible={false}\n            // unmount={!isFocused}\n            disableVideo\n            handleReaction={handleReaction}\n          />\n        );\n      }\n    },\n    [isFocused, user, userData, userPosts]\n  );\n\n  let dataProvider = new DataProvider(\n    (r1, r2) => {\n      return (\n        r1._id !== r2._id || r1.liked !== r2.liked || r1.likes !== r2.likes\n      );\n    }\n    // (index) => `${userPosts[index]?._id}`\n  ).cloneWithRows([{}, ...userPosts]);\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      // (index) => index,\n      (index) => {\n        if (index === 0) {\n          return ViewTypes.HEADER;\n        } else {\n          return ViewTypes.STANDARD;\n        }\n      },\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 600;\n      }\n    )\n  ).current;\n\n  useEffect(() => {\n    initializeData.promise.then(async ({ success, response }) => {\n      if (success) {\n        setUser(response.otherUser);\n        navigation.setOptions({\n          title: response.otherUser.isSameUser\n            ? \"Me\"\n            : `${response.otherUser.firstName} ${response.otherUser.lastName}`,\n        });\n        if (\n          !response.otherUser?.private ||\n          (response.otherUser?.private && response.otherUser.isFriend) ||\n          response.otherUser.isSameUser\n        ) {\n          await getUserPosts();\n        }\n      }\n    });\n\n    return () => {\n      setUser({});\n      setUserPosts([]);\n      initializeData.cancel();\n    };\n  }, [userId]);\n\n  useEffect(() => {\n    (async () => {\n      if (accepted) {\n        await getUserPosts();\n      }\n    })();\n    return () => {};\n  }, [accepted]);\n\n  if (user && user._id) {\n    return (\n      <SafeAreaView style={{ flex: 1 }}>\n        <RecyclerListView\n          {...mobileSpecificListProps}\n          style={{ minHeight: 1, minWidth: 1 }}\n          dataProvider={dataProvider}\n          layoutProvider={layoutProvider}\n          onEndReached={() => getUserPosts()}\n          onEndReachedThreshold={0.5}\n          rowRenderer={rowRenderer}\n          extendedState={{ userData, profileVideoVisible }}\n          forceNonDeterministicRendering\n          onVisibleIndicesChanged={(i) => {\n            // TODO: test on old device to see if preview video rerenders cause crashes\n            if (i?.[0] === 0 && !profileVideoVisible) {\n              setProfileVideoVisible(true);\n            } else if (profileVideoVisible) {\n              setProfileVideoVisible(false);\n            }\n          }}\n          scrollViewProps={{\n            contentContainerStyle: {\n              maxWidth: 900,\n              alignSelf: \"center\",\n            },\n            removeClippedSubviews: true,\n            refreshControl: (\n              <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n            ),\n            // decelerationRate: 0.9,\n          }}\n\n          // ListHeaderComponent={renderHeaderComponent}\n        />\n\n        <PostOptionsModal\n          showOptions={!!showPostOptions}\n          setShowPostOptions={setShowPostOptions}\n          reportPost={reportPost}\n          deletePost={deletePost}\n          editPost={editPost}\n          belongsToUser={showPostOptions?.belongsToUser}\n          error={error}\n        />\n      </SafeAreaView>\n    );\n  }\n  return (\n    <View>\n      <View style={{ width: screenWidth, height: screenWidth }}>\n        <ContentLoader active isProfileVideo />\n      </View>\n      <ContentLoader active listSize={1} />\n      <View style={{ width: screenWidth, height: screenWidth }}>\n        <ContentLoader active isProfileVideo />\n      </View>\n      <ContentLoader active listSize={1} />\n    </View>\n  );\n};\n\nexport default UserProfileScreen;\n","import React, { useState } from \"react\";\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\nimport VideoPlayer from \"./VideoPlayer\";\nimport themeStyle from \"../theme.style\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport PreviewVideo from \"./PreviewVideo\";\nimport { StackActions, useNavigation } from \"@react-navigation/native\";\nimport apiCall from \"../helpers/apiCall\";\nimport UserOptionsModal from \"./UserOptionsModal\";\n\nconst ProfileInfo = ({\n  user,\n  sendFriendRequest,\n  recallFriendRequest,\n  rejectFriendRequest,\n  removeConnection,\n  acceptFriendRequest,\n  setUser,\n  setUserPosts,\n  canAdd,\n  isVisible,\n}) => {\n  const [showUserOptions, setShowUserOptions] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [modalError, setModalError] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  const handleUserFriendsNavigation = () => {\n    // pushes a new screen on top of the prev one to create a journey\n    const pushScreen = StackActions.push(\"OtherUserContactsScreen\", {\n      userId: user?._id,\n      firstName: user?.firstName,\n    });\n\n    navigation.dispatch(pushScreen);\n  };\n  const handleChatNavigation = async () => {\n    const { response, success } = await apiCall(\"POST\", \"/chat/exists\", {\n      participants: [user._id],\n    });\n    if (success) {\n      if (response === null) {\n        navigation.navigate(\"ChatScreen\", {\n          chatUserId: user._id,\n          chatUserFirstName: user.firstName,\n        });\n      } else {\n        navigation.navigate(\"ChatScreen\", { existingChat: response });\n      }\n    }\n  };\n  const reportUser = async (reason) => {\n    const { success } = await apiCall(\"POST\", \"/user/report\", {\n      reason,\n      userToReport: user._id,\n    });\n    if (success) {\n      setShowUserOptions(false);\n    } else {\n      setModalError(\n        \"There was an issue reporting this user. Please try again later.\"\n      );\n    }\n  };\n\n  const blockUser = async () => {\n    setModalLoading(true);\n    setModalError(\"\");\n    const { success } = await apiCall(\"GET\", `/user/block/${user?._id}`);\n    setModalLoading(false);\n    if (!success) {\n      setModalError(\n        \"There was an issue blocking this user. Please try again later.\"\n      );\n    } else {\n      setUser({\n        ...user,\n        blockedByUser: true,\n        isFriend: false,\n        requestReceived: false,\n        requestSent: false,\n      });\n      if (user.private) {\n        setUserPosts([]);\n      }\n      setShowUserOptions(false);\n    }\n  };\n\n  const unblockUser = async () => {\n    setModalLoading(true);\n    setModalError(\"\");\n    const { success } = await apiCall(\"GET\", `/user/unblock/${user?._id}`);\n    setModalLoading(false);\n    if (!success) {\n      setModalError(\n        \"There was an issue unblocking this user. Please try again later.\"\n      );\n    } else {\n      setUser({\n        ...user,\n        blockedByUser: false,\n        requestReceived: false,\n        requestSent: false,\n      });\n      setShowUserOptions(false);\n    }\n  };\n\n  if (!user) {\n    return <View />;\n  }\n  return (\n    <View>\n      <UserOptionsModal\n        reportUser={reportUser}\n        blockUser={blockUser}\n        unblockUser={unblockUser}\n        showOptions={showUserOptions}\n        loading={modalLoading}\n        setShowUserOptions={(value) => {\n          setShowUserOptions(value);\n          setModalError(\"\");\n        }}\n        error={modalError}\n        onHide={() => setModalError(\"\")}\n        user={user}\n        removeConnection={removeConnection}\n      />\n\n      <PreviewVideo\n        uri={user.profileVideoUrl}\n        flipProfileVideo={user.flipProfileVideo}\n        isFullWidth\n        previewText={\"Tap to play\"}\n        disableBlurListener\n        isVisible={isVisible}\n      />\n      {!user.isSameUser ? (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 10,\n            paddingHorizontal: 5,\n          }}\n        >\n          <TouchableOpacity\n            disabled={\n              (user.private && !user.isFriend) || !canAdd || user.blockedByUser\n            }\n            onPress={() => handleChatNavigation()}\n            style={{ flex: 1, opacity: canAdd ? 1 : 0.5 }}\n          >\n            <View\n              style={{\n                borderColor: themeStyle.colors.grayscale.lowest,\n                borderWidth: 1,\n                padding: 10,\n                borderRadius: 20,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                opacity:\n                  (user.private && !user.isFriend) ||\n                  !canAdd ||\n                  user.blockedByUser\n                    ? 0.5\n                    : 1,\n                width: \"100%\",\n              }}\n            >\n              {user.private && !user.isFriend ? (\n                <AntDesign\n                  name=\"lock\"\n                  size={16}\n                  color={themeStyle.colors.grayscale.lowest}\n                />\n              ) : (\n                <Ionicons\n                  name=\"paper-plane-outline\"\n                  size={16}\n                  color={themeStyle.colors.grayscale.lowest}\n                />\n              )}\n              <Text\n                style={{\n                  color: themeStyle.colors.grayscale.lowest,\n                  textAlign: \"center\",\n                }}\n              >\n                {\" \"}\n                Message\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => setShowUserOptions(true)}\n            style={{\n              height: 40,\n              width: 40,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor: themeStyle.colors.grayscale.lowest,\n              borderRadius: 100,\n              marginLeft: 5,\n            }}\n          >\n            <Entypo\n              name=\"dots-three-vertical\"\n              size={16}\n              color={themeStyle.colors.grayscale.highest}\n            />\n          </TouchableOpacity>\n        </View>\n      ) : null}\n      {user.isSameUser ? (\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            textAlign: \"center\",\n            fontWeight: \"700\",\n            marginVertical: 10,\n          }}\n        >\n          Viewing your public profile\n        </Text>\n      ) : !canAdd ? (\n        <View\n          style={{\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              textAlign: \"center\",\n              marginTop: 20,\n            }}\n          >\n            Complete your profile to add\n            {user.firstName ? ` ${user.firstName} as a contact` : \" contacts\"}\n          </Text>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"EditUserDetailsScreen\")}\n          >\n            <View\n              style={{\n                paddingVertical: 5,\n                paddingHorizontal: 10,\n                borderWidth: 1,\n                backgroundColor: themeStyle.colors.secondary.default,\n                borderRadius: 5,\n                marginTop: 10,\n              }}\n            >\n              <Text\n                style={{\n                  fontWeight: \"700\",\n                  color: themeStyle.colors.white,\n                  textAlign: \"center\",\n                }}\n              >\n                Complete my profile\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      ) : null}\n      <View style={{ padding: 5, marginTop: 10 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text\n            style={{\n              fontWeight: \"700\",\n              color: themeStyle.colors.grayscale.lowest,\n            }}\n          >\n            {user.username}\n            {\"  \"}\n            {user.private && !user.isFriend ? (\n              <AntDesign\n                name=\"lock\"\n                size={16}\n                color={themeStyle.colors.grayscale.lower}\n              />\n            ) : user.isFriend ? (\n              <Feather\n                name=\"user-check\"\n                size={16}\n                color={themeStyle.colors.grayscale.lowest}\n              />\n            ) : null}\n          </Text>\n        </View>\n        {user.jobTitle ? (\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, marginTop: 10 }}\n          >\n            {user.jobTitle}\n          </Text>\n        ) : null}\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: 20,\n          }}\n        >\n          <Ionicons\n            name=\"people\"\n            size={24}\n            color={themeStyle.colors.grayscale.lower}\n          />\n          {(user.private && user.isFriend) ||\n          !user.private ||\n          user.isSameUser ? (\n            <TouchableOpacity onPress={() => handleUserFriendsNavigation()}>\n              <Text\n                style={{\n                  marginHorizontal: 10,\n                  color: themeStyle.colors.primary.default,\n                  fontWeight: \"700\",\n                }}\n              >\n                {user.numberOfFriends} contacts\n              </Text>\n            </TouchableOpacity>\n          ) : (\n            <Text\n              style={{\n                marginHorizontal: 10,\n                color: themeStyle.colors.grayscale.lowest,\n              }}\n            >\n              {user.numberOfFriends} contacts\n            </Text>\n          )}\n        </View>\n\n        {user.blockedByUser ? (\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              textAlign: \"center\",\n            }}\n          >\n            You have blocked this user\n          </Text>\n        ) : user.blockedByThem ? (\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              textAlign: \"center\",\n            }}\n          >\n            This user has blocked you\n          </Text>\n        ) : !user.isSameUser && !user.isFriend ? (\n          <View style={{ marginBottom: 20 }}>\n            {user.requestReceived ? (\n              <View style={{ flexDirection: \"column\", paddingHorizontal: 20 }}>\n                <Text\n                  style={{\n                    color: themeStyle.colors.grayscale.lowest,\n                    fontWeight: \"700\",\n                  }}\n                >\n                  I would like to add you as a contact\n                </Text>\n                <TouchableOpacity\n                  style={{ marginVertical: 10 }}\n                  disabled={!canAdd}\n                  onPress={() => acceptFriendRequest()}\n                >\n                  <View\n                    style={{\n                      borderColor: canAdd\n                        ? themeStyle.colors.success.default\n                        : themeStyle.colors.grayscale.high,\n                      borderWidth: 1,\n                      padding: 10,\n                      borderRadius: 5,\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      flexDirection: \"row\",\n                      opacity: canAdd ? 1 : 0.5,\n                    }}\n                  >\n                    <AntDesign\n                      name=\"check\"\n                      size={20}\n                      color={themeStyle.colors.grayscale.lowest}\n                    />\n                    <Text\n                      style={{\n                        fontWeight: \"700\",\n                        color: themeStyle.colors.grayscale.lowest,\n                        textAlign: \"center\",\n                      }}\n                    >\n                      {\" \"}\n                      Accept\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{ marginVertical: 10 }}\n                  onPress={() => rejectFriendRequest()}\n                >\n                  <View\n                    style={{\n                      borderColor: themeStyle.colors.grayscale.lowest,\n                      borderWidth: 1,\n                      padding: 10,\n                      borderRadius: 5,\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      flexDirection: \"row\",\n                    }}\n                  >\n                    <AntDesign\n                      name=\"close\"\n                      size={20}\n                      color={themeStyle.colors.grayscale.lowest}\n                    />\n                    <Text\n                      style={{\n                        fontWeight: \"700\",\n                        color: themeStyle.colors.grayscale.lowest,\n                      }}\n                    >\n                      {\" \"}\n                      Delete\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              </View>\n            ) : user.requestSent ? (\n              <TouchableOpacity onPress={() => recallFriendRequest()}>\n                <View\n                  style={{\n                    borderColor: themeStyle.colors.primary.default,\n                    borderWidth: 1,\n                    padding: 10,\n                    borderRadius: 5,\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      textAlign: \"center\",\n                      color: themeStyle.colors.grayscale.lowest,\n                    }}\n                  >\n                    Request sent\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                disabled={!canAdd}\n                onPress={() => sendFriendRequest()}\n              >\n                <View\n                  style={{\n                    borderColor: canAdd\n                      ? themeStyle.colors.success.default\n                      : themeStyle.colors.grayscale.high,\n                    borderWidth: 1,\n                    padding: 10,\n                    borderRadius: 5,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    opacity: canAdd ? 1 : 0.5,\n                  }}\n                >\n                  <Entypo\n                    color={themeStyle.colors.grayscale.lowest}\n                    name=\"add-user\"\n                    size={12}\n                  />\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: themeStyle.colors.grayscale.lowest,\n                      textAlign: \"center\",\n                      marginLeft: 10,\n                    }}\n                  >\n                    Add User\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            )}\n          </View>\n        ) : null}\n      </View>\n    </View>\n  );\n};\n\nexport default React.memo(ProfileInfo);\n","import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  Modal,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n  Platform,\n  ActivityIndicatorBase,\n  ActivityIndicator,\n} from \"react-native\";\nimport themeStyle from \"../theme.style\";\n\nconst UserOptionsModal = ({\n  showOptions,\n  setShowUserOptions,\n  reportUser,\n  blockUser,\n  unblockUser,\n  error,\n  onHide,\n  user,\n  loading,\n  removeConnection,\n}) => {\n  const [showReportOptions, setShowReportOptions] = useState(false);\n  const [showBlockUserGuard, setShowBlockUserGuard] = useState(false);\n\n  const reportOptions = [\n    \"Profile is fake or contains spam\",\n    \"Adult content\",\n    \"Harassment or hateful speech\",\n    \"I think this account is hacked\",\n    \"Self harm\",\n  ];\n  return (\n    <Modal\n      visible={showOptions}\n      transparent\n      onRequestClose={() => {\n        setShowUserOptions(null);\n        setShowReportOptions(false);\n        setShowBlockUserGuard(false);\n      }}\n    >\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" && \"padding\"}\n        keyboardVerticalOffset={0}\n        style={{ flex: 1 }}\n      >\n        <TouchableWithoutFeedback\n          onPress={() => {\n            setShowUserOptions(null);\n            setShowReportOptions(false);\n            setShowBlockUserGuard(false);\n            if (onHide) onHide();\n          }}\n        >\n          <View\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              flex: 1,\n              backgroundColor: \"rgba(0,0,0,0.5)\",\n            }}\n          >\n            <View\n              style={{\n                width: \"100%\",\n                paddingVertical: 10,\n                backgroundColor: themeStyle.colors.grayscale.highest,\n                borderTopColor: themeStyle.colors.grayscale.high,\n                borderTopWidth: 2,\n              }}\n            >\n              {error ? (\n                <Text\n                  style={{\n                    alignSelf: \"center\",\n                    fontSize: 12,\n                    color: themeStyle.colors.error.default,\n                    fontWeight: \"700\",\n                  }}\n                >\n                  {error}\n                </Text>\n              ) : null}\n\n              {loading ? (\n                <ActivityIndicator size={\"large\"} animating />\n              ) : showReportOptions ? (\n                <View>\n                  {reportOptions.map((option, i) => (\n                    <TouchableOpacity\n                      key={`report-option-${i}`}\n                      onPress={() => reportUser(i)}\n                    >\n                      <View\n                        style={{\n                          padding: 20,\n                          borderBottomWidth: 0.5,\n                          borderColor: themeStyle.colors.grayscale.low,\n                        }}\n                      >\n                        <Text\n                          style={{\n                            textAlign: \"center\",\n                            color: themeStyle.colors.secondary.default,\n                            fontWeight: \"700\",\n                          }}\n                        >\n                          {option}\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n              ) : showBlockUserGuard ? (\n                <View>\n                  <Text\n                    style={{\n                      color: themeStyle.colors.grayscale.lowest,\n                      fontWeight: \"700\",\n                      marginBottom: 10,\n                    }}\n                  >\n                    Are you sure?\n                  </Text>\n                  <Text\n                    style={{\n                      color: themeStyle.colors.grayscale.lowest,\n                      paddingRight: 20,\n                    }}\n                  >\n                    Blocking this user will remove them from your contacts if\n                    already added.\n                  </Text>\n                  <TouchableOpacity\n                    onPress={() => {\n                      blockUser();\n                      setShowBlockUserGuard(false);\n                    }}\n                  >\n                    <View\n                      style={{\n                        padding: 20,\n                        borderBottomWidth: 0.5,\n                        borderColor: themeStyle.colors.grayscale.low,\n                      }}\n                    >\n                      <Text\n                        style={{\n                          textAlign: \"center\",\n                          color: themeStyle.colors.secondary.default,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Block user\n                      </Text>\n                    </View>\n                  </TouchableOpacity>\n                </View>\n              ) : (\n                <View style={{ alignItems: \"center\", paddingHorizontal: 15 }}>\n                  {user.isFriend ? (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setShowUserOptions(false);\n                        setShowReportOptions(false);\n                        removeConnection();\n                      }}\n                      style={{ width: \"100%\" }}\n                    >\n                      <View\n                        style={{\n                          padding: 10,\n                          borderRadius: 5,\n                          width: \"100%\",\n                          height: 60,\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <Text\n                          style={{\n                            color: themeStyle.colors.error.default,\n                            textAlign: \"center\",\n                          }}\n                        >\n                          Remove Contact\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  ) : null}\n                  <TouchableOpacity\n                    onPress={() => {\n                      setShowReportOptions(true);\n                      setShowBlockUserGuard(false);\n                    }}\n                    style={{ width: \"100%\" }}\n                  >\n                    <View\n                      style={{\n                        padding: 10,\n                        borderRadius: 5,\n                        width: \"100%\",\n                        height: 60,\n                        borderTopWidth: user.isFriend ? 0.5 : 0,\n                        borderColor: themeStyle.colors.grayscale.low,\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontWeight: \"700\",\n                          color: themeStyle.colors.grayscale.lowest,\n                          textAlign: \"center\",\n                        }}\n                      >\n                        Report User\n                      </Text>\n                    </View>\n                  </TouchableOpacity>\n                  {!user.isSameUser && !user.blockedByUser ? (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setShowBlockUserGuard(true);\n                        setShowReportOptions(false);\n                      }}\n                      style={{ width: \"100%\" }}\n                    >\n                      <View\n                        style={{\n                          padding: 10,\n                          borderRadius: 5,\n                          width: \"100%\",\n                          height: 60,\n                          borderTopWidth: user.isFriend ? 0.5 : 0,\n                          borderColor: themeStyle.colors.grayscale.low,\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontWeight: \"700\",\n                            color: themeStyle.colors.grayscale.lowest,\n                            textAlign: \"center\",\n                          }}\n                        >\n                          Block User\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  ) : user.blockedByUser ? (\n                    <TouchableOpacity\n                      onPress={() => unblockUser()}\n                      style={{ width: \"100%\" }}\n                    >\n                      <View\n                        style={{\n                          padding: 10,\n                          borderRadius: 5,\n                          width: \"100%\",\n                          height: 60,\n                          borderTopWidth: user.isFriend ? 0.5 : 0,\n                          borderColor: themeStyle.colors.grayscale.low,\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontWeight: \"700\",\n                            color: themeStyle.colors.grayscale.lowest,\n                            textAlign: \"center\",\n                          }}\n                        >\n                          Unblock User\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n              )}\n            </View>\n          </View>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </Modal>\n  );\n};\n\nexport default UserOptionsModal;\n","import { Animated } from \"react-native\";\n\nexport const startAnimationHelper = (animation, duration) => {\n  Animated.loop(\n    Animated.sequence([\n      Animated.timing(animation, {\n        toValue: 1,\n        duration,\n        useNativeDriver: false,\n      }),\n      Animated.timing(animation, {\n        toValue: 0,\n        duration,\n        useNativeDriver: false,\n      }),\n    ])\n  ).start();\n};\n\nexport const getInterpolatedColor = (animation) =>\n  animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"#a3a3a3\", \"#fff\"],\n  });\n\nexport const paragraphInitialStyles = (index, pHeight, pWidth) => {\n  let height = pHeight;\n  let width = pWidth;\n  if (pWidth.constructor === Array) {\n    width = pWidth[index] || \"100%\";\n  }\n  if (pHeight.constructor === Array) {\n    height = pHeight[index] || 8;\n  }\n  return {\n    height,\n    width,\n  };\n};\nexport const commonDefaultProps = {\n  primaryColor: \"rgba(220, 220, 220, 1)\",\n  secondaryColor: \"rgba(200, 200, 200, 1)\",\n  animationDuration: 500,\n  loading: null,\n  active: false,\n  title: true,\n  listSize: 1,\n  titleStyles: {},\n  avatar: false,\n  aShape: \"circle\",\n  aSize: \"default\",\n  reverse: false,\n  containerStyles: {},\n};\n","const makeCancelable = (promise) => {\n  let hasCanceled = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      // TODO: handle reject in trycatch when using this function\n      (val) => (hasCanceled ? reject({ isCanceled: true }) : resolve(val)),\n      (error) => (hasCanceled ? reject({ isCanceled: true }) : reject(error))\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled = true;\n    },\n  };\n};\n\nexport default makeCancelable;\n","import React, { Fragment, useEffect, useState } from \"react\";\n\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  SafeAreaView,\n  Dimensions,\n} from \"react-native\";\nimport * as ScreenOrientation from \"expo-screen-orientation\";\nimport {\n  FontAwesome,\n  MaterialCommunityIcons,\n  Ionicons,\n} from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport themeStyle from \"../../../theme.style\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport ImageWithCache from \"../../../components/ImageWithCache\";\nimport ExpoVideoPlayer from \"../../../components/ExpoVideoPlayer\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport useScreenOrientation from \"../../../helpers/hooks/useScreenOrientation\";\nimport usePersistedWebParams from \"../../../helpers/hooks/usePersistedWebParams\";\nconst MediaScreen = (props) => {\n  const routeParamsObj = props.route.params;\n  const persistedParams = usePersistedWebParams(routeParamsObj);\n\n  // if route params has values then return it else null\n  const params =\n    routeParamsObj[Object.keys(routeParamsObj)[0]] !== \"[object Object]\"\n      ? routeParamsObj\n      : null;\n\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [post, setPost] = useState(null);\n\n  const navigation = useNavigation();\n\n  const { height: screenHeight, width: screenWidth } = Dimensions.get(\"window\");\n\n  const getAdditionalPostData = async () => {\n    const { success, response } = await apiCall(\n      \"POST\",\n      `/posts/${post?._id}/additionaldata`\n    );\n    if (success) {\n      setLikes(response.likes);\n      setLiked(response.liked);\n      setPost({ ...post, liked: response.liked, likes: response.likes });\n    }\n  };\n\n  // const getPost = async () =>  {\n  //   const {success, response} = await apiCall('GET',`/posts/fetch/${}`, )\n  // }\n\n  const intToString = (value) => {\n    var suffixes = [\"\", \"k\", \"m\", \"b\", \"t\"];\n    var suffixNum = Math.floor((\"\" + value).length / 3);\n    var shortValue = parseFloat(\n      (suffixNum != 0 ? value / Math.pow(1000, suffixNum) : value).toPrecision(\n        2\n      )\n    );\n    if (shortValue % 1 != 0) {\n      shortValue = shortValue.toFixed(1);\n    }\n    return shortValue + suffixes[suffixNum];\n  };\n\n  const handleReaction = async () => {\n    if (liked) {\n      setLikes(likes - 1);\n      setLiked(false);\n\n      const { success } = await apiCall(\n        \"GET\",\n        `/posts/like/remove/${post._id}`\n      );\n      if (!success) {\n        setLikes(likes + 1);\n        setLiked(true);\n      }\n    } else {\n      setLikes(likes + 1);\n      setLiked(true);\n      const { success } = await apiCall(\"GET\", `/posts/like/add/${post._id}`);\n      if (!success) {\n        setLikes(likes);\n        setLiked(false);\n      }\n    }\n  };\n\n  useScreenOrientation(true);\n\n  useEffect(() => {\n    (async () => {\n      await getAdditionalPostData();\n      if (post?.mediaType === \"video\") {\n        await ScreenOrientation.lockAsync(\n          ScreenOrientation.OrientationLock.DEFAULT\n        );\n      }\n    })();\n    return async () => {\n      await ScreenOrientation.lockAsync(\n        ScreenOrientation.OrientationLock.PORTRAIT_UP\n      );\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!post) {\n      const { post: initialPost } = params || persistedParams;\n      setLiked(initialPost?.liked);\n      setLikes(initialPost?.likes);\n      setPost(initialPost);\n    }\n  }, [params, persistedParams]);\n\n  if (!post) return null;\n  return (\n    <Fragment>\n      <SafeAreaView\n        style={{\n          flex: 0,\n          backgroundColor: themeStyle.colors.black,\n        }}\n      />\n      <StatusBar hidden />\n      <SafeAreaView style={styles.container}>\n        <View>\n          {post?.mediaType === \"video\" ? (\n            <ExpoVideoPlayer\n              isSelfie={post.mediaIsSelfie}\n              uri={post.mediaUrl}\n            />\n          ) : // <VideoPlayer\n          //   source={{ uri: post.mediaUrl }}\n          //   navigator={navigation}\n          //   videoStyle={{\n          //     transform: [{ scaleX: post.mediaIsSelfie ? -1 : 1 }],\n          //     // height: \"100%\",\n          //   }}\n          //   onError={(e) => console.log(e)}\n          //   style={{ width: screenWidth }}\n          //   paused={!isFocused}\n          //   disableFullscreen\n          //   fullscreen={false}\n          //   Ionicons\n          //   controlAnimationTiming={100}\n          //   disableVolume\n          //   // scrubbing={1000}\n          // />\n          post?.mediaType === \"image\" ? (\n            <View\n              style={{\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <ImageWithCache\n                mediaIsSelfie={post.mediaIsSelfie}\n                resizeMode=\"contain\"\n                mediaHeaders={post.mediaHeaders}\n                mediaUrl={post.mediaUrl}\n                removeBorderRadius\n                style={{\n                  backgroundColor: themeStyle.colors.black,\n                  maxHeight: screenHeight,\n                  maxWidth: screenWidth,\n                }}\n              />\n            </View>\n          ) : null}\n          {/* {post?.mediaType === \"image\" ? ( */}\n          <TouchableOpacity\n            onPress={() => navigation.goBack()}\n            style={{\n              position: \"absolute\",\n              left: 0,\n              top: 40,\n              height: 48,\n              width: 48,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <View\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Ionicons\n                name=\"chevron-back\"\n                size={30}\n                color={themeStyle.colors.grayscale.low}\n                style={styles.iconShadow}\n              />\n            </View>\n          </TouchableOpacity>\n          {/* ) : null} */}\n          <TouchableWithoutFeedback>\n            <View\n              style={{\n                position: \"absolute\",\n                bottom: 100,\n                right: 0,\n                borderRadius: 20,\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <TouchableOpacity\n                onPress={async () => {\n                  await ScreenOrientation.lockAsync(\n                    ScreenOrientation.OrientationLock.PORTRAIT_UP\n                  );\n                  navigation.navigate(\"CommentsScreen\", {\n                    postId: post._id,\n                  });\n                }}\n              >\n                <Text\n                  style={{\n                    color: themeStyle.colors.white,\n                    margin: 20,\n                    width: 30,\n                    height: 30,\n                    textAlign: \"center\",\n                  }}\n                >\n                  <FontAwesome\n                    style={styles.iconShadow}\n                    name=\"comment-o\"\n                    size={24}\n                  />\n                </Text>\n              </TouchableOpacity>\n              {!post.belongsToUser ? (\n                <TouchableOpacity onPress={() => handleReaction()}>\n                  <View\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text\n                      style={{\n                        color: themeStyle.colors.white,\n                        marginHorizontal: 20,\n                        width: 30,\n                        height: 30,\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <MaterialCommunityIcons\n                        name={liked ? \"thumb-up\" : \"thumb-up-outline\"}\n                        size={24}\n                        style={[\n                          styles.iconShadow,\n                          {\n                            color: liked\n                              ? themeStyle.colors.secondary.default\n                              : themeStyle.colors.white,\n                          },\n                        ]}\n                      />\n                    </Text>\n                    <Text\n                      style={[\n                        styles.text,\n                        { minWidth: 20, textAlign: \"center\" },\n                      ]}\n                    >\n                      {intToString(likes)}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ) : null}\n            </View>\n          </TouchableWithoutFeedback>\n        </View>\n      </SafeAreaView>\n      <SafeAreaView\n        style={{\n          flex: 0,\n          backgroundColor: themeStyle.colors.black,\n        }}\n      />\n    </Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: themeStyle.colors.black,\n  },\n  text: {\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: themeStyle.colors.black,\n    color: themeStyle.colors.white,\n  },\n  iconShadow: {\n    color: themeStyle.colors.white,\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 8,\n    textShadowColor: themeStyle.colors.black,\n  },\n});\n\nexport default MediaScreen;\n","import { useNavigation } from \"@react-navigation/native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  Text,\n  View,\n  ActivityIndicator,\n} from \"react-native\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport { useDispatch } from \"react-redux\";\nimport RepostCard from \"../../../components/RepostCard\";\nimport themeStyle from \"../../../theme.style\";\nimport usePersistedWebParams from \"../../../helpers/hooks/usePersistedWebParams\";\n\nconst ShareScreen = (props) => {\n  const { prevScreen } = props.route.params;\n\n  const routeParamsObj = props.route.params;\n  const persistedParams = usePersistedWebParams(routeParamsObj);\n\n  // if route params has values then return it else null\n  const params =\n    routeParamsObj[Object.keys(routeParamsObj)[0]] !== \"[object Object]\"\n      ? routeParamsObj\n      : null;\n\n  const [post, setPost] = useState(null);\n  const [repostBody, setRepostBody] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n  const handleRepost = async () => {\n    setLoading(true);\n    const { success } = await apiCall(\"POST\", `/posts/repost/${post._id}`, {\n      body: repostBody,\n    });\n    setLoading(success);\n\n    if (success) {\n      if (prevScreen === \"Home\") {\n        dispatch({\n          type: \"SET_POST_CREATED\",\n          payload: { posted: true, type: \"shared\" },\n        });\n      }\n      navigation.navigate(prevScreen);\n    }\n  };\n\n  useEffect(() => {\n    const { post: initialPost } = params || persistedParams;\n    if (!post) {\n      setPost(initialPost);\n    }\n  }, [persistedParams, params]);\n  if (!post) return null;\n  return (\n    <View style={{ flex: 1 }}>\n      <ScrollView\n        contentContainerStyle={{\n          flexGrow: 1,\n          maxWidth: 900,\n          alignSelf: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <TextInput\n          style={{\n            minHeight: 100,\n            textAlignVertical: \"top\",\n            margin: 20,\n            fontSize: 16,\n            color: themeStyle.colors.grayscale.lowest,\n          }}\n          value={repostBody || \"\"}\n          placeholder=\"Write your thoughts here.\"\n          multiline\n          maxLength={1000}\n          onChangeText={(v) => setRepostBody(v)}\n          placeholderTextColor={themeStyle.colors.grayscale.lower}\n        />\n        <RepostCard postContent={post} isPreview={true} mediaIsFullWidth />\n        <View\n          style={{\n            width: \"100%\",\n            padding: 10,\n          }}\n        >\n          <TouchableOpacity\n            onPress={() => handleRepost()}\n            style={{\n              backgroundColor: themeStyle.colors.primary.default,\n              borderRadius: 5,\n              padding: 10,\n              height: 48,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {loading ? (\n              <ActivityIndicator\n                animating={loading}\n                color={themeStyle.colors.white}\n                size=\"small\"\n              />\n            ) : (\n              <Text\n                style={{\n                  color: themeStyle.colors.white,\n                  fontSize: 16,\n                  textAlign: \"center\",\n                }}\n              >\n                Share\n              </Text>\n            )}\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default ShareScreen;\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  SafeAreaView,\n  RefreshControl,\n  ActivityIndicator,\n  KeyboardAvoidingView,\n  Platform,\n  Keyboard,\n  Dimensions,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport PostCommentCard from \"../../../components/PostCommentCard\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport CommentTextInput from \"../../../components/CommentTextInput\";\nimport ContentLoader from \"../../../components/ContentLoader\";\nimport themeStyle from \"../../../theme.style\";\nimport CommentOptionsModal from \"../../../components/CommentOptionsModal\";\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from \"recyclerlistview\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport usePersistedWebParams from \"../../../helpers/hooks/usePersistedWebParams\";\n\nconst CommentsScreen = (props) => {\n  const routeParamsObj = props.route.params;\n  const persistedParams = usePersistedWebParams(routeParamsObj);\n\n  // if route params has values then return it else null\n  const params =\n    routeParamsObj[Object.keys(routeParamsObj)[0]] !== \"[object Object]\"\n      ? routeParamsObj\n      : null;\n\n  const { postId } = params || persistedParams;\n\n  const [comments, setComments] = useState([]);\n  const [replyingTo, setReplyingTo] = useState(null);\n  // just a set of comment IDs so we don't render newly fetched comments if they've just been added by the user\n  const [newCommentsIds, setNewCommentsIds] = useState([]);\n  const [allCommentsLoaded, setAllCommentsLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [intialLoading, setInitialLoading] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [showOptionsForComment, setShowOptionsForComment] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const navigation = useNavigation();\n  const textInputRef = useRef();\n\n  const { width: screenWidth } = Dimensions.get(\"window\");\n\n  const getInitialComments = async (refreshing) => {\n    // setAllCommentsLoaded(false);\n    setNewCommentsIds([]);\n    if (!refreshing) {\n      setInitialLoading(true);\n    }\n    await apiCall(\"GET\", `/posts/comments/${postId}/0`).then(\n      ({ success, response }) => {\n        if (success) {\n          if (!response.length) {\n            // setAllCommentsLoaded(true);\n            setComments(response);\n          } else {\n            setComments(response);\n          }\n        }\n      }\n    );\n    setInitialLoading(false);\n  };\n\n  const loadMoreComments = async () => {\n    let isCancelled = false;\n    if (!isCancelled) {\n      if (!allCommentsLoaded) {\n        setLoadingMore(true);\n        const { response, success } = await apiCall(\n          \"GET\",\n          `/posts/comments/${postId}/${comments.length}`\n        );\n        setLoadingMore(false);\n        if (success) {\n          if (!response.length) {\n            setAllCommentsLoaded(true);\n          } else {\n            setComments([...comments, ...response]);\n          }\n        }\n      }\n    }\n    return {\n      cancel() {\n        isCancelled = true;\n      },\n    };\n  };\n\n  const handleReaction = async (reply) => {\n    if (!reply) return;\n    const oldReplies = comments;\n\n    if (reply?.liked) {\n      setComments((prev) => {\n        return prev.map((p) => {\n          if (p?._id === reply?._id) {\n            return { ...p, liked: false, likes: (p.likes || 1) - 1 };\n          }\n          return p;\n        });\n      });\n      const { success } = await apiCall(\n        \"GET\",\n        `/posts/comment/like/remove/${reply._id}`\n      );\n      if (!success) {\n        setComments(oldReplies);\n      }\n      return;\n    }\n\n    setComments((prev) => {\n      return prev.map((p) => {\n        if (p._id === reply._id) {\n          return { ...p, liked: true, likes: (p.likes || 0) + 1 };\n        }\n        return p;\n      });\n    });\n    const { success } = await apiCall(\n      \"GET\",\n      `/posts/comment/like/add/${reply._id}`\n    );\n    if (!success) {\n      setComments(oldReplies);\n    }\n  };\n\n  const deleteComment = async () => {\n    setLoading(true);\n    const { success } = await apiCall(\n      \"DELETE\",\n      `/posts/comments/remove/${showOptionsForComment?._id}`\n    );\n    setLoading(false);\n    if (success) {\n      const newComments = comments.map((comment) => {\n        if (comment._id === showOptionsForComment?._id) {\n          return {\n            ...comment,\n            deleted: true,\n          };\n        }\n        return comment;\n      });\n      setComments(newComments);\n      setShowOptionsForComment(null);\n    }\n  };\n\n  const postComment = async (commentBody) => {\n    // spinner to be added in modal text input while this is loading\n    const { response, success } = await apiCall(\"POST\", \"/posts/comments/add\", {\n      postId,\n      body: commentBody,\n    });\n    if (success) {\n      setNewCommentsIds([...newCommentsIds, response._id]);\n      const tweakedResponse = {\n        ...response,\n        age: { minutes: 1 },\n        new: true,\n      };\n      const updatedComments = [tweakedResponse, ...comments];\n\n      setComments(updatedComments);\n    }\n    return success;\n  };\n\n  const reportComment = async (reasonIndex) => {\n    setLoading(true);\n    const { success } = await apiCall(\"POST\", \"/posts/comment/report\", {\n      commentId: showOptionsForComment?._id,\n      reason: reasonIndex,\n    });\n    setLoading(false);\n    if (!success) {\n      setError(\"An error occurred.\");\n    } else {\n      setShowOptionsForComment(null);\n    }\n  };\n\n  const replyToUser = async ({\n    commentId,\n    firstName,\n    lastName,\n    replyingToType,\n  }) => {\n    if (firstName && lastName && commentId && replyingToType) {\n      if (replyingToType === \"reply\") {\n        textInputRef.current.focus();\n        setReplyingTo({\n          lastName,\n          firstName,\n          commentId,\n          replyingToType,\n        });\n      }\n\n      if (replyingToType === \"comment\") {\n        textInputRef.current.focus();\n        setReplyingTo({\n          lastName,\n          firstName,\n          commentId,\n          replyingToType,\n        });\n      }\n    }\n  };\n\n  const updateComment = async (body) => {\n    setLoading(true);\n    if (showOptionsForComment) {\n      const { success } = await apiCall(\"POST\", \"/posts/comments/update\", {\n        commentId: showOptionsForComment?._id,\n        body,\n      });\n      setLoading(false);\n      if (success) {\n        const newComments = comments.map((comment) => {\n          if (comment._id === showOptionsForComment?._id) {\n            return {\n              ...showOptionsForComment,\n              body,\n              _id: comment._id,\n              edited: true,\n              updated: true,\n            };\n          }\n          return comment;\n        });\n        setComments(newComments);\n        // setUpdated(true);\n        setShowOptionsForComment(null);\n      } else {\n        setError(\"An error occurred.\");\n      }\n    }\n  };\n\n  const onRefresh = async () => {\n    setRefreshing(true);\n    setNewCommentsIds([]);\n    await apiCall(\"GET\", `/posts/comments/${postId}/0`).then(\n      ({ success, response }) => {\n        console.log(response.length);\n        if (success) {\n          if (!response.length) {\n            setAllCommentsLoaded(true);\n          } else {\n            setComments([...response]);\n          }\n        }\n      }\n    );\n    setRefreshing(false);\n  };\n\n  const triggerOptionsModal = (post) => {\n    setShowOptionsForComment(post);\n    setError(\"\");\n  };\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      // (index) => index,\n      (index) => 0,\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 300;\n      }\n    )\n  ).current;\n\n  let dataProvider = new DataProvider((r1, r2) => {\n    return (\n      r1._id !== r2._id ||\n      r1.body !== r2.body ||\n      r1.likes !== r2.likes ||\n      r1.liked !== r2.liked ||\n      r1.deleted !== r2.deleted ||\n      r1.replyCount !== r2.replyCount ||\n      r1.new !== r2.new // HERE: was here\n    );\n  }).cloneWithRows(comments);\n\n  const rowRenderer = useCallback(\n    (type, item, i) =>\n      // we don't want to render a duplicate of a newly added reply, so we check if it's newly added before render. Below checks if reply is not in the list of new replies the user has just created or if it's a new comment just added then render.\n      newCommentsIds.indexOf(item._id) === -1 || item.new ? ( // prevent newly created comments from rendering again since they'll be fetch from the backend as the user scrolls\n        <PostCommentCard\n          replyToUser={replyToUser}\n          key={item._id}\n          comment={item}\n          setShowOptionsForComment={triggerOptionsModal}\n          handleReaction={handleReaction}\n        />\n      ) : null,\n    [newCommentsIds, comments]\n  );\n\n  const renderFooter = useCallback(\n    () => (\n      <View>\n        {loadingMore ? (\n          <ActivityIndicator\n            size={\"large\"}\n            animating\n            color={themeStyle.colors.grayscale.low}\n          />\n        ) : null}\n      </View>\n    ),\n    [loadingMore]\n  );\n\n  useEffect(() => {\n    (async () => {\n      navigation.addListener(\"focus\", async () => {\n        if (comments) {\n          // refresh comments\n          await getInitialComments(true);\n        }\n      });\n      await getInitialComments();\n    })();\n    return async () => {\n      (await loadMoreComments()).cancel();\n      navigation.removeListener(\"focus\");\n    };\n  }, []);\n\n  if (intialLoading) {\n    return (\n      <View style={{ maxWidth: 900, width: \"100%\", alignSelf: \"center\" }}>\n        <ContentLoader active showAvatar avatarSize={50} />\n        <ContentLoader active showAvatar avatarSize={50} />\n        <ContentLoader active showAvatar avatarSize={50} />\n        <ContentLoader active showAvatar avatarSize={50} />\n        <ContentLoader active showAvatar avatarSize={50} />\n        <ContentLoader active showAvatar avatarSize={50} />\n        <ContentLoader active showAvatar avatarSize={50} />\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" && \"padding\"}\n        keyboardVerticalOffset={93}\n        style={{ flex: 1 }}\n      >\n        {comments?.length ? (\n          <RecyclerListView\n            style={{ minHeight: 1, minWidth: 1 }}\n            rowRenderer={rowRenderer}\n            dataProvider={dataProvider}\n            onEndReached={() => loadMoreComments()}\n            layoutProvider={layoutProvider}\n            onEndReachedThreshold={0.5}\n            forceNonDeterministicRendering\n            renderFooter={renderFooter}\n            scrollViewProps={{\n              contentContainerStyle: {\n                maxWidth: 900,\n                alignSelf: \"center\",\n              },\n              onScrollEndDrag: () => {\n                Keyboard.dismiss();\n              },\n              refreshControl: (\n                <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n              ),\n            }}\n          />\n        ) : (\n          <ScrollView style={{ flex: 1 }} />\n        )}\n\n        <View>\n          {showOptionsForComment ? (\n            <CommentOptionsModal\n              comment={showOptionsForComment}\n              updateComment={updateComment}\n              deleteComment={deleteComment}\n              showOptions={!!showOptionsForComment}\n              setShowOptionsForComment={setShowOptionsForComment}\n              loading={loading}\n              error={error}\n              reportComment={reportComment}\n            />\n          ) : null}\n          <View\n            style={{\n              maxWidth: 900,\n              marginTop: 20,\n              width: \"100%\",\n              alignSelf: \"center\",\n            }}\n          >\n            <CommentTextInput // TODO: this is not aligned right on some devices like moms phone same with replies screen. Should copy how its done for chatscreen\n              ref={textInputRef}\n              submitAction={postComment}\n              replyingTo={replyingTo}\n              setReplyingTo={setReplyingTo}\n            />\n          </View>\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  commentsContainer: {\n    flexGrow: 1,\n  },\n});\n\nexport default React.memo(CommentsScreen);\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  SafeAreaView,\n  RefreshControl,\n  ActivityIndicator,\n  Platform,\n  KeyboardAvoidingView,\n  Dimensions,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport PostCommentCard from \"../../../components/PostCommentCard\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport CommentTextInput from \"../../../components/CommentTextInput\";\nimport themeStyle from \"../../../theme.style\";\nimport CommentReplyCard from \"../../../components/CommentReplyCard\";\nimport CommentOptionsModal from \"../../../components/CommentOptionsModal\";\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from \"recyclerlistview\";\nimport usePersistedWebParams from \"../../../helpers/hooks/usePersistedWebParams\";\n\nconst CommentRepliesScreen = (props) => {\n  const routeParamsObj = props.route.params;\n  const persistedParams = usePersistedWebParams(routeParamsObj);\n\n  // if route params has values then return it else null\n  const params =\n    routeParamsObj[Object.keys(routeParamsObj)[0]] !== \"[object Object]\"\n      ? routeParamsObj\n      : null;\n\n  // const initialComment = JSON.parse(props.route.params.comment);\n  const [replies, setReplies] = useState([]);\n  const [comment, setComment] = useState(null);\n  // just a set of reply IDs so we don't render newly fetched replys if they've just been added by the user\n  const [newRepliesIds, setNewRepliesIds] = useState([]);\n  const [replyingTo, setReplyingTo] = useState(null);\n  const [allRepliessLoaded, setAllRepliesLoaded] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [showOptionsForComment, setShowOptionsForComment] = useState(null);\n  const [error, setError] = useState(\"\");\n  const navigation = useNavigation();\n  const textInputRef = useRef();\n\n  const { width: screenWidth } = Dimensions.get(\"window\");\n\n  const getCommentReplies = async (refresh = false) => {\n    let isCancelled = false;\n    if (!isCancelled) {\n      if (!allRepliessLoaded && comment) {\n        setLoadingMore(!refresh);\n        const { response, success } = await apiCall(\n          \"GET\",\n          `/posts/comments/replies/${comment._id}/${replies.length}`\n        );\n        setLoadingMore(false);\n        if (success) {\n          if (refresh) {\n            setAllRepliesLoaded(false);\n            setReplies(response);\n            return;\n          }\n          if (!response.length) {\n            setAllRepliesLoaded(true);\n          } else {\n            setReplies([...replies, ...response]);\n          }\n        }\n      }\n    }\n    return {\n      cancel() {\n        isCancelled = true;\n      },\n    };\n  };\n\n  const reportComment = async (reasonIndex) => {\n    setLoading(true);\n    const { success } = await apiCall(\"POST\", \"/posts/comment/report\", {\n      commentId: showOptionsForComment._id,\n      reason: reasonIndex,\n    });\n    setLoading(false);\n    if (!success) {\n      setError(\"An error occurred.\");\n    } else {\n      setShowOptionsForComment(null);\n    }\n  };\n\n  const updateComment = async (body) => {\n    if (showOptionsForComment) {\n      setLoading(true);\n      const { success, message } = await apiCall(\n        \"POST\",\n        \"/posts/comments/update\",\n        {\n          commentId: showOptionsForComment?._id,\n          body,\n        }\n      );\n      setLoading(false);\n      if (success) {\n        if (showOptionsForComment?._id === comment._id) {\n          setComment({ ...comment, body });\n        }\n        const newReplies = replies.map((reply) => {\n          if (reply._id === showOptionsForComment?._id) {\n            return {\n              ...showOptionsForComment,\n              body,\n              _id: reply._id,\n              edited: true,\n              updated: true,\n              customKey: `${reply._id}-${body.replace(\" \", \"-\")}`,\n            };\n          }\n          return reply;\n        });\n        setReplies(newReplies);\n        setShowOptionsForComment(null);\n      } else {\n        setError(\"An error occurred.\");\n      }\n    }\n  };\n\n  // passed into reply cards. To be called when replying to a reply.\n  const handleReplyToReply = async ({ commentId, firstName, lastName }) => {\n    textInputRef.current.focus();\n    setReplyingTo({\n      lastName,\n      firstName,\n      commentId,\n      replyingToType: \"reply\",\n    });\n  };\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    setNewRepliesIds([]);\n    await getCommentReplies(true);\n    setRefreshing(false);\n  }, []);\n\n  const deleteComment = async () => {\n    setLoading(true);\n    const { success } = await apiCall(\n      \"DELETE\",\n      `/posts/comments/remove/${showOptionsForComment?._id}`\n    );\n    setLoading(false);\n    if (success) {\n      if (showOptionsForComment?._id === comment._id) {\n        navigation.goBack();\n      }\n      const newReplies = replies.map((reply) => {\n        if (reply._id === showOptionsForComment?._id) {\n          return {\n            ...reply,\n            deleted: true,\n            customKey: `${reply._id}-deleted}`,\n          };\n        }\n        return reply;\n      });\n      setReplies(newReplies);\n      setShowOptionsForComment(null);\n    }\n  };\n\n  const handleReaction = async (reply) => {\n    if (!reply) return;\n    if (comment?._id === reply._id) {\n      setComment({ ...comment, liked: !reply.liked });\n    }\n    const oldReplies = replies;\n\n    if (reply?.liked) {\n      setReplies((prev) => {\n        return prev.map((p) => {\n          if (p?._id === reply?._id) {\n            return { ...p, liked: false, likes: (p.likes || 1) - 1 };\n          }\n          return p;\n        });\n      });\n      const { success } = await apiCall(\n        \"GET\",\n        `/posts/comment/like/remove/${reply._id}`\n      );\n      if (!success) {\n        setReplies(oldReplies);\n        if (comment?._id === reply._id) {\n          setComment({ ...comment, liked: reply.liked });\n        }\n      }\n      return;\n    }\n    if (comment?._id !== reply._id) {\n      setReplies((prev) => {\n        return prev.map((p) => {\n          if (p._id === reply._id) {\n            return { ...p, liked: true, likes: (p.likes || 0) + 1 };\n          }\n          return p;\n        });\n      });\n    }\n    const { success } = await apiCall(\n      \"GET\",\n      `/posts/comment/like/add/${reply._id}`\n    );\n    if (!success) {\n      setReplies(oldReplies);\n    }\n  };\n\n  const postComment = async (commentBody) => {\n    // spinner to be added in the text input when this is loading\n    const { response, success } = await apiCall(\n      \"POST\",\n      \"/posts/comments/replies/add\",\n      {\n        commentId: replyingTo ? replyingTo.commentId : comment._id,\n        body: commentBody,\n      }\n    );\n    if (success) {\n      setNewRepliesIds([...newRepliesIds, response._id]);\n      const newReply = {\n        ...response,\n        age: { minutes: 1 },\n        replyingToObj:\n          replyingTo?.replyingToType === \"reply\" ? replyingTo : null,\n        belongsToUser: true,\n        _id: response._id,\n        new: true,\n        customKey: `${response._id}-new`,\n      };\n      setReplies([...replies, newReply]);\n    }\n    return success;\n  };\n\n  const rowRenderer = useCallback(\n    (type, item, i) =>\n      // we don't want to render a duplicate of a newly added reply, so we check if it's newly added before render. Below checks if reply is not in the list of new replies the user has just created or if it's a new comment just added then render.\n      {\n        if (type === ViewTypes.HEADER) {\n          return (\n            <PostCommentCard\n              isNestedInList={false}\n              newReply={null}\n              comment={comment}\n              setShowOptionsForComment={triggerOptionsModal}\n              handleReaction={handleReaction}\n            />\n          );\n        }\n\n        if (newRepliesIds.indexOf(item._id) === -1 || item.new) {\n          return (\n            <CommentReplyCard\n              handleReplyToReply={handleReplyToReply}\n              reply={item}\n              setShowOptionsForComment={setShowOptionsForComment}\n              handleReaction={handleReaction}\n            />\n          );\n        }\n      },\n    [newRepliesIds, replies, comment]\n  );\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      // (index) => index,\n      (index) => {\n        if (index === 0) {\n          return ViewTypes.HEADER;\n        } else {\n          return ViewTypes.STANDARD;\n        }\n      },\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 300;\n      }\n    )\n  ).current;\n  let dataProvider = new DataProvider((r1, r2) => {\n    return (\n      r1._id !== r2._id ||\n      r1.body !== r2.body ||\n      r1.likes !== r2.likes ||\n      r1.liked !== r2.liked ||\n      r1.deleted !== r2.deleted\n    );\n  }).cloneWithRows([comment, ...replies]);\n\n  const keyExtractor = useCallback(\n    (item) => item.customKey || item._id,\n    [replies]\n  );\n\n  const triggerOptionsModal = (post) => {\n    setError(\"\");\n    setShowOptionsForComment(post);\n  };\n\n  const ViewTypes = {\n    HEADER: 0,\n    STANDARD: 1,\n  };\n\n  const renderFooter = useCallback(\n    () => (\n      <View>\n        {loadingMore ? (\n          <ActivityIndicator\n            size={\"large\"}\n            animating\n            color={themeStyle.colors.grayscale.low}\n          />\n        ) : null}\n      </View>\n    ),\n    [loadingMore]\n  );\n\n  useEffect(() => {\n    (async () => {\n      // if params is null, try destructering from persistedParams\n      if (!comment) {\n        const { comment: initialComment } = params || persistedParams;\n        setComment(initialComment);\n      }\n      await getCommentReplies();\n    })();\n    return async () => {\n      (await getCommentReplies()).cancel();\n    };\n  }, [navigation, comment]);\n  if (!comment) return null;\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" && \"padding\"}\n        keyboardVerticalOffset={93}\n        style={{ flex: 1 }}\n      >\n        <RecyclerListView\n          style={{ minHeight: 1, minWidth: 1 }}\n          rowRenderer={rowRenderer}\n          dataProvider={dataProvider}\n          onEndReached={() => getCommentReplies(false, true)}\n          layoutProvider={layoutProvider}\n          onEndReachedThreshold={0.5}\n          forceNonDeterministicRendering\n          renderFooter={renderFooter}\n          scrollViewProps={{\n            contentContainerStyle: {\n              maxWidth: 900,\n              alignSelf: \"center\",\n            },\n            refreshControl: (\n              <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n            ),\n          }}\n        />\n\n        {showOptionsForComment ? (\n          <CommentOptionsModal\n            comment={showOptionsForComment}\n            updateComment={updateComment}\n            deleteComment={deleteComment}\n            showOptions={!!showOptionsForComment}\n            setShowOptionsForComment={setShowOptionsForComment}\n            loading={loading}\n            error={error}\n            reportComment={reportComment}\n          />\n        ) : null}\n        <View\n          style={{\n            maxWidth: 900,\n            marginTop: 20,\n            width: \"100%\",\n            alignSelf: \"center\",\n          }}\n        >\n          <CommentTextInput\n            ref={textInputRef}\n            submitAction={postComment}\n            replyingTo={replyingTo}\n            setReplyingTo={setReplyingTo}\n          />\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  repliesContainer: {\n    flexGrow: 1,\n  },\n});\n\nexport default React.memo(\n  CommentRepliesScreen,\n  (prev, next) => prev.route.params === next.route.params\n);\n","import React from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Dimensions,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport themeStyle from \"../theme.style\";\nimport Avatar from \"./Avatar\";\nimport formatAge from \"../helpers/formatAge\";\nimport { Entypo } from \"@expo/vector-icons\";\n\nconst CommentReplyCard = ({\n  reply,\n  handleReplyToReply,\n  setShowOptionsForComment,\n  handleReaction,\n}) => {\n  const { width: screenWidth } = Dimensions.get(\"window\");\n\n  const navigation = useNavigation();\n\n  const CommentAge = () => {\n    const { age } = reply;\n    const ageObject = formatAge(age);\n\n    return (\n      <Text style={styles.commentAge}>\n        {ageObject.age} {ageObject.unit} ago\n      </Text>\n    );\n  };\n\n  if (!reply) return <View />;\n  if (!reply.deleted) {\n    return (\n      <View\n        style={[styles.replyContainer, { width: screenWidth, maxWidth: 900 }]}\n      >\n        <View\n          style={{\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            flexDirection: \"row\",\n          }}\n        >\n          <View style={styles.profileInfoContainer}>\n            <Avatar\n              userId={reply.userId}\n              navigation={navigation}\n              size={35}\n              avatarUrl={reply.replyAuthor?.profileGifUrl}\n              profileGifHeaders={reply.replyAuthor?.profileGifHeaders}\n              flipProfileVideo={reply.replyAuthor?.flipProfileVideo}\n            />\n            <TouchableOpacity\n              onPress={() =>\n                navigation.navigate(\"UserProfileScreen\", {\n                  userId: reply.userId,\n                })\n              }\n            >\n              <Text style={styles.replyAuthorName} numberOfLines={1}>\n                {reply.replyAuthor?.firstName} {reply.replyAuthor?.lastName}\n              </Text>\n            </TouchableOpacity>\n            {reply.edited ? (\n              <Text\n                style={{\n                  fontSize: 12,\n                  marginHorizontal: 10,\n                  color: themeStyle.colors.grayscale.low,\n                }}\n              >\n                (edited)\n              </Text>\n            ) : null}\n          </View>\n          <TouchableOpacity\n            style={{\n              width: 48,\n              height: 48,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => setShowOptionsForComment(reply)}\n          >\n            <Entypo\n              name=\"dots-three-vertical\"\n              size={16}\n              color={themeStyle.colors.grayscale.lowest}\n            />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.replyBodyContainer}>\n          {reply.replyingToObj && reply.replyingToId ? (\n            <TouchableOpacity\n              onPress={() =>\n                navigation.navigate(\"UserProfileScreen\", {\n                  userId: reply.replyingToId,\n                })\n              }\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.secondary.default,\n                  fontWeight: \"700\",\n                  justifyContent: \"center\",\n                }}\n              >\n                {reply.replyingToObj.firstName} {reply.replyingToObj.lastName}{\" \"}\n              </Text>\n            </TouchableOpacity>\n          ) : null}\n          <Text style={{ color: themeStyle.colors.grayscale.lowest }}>\n            {reply.body}\n          </Text>\n        </View>\n        <View style={styles.actionsContainer}>\n          <View style={styles.actions}>\n            <TouchableOpacity\n              onPress={() =>\n                handleReplyToReply({\n                  firstName: reply.replyAuthor.firstName,\n                  lastName: reply.replyAuthor.lastName,\n                  commentId: reply._id,\n                })\n              }\n              style={styles.replyTrigger}\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.grayscale.lower,\n                  fontWeight: \"700\",\n                }}\n              >\n                Reply\n              </Text>\n            </TouchableOpacity>\n            {!reply.belongsToUser ? (\n              <TouchableOpacity\n                onPress={() => handleReaction(reply)}\n                style={{\n                  justifyContent: \"center\",\n                  alignItems: \"flex-end\",\n                  height: 48,\n                  width: 48,\n                }}\n              >\n                <MaterialCommunityIcons\n                  name={reply.liked ? \"thumb-up\" : \"thumb-up-outline\"}\n                  size={20}\n                  color={\n                    reply.liked\n                      ? themeStyle.colors.secondary.default\n                      : themeStyle.colors.grayscale.low\n                  }\n                />\n              </TouchableOpacity>\n            ) : null}\n\n            {reply.likes ? ( // if likes more than 0\n              <Text\n                style={{\n                  color: themeStyle.colors.grayscale.lowest,\n                  marginLeft: 10,\n                }}\n              >\n                {reply.likes} {reply.likes > 1 ? \"likes\" : \"like\"}\n              </Text>\n            ) : null}\n          </View>\n          <View\n            style={{\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              flexDirection: \"row\",\n            }}\n          >\n            <CommentAge />\n          </View>\n        </View>\n      </View>\n    );\n  }\n  return <View />;\n};\nconst styles = StyleSheet.create({\n  replyContainer: {\n    width: \"100%\",\n    paddingLeft: 70,\n    marginTop: 20,\n  },\n  profileInfoContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 5,\n  },\n  replyBodyContainer: {\n    padding: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  replyAuthorName: {\n    maxWidth: 170,\n    marginLeft: 10,\n    color: themeStyle.colors.primary.default,\n    fontWeight: \"700\",\n  },\n  actionsContainer: {\n    // padding: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  actions: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  replyTrigger: {\n    marginHorizontal: 10,\n    margiHormarginHorizontal: 10,\n    height: 48,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  likeTrigger: {\n    marginRight: 10,\n  },\n  commentAge: {\n    color: themeStyle.colors.grayscale.low,\n    marginHorizontal: 10,\n    fontSize: 12,\n  },\n});\nexport default React.memo(CommentReplyCard);\n","import { useNavigation, useIsFocused } from \"@react-navigation/native\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  SafeAreaView,\n  Text,\n  View,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n  Platform,\n} from \"react-native\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport formatAge from \"../../../helpers/formatAge\";\nimport themeStyle from \"../../../theme.style\";\nimport Avatar from \"../../../components/Avatar\";\nimport {\n  Feather,\n  FontAwesome,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport ImageWithCache from \"../../../components/ImageWithCache\";\nimport VideoPlayer from \"../../../components/VideoPlayer\";\nimport AnimatedLottieView from \"lottie-react-native\";\nimport { useDispatch } from \"react-redux\";\nimport PostAge from \"../../../components/PostAge\";\nimport CardImage from \"../../../components/CardImage\";\nimport usePersistedWebParams from \"../../../helpers/hooks/usePersistedWebParams\";\n\nconst PostScreen = (props) => {\n  // const { post: initialPost, prevScreen } = props.route.params;\n\n  const routeParamsObj = props.route.params;\n  const persistedParams = usePersistedWebParams(routeParamsObj);\n\n  // if route params has values then return it else null\n  const params =\n    routeParamsObj[Object.keys(routeParamsObj)[0]] !== \"[object Object]\"\n      ? routeParamsObj\n      : null;\n\n  const dispatch = useDispatch();\n\n  const [post, setPost] = useState(null);\n  const [initialPost, setInitialPost] = useState(null);\n  const [bodyCollapsed, setBodyCollapsed] = useState(false);\n  const [isCollapsible, setIsCollapsible] = useState(false);\n\n  const handleUnMute = (state) => {\n    dispatch({ type: \"SET_GLOBAL_UNMUTE_VIDEOS\", payload: state });\n\n    // setFeed((prevFeed) => {\n    //   return prevFeed.map((post) => ({ ...post, unMute: state }));\n    // });\n  };\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  const { height: screenHeight, width: screenWidth } = Dimensions.get(\"window\");\n  const lottieRef = useRef(null);\n\n  const onTextLayout = (e) => {\n    setIsCollapsible(e.nativeEvent.lines.length >= 3);\n  };\n\n  const getAdditionalPostData = async () => {\n    if (initialPost) {\n      console.log(\"heyyeyey\");\n      const { success, response } = await apiCall(\n        \"POST\",\n        `/posts/${initialPost?._id}/additionaldata`\n      );\n      if (success) {\n        setPost({\n          ...post,\n          liked: response.liked,\n          likes: response.likes,\n          numberOfComments: response.numberOfComments,\n        });\n      }\n    }\n  };\n\n  const handleReaction = async () => {\n    if (post.liked) {\n      const newPost = { ...post, liked: false, likes: post.likes - 1 };\n      setPost(newPost);\n      const { success } = await apiCall(\n        \"GET\",\n        `/posts/like/remove/${post._id}`\n      );\n      console.log(success);\n      if (!success) {\n        setPost(initialPost);\n        return;\n      }\n      dispatch({ type: \"SET_UPDATED_POST\", payload: newPost });\n    } else {\n      const newPost = { ...post, liked: true, likes: post.likes + 1 };\n\n      setPost(newPost);\n      const { success } = await apiCall(\"GET\", `/posts/like/add/${post._id}`);\n      console.log(success);\n      if (!success) {\n        setPost(initialPost);\n        return;\n      }\n      dispatch({ type: \"SET_UPDATED_POST\", payload: newPost });\n    }\n    // lottieRef?.current?.play(15, 1000);\n  };\n\n  useEffect(() => {\n    const { post: initial } = params || persistedParams;\n    if (!initialPost) {\n      setPost(initial);\n      setInitialPost(initial);\n    }\n    navigation.addListener(\"focus\", async () => {\n      (async () => {\n        await getAdditionalPostData();\n      })();\n    });\n    return () => {\n      navigation.removeListener(\"focus\");\n    };\n  }, [params, persistedParams, initialPost]);\n  if (post) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <ScrollView>\n          <View\n            style={[\n              Platform.OS === \"web\" && { maxWidth: 900, alignSelf: \"center\" },\n            ]}\n          >\n            <View>\n              {post.postAuthor && (\n                <View style={[styles.postAuthorContainer]}>\n                  <Avatar\n                    navigation={navigation}\n                    userId={post.postAuthor._id}\n                    size={50}\n                    avatarUrl={post.postAuthor.profileGifUrl}\n                    profileGifHeaders={post.postAuthor.profileGifHeaders}\n                    flipProfileVideo={post.postAuthor?.flipProfileVideo}\n                  />\n                  <View\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      marginLeft: 20,\n                    }}\n                  >\n                    <Text\n                      numberOfLines={1}\n                      style={{\n                        fontWeight: \"700\",\n                        maxWidth: 200,\n                        color: themeStyle.colors.grayscale.lowest,\n                      }}\n                    >\n                      {post.postAuthor.username}\n                    </Text>\n                    <Text\n                      style={{\n                        maxWidth: 200,\n                        color: themeStyle.colors.grayscale.lowest,\n                      }}\n                      numberOfLines={1}\n                    >\n                      {post.postAuthor.firstName} {post.postAuthor.lastName}\n                    </Text>\n                    {post.postAuthor.jobTitle && (\n                      <Text\n                        numberOfLines={1}\n                        style={{\n                          color: themeStyle.colors.grayscale.high,\n                          maxWidth: 200,\n                        }}\n                      >\n                        {post.postAuthor.jobTitle}\n                      </Text>\n                    )}\n                  </View>\n                </View>\n              )}\n            </View>\n            <TouchableOpacity\n              onPress={() =>\n                !post.private && navigation.navigate(\"MediaScreen\", { post })\n              }\n              underlayColor={themeStyle.colors.grayscale.high}\n              delayPressIn={150}\n              disabled={!!post.gif}\n            >\n              <View>\n                {post.gif ? (\n                  <View\n                    style={{\n                      flex: 1,\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <Image\n                      resizeMode={\"contain\"}\n                      style={{\n                        aspectRatio: 1 / 1,\n                        width: \"100%\",\n                        height: \"100%\",\n                      }}\n                      source={{ uri: post.gif }}\n                    />\n                  </View>\n                ) : post.mediaType === \"video\" ? (\n                  <View\n                    style={{\n                      flex: 1,\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <VideoPlayer\n                      shouldPlay={isFocused}\n                      mediaIsSelfie={post.mediaIsSelfie}\n                      url={post.mediaUrl}\n                      thumbnailUrl={post.thumbnailUrl}\n                      thumbnailHeaders={post.thumbnailHeaders}\n                      isUploading={post.ready === false}\n                      isCancelled={post.cancelled}\n                      screenHeight={screenHeight}\n                      screenWidth={screenWidth}\n                      height={post.height}\n                      width={post.width}\n                      setUnMuteVideos={handleUnMute} // TODO: test this\n                    />\n                  </View>\n                ) : post.mediaType === \"image\" ? (\n                  <View\n                    style={{\n                      flex: 1,\n                    }}\n                  >\n                    <CardImage\n                      isFull\n                      mediaHeaders={post.mediaHeaders}\n                      mediaUrl={post.mediaUrl}\n                      screenWidth={screenWidth}\n                      screenHeight={screenHeight}\n                      height={post.height}\n                      width={post.width}\n                    />\n                  </View>\n                ) : null}\n              </View>\n            </TouchableOpacity>\n            {post.body ? (\n              <View\n                style={{\n                  margin: 10,\n                }}\n              >\n                <Text\n                  onTextLayout={onTextLayout}\n                  numberOfLines={!bodyCollapsed ? 15 : null}\n                  style={{\n                    textAlign: \"left\",\n                    color: themeStyle.colors.grayscale.lowest,\n                  }}\n                >\n                  {post.body}\n                </Text>\n                {isCollapsible && !bodyCollapsed ? (\n                  <TouchableOpacity onPress={() => setBodyCollapsed(true)}>\n                    <Text\n                      style={{\n                        color: themeStyle.colors.grayscale.low,\n                        marginBottom: 10,\n                        marginTop: 5,\n                      }}\n                    >\n                      Read more\n                    </Text>\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n            ) : null}\n            <View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  flex: 1,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {!post.belongsToUser ? (\n                    <TouchableOpacity\n                      onPress={() => handleReaction()}\n                      style={{\n                        width: 48,\n                        height: 48,\n                        justifyContent: \"center\",\n                        alignItems: \"flex-start\",\n                      }}\n                    >\n                      {post.liked ? (\n                        <View\n                          style={{\n                            width: 40,\n                            height: 40,\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <MaterialIcons\n                            name={\"thumb-up\"}\n                            size={20}\n                            color={themeStyle.colors.secondary.default}\n                          />\n                        </View>\n                      ) : (\n                        <View\n                          style={{\n                            width: 40,\n                            height: 40,\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <MaterialCommunityIcons\n                            name={\"thumb-up-outline\"}\n                            size={20}\n                            color={themeStyle.colors.grayscale.lowest}\n                          />\n                        </View>\n                      )}\n                    </TouchableOpacity>\n                  ) : null}\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"CommentsScreen\", {\n                        postId: post._id,\n                      })\n                    }\n                    style={{\n                      width: 48,\n                      height: 48,\n                      justifyContent: \"center\",\n                      alignItems: \"flex-start\",\n                      marginHorizontal: 10,\n                    }}\n                  >\n                    <FontAwesome\n                      name=\"comment-o\"\n                      size={20}\n                      color={themeStyle.colors.grayscale.lowest}\n                    />\n                  </TouchableOpacity>\n                </View>\n                <TouchableOpacity\n                  onPress={() =>\n                    navigation.navigate(\"ShareScreen\", {\n                      prevScreen: \"Home\",\n                      post: post.repostPostObj || post,\n                    })\n                  }\n                  style={{\n                    width: 48,\n                    height: 48,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginHorizontal: 5,\n                    justifySelf: \"flex-end\",\n                  }}\n                >\n                  <Ionicons\n                    name=\"arrow-redo-outline\"\n                    size={22}\n                    color={themeStyle.colors.grayscale.lowest}\n                  />\n                </TouchableOpacity>\n              </View>\n              <View\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"space-between\",\n                  flexDirection: \"row\",\n                  height: 48,\n                  alignItems: \"center\",\n                }}\n              >\n                <Text\n                  style={{\n                    color: themeStyle.colors.grayscale.lower,\n                    fontSize: 12,\n                    marginHorizontal: 10,\n                    marginVertical: 5,\n                  }}\n                >\n                  {post.likes} likes\n                </Text>\n                {post.numberOfComments ? (\n                  <TouchableOpacity\n                    style={{\n                      height: 48,\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                    onPress={() =>\n                      navigation.navigate(\"CommentsScreen\", {\n                        postId: post._id,\n                      })\n                    }\n                  >\n                    <Text\n                      style={{\n                        color: themeStyle.colors.grayscale.lower,\n                        fontSize: 12,\n                        marginHorizontal: 10,\n                        fontWeight: \"700\",\n                      }}\n                    >\n                      View {post.numberOfComments}{\" \"}\n                      {post.numberOfComments > 1 ? \"comments\" : \"comment\"}\n                    </Text>\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n              <PostAge age={post.age} />\n            </View>\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n    );\n  }\n  return <View />;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  postAuthorContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    paddingHorizontal: 5,\n    marginBottom: 10,\n    marginTop: 10,\n    borderColor: themeStyle.colors.grayscale.low,\n  },\n});\n\nexport default PostScreen;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n  SafeAreaView,\n  StyleSheet,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  Dimensions,\n  ScrollView,\n  Alert,\n  ActivityIndicator,\n  FlatList,\n  SectionList,\n} from \"react-native\";\nimport { getItemAsync } from \"expo-secure-store\";\nimport { io } from \"socket.io-client\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Video } from \"expo-av\";\nimport { getInfoAsync } from \"expo-file-system\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport { nanoid } from \"nanoid/non-secure\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport get12HourTime from \"../../../helpers/get12HourTime\";\nimport getNameDate from \"../../../helpers/getNameDate\";\nimport themeStyle from \"../../../theme.style\";\nimport CameraStandard from \"../../../components/CameraStandard\";\nimport MessageContainer from \"../../../components/MessageContainer\";\nimport Constants from \"expo-constants\";\nimport {\n  Video as VideoCompress,\n  Image as ImageCompress,\n} from \"react-native-compressor\";\nimport { getThumbnailAsync } from \"expo-video-thumbnails\";\nimport openAppSettings from \"../../../helpers/openAppSettings\";\nimport backgroundUpload from \"../../../helpers/backgroundUpload\";\nimport { gestureHandlerRootHOC } from \"react-native-gesture-handler\";\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from \"recyclerlistview\";\nimport usePersistedWebParams from \"../../../helpers/hooks/usePersistedWebParams\";\n\nconst ChatScreen = (props) => {\n  const [authInfo, setAuthInfo] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [height, setHeight] = useState(1);\n\n  const [media, setMedia] = useState({});\n  const [showMediaSizeError, setShowMediaSizeError] = useState(false);\n  const [messageBody, setMessageBody] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [showError, setShowError] = useState(false);\n  const [cameraActive, setCameraActive] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const [chat, setChat] = useState(null);\n  const [existingChat, setExistingChat] = useState(null);\n  const [chatUserId, setChatUserId] = useState(null);\n  const [chatUserFirstName, setChatUserFirstName] = useState(null);\n  const [allMessagesLoaded, setAllMessagesLoaded] = useState(false);\n  const [showActions, setShowActions] = useState(false);\n  const [recipient, setRecipient] = useState(null);\n  const [userIsBlocked, setUserIsBlocked] = useState(false);\n  const [userHasBlocked, setUserHasBlocked] = useState(false);\n  const [creatingChat, setCreatingChat] = useState(false);\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [port, setPort] = useState(\"5000\");\n\n  const routeParamsObj = props.route.params;\n  const persistedParams = usePersistedWebParams(routeParamsObj);\n\n  // if route params has values then return it else null\n  const params =\n    routeParamsObj[Object.keys(routeParamsObj)[0]] !== \"[object Object]\"\n      ? routeParamsObj\n      : null;\n\n  const navigation = useNavigation();\n\n  const { width: screenWidth } = Dimensions.get(\"window\");\n\n  const mediaSize = screenWidth / 1.5;\n\n  const createUpdatedMessagesArray = (newMessage) => {\n    return [newMessage, ...messages];\n  };\n\n  const createChat = async () => {\n    // If the chat doesn't exist, send request\n    if (!existingChat) {\n      setShowError(false);\n      const { response, success } = await apiCall(\"POST\", \"/chat/new\", {\n        participants: [chatUserId],\n      });\n      if (success) {\n        setChat(response);\n        /* Wait for the chat creation and join the room. Should get\n        a joinRoomSuccess event from the backend */\n        socket.emit(\"joinRoom\", {\n          chatId: response._id,\n          userId: authInfo?.senderId,\n        });\n      } else {\n        setShowError(true);\n      }\n      return response;\n    }\n  };\n\n  const getChatMessages = async () => {\n    if (chat && existingChat && !allMessagesLoaded) {\n      setShowError(false);\n      setLoadingMessages(true);\n      const { response, success } = await apiCall(\n        \"GET\",\n        `/chat/${chat._id}/messages/${messages.length}`\n      );\n      setLoadingMessages(false);\n      if (success) {\n        if (messages.length && !response?.length) {\n          setAllMessagesLoaded(true);\n        } else {\n          setMessages([...messages, ...response]);\n        }\n      } else {\n        setShowError(true);\n      }\n    }\n  };\n  const apiUrl = \"wss://magnet-backend.onrender.com\"; //Constants.manifest.extra.apiWebSocketUrl;\n  const initSocket = async (port, token) => {\n    const connection = io(apiUrl, {\n      auth: {\n        token,\n      },\n      withCredentials: true,\n      transports: [\"websocket\"],\n    });\n\n    setSocket(connection);\n  };\n\n  const generateThumbnail = async () => {\n    try {\n      const { uri } = await getThumbnailAsync(media?.uri, {\n        time: 0,\n      });\n      return uri;\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  const handleBackgroundUpload = async (\n    compressedUrl,\n    message,\n    messageId,\n    mediaType\n  ) => {\n    const filePath = compressedUrl\n      ? Platform.OS == \"android\"\n        ? compressedUrl?.replace(\"file://\", \"/\")\n        : compressedUrl\n      : Platform.OS == \"android\"\n      ? media?.uri.replace(\"file://\", \"\")\n      : media?.uri;\n\n    const { response: signedResponse, success: signedSuccess } = await apiCall(\n      \"POST\",\n      \"/files/signed-upload-url\",\n      { filename: `media.${filePath.split(\".\").pop()}` }\n    );\n    if (!signedSuccess) {\n      setShowError(true);\n      return;\n    }\n\n    const token =\n      Platform.OS === \"web\"\n        ? localStorage.getItem(\"authToken\")\n        : await getItemAsync(\"authToken\");\n\n    await backgroundUpload({\n      filePath,\n      url: signedResponse.signedUrl,\n      disableLogs: true,\n    });\n\n    // if we have video add the id for message as a thumbnail would have already been sent and message would already exist\n    const extraFields =\n      mediaType === \"video\"\n        ? {\n            _id: messageId,\n          }\n        : {};\n\n    const { success } = await apiCall(\"POST\", \"/chat/message/upload\", {\n      mediaKey: signedResponse.fileKey,\n      auth: token,\n      ...message,\n      ...extraFields,\n    });\n\n    return success;\n  };\n\n  const handleMessage = async () => {\n    /* If first message, first create chat. The actual message will be sent on\n    the joinRoomSuccess event. */\n    if (socket?.connected && !messages.length && !existingChat) {\n      setCreatingChat(true);\n      await createChat();\n      setCreatingChat(false);\n      return;\n    }\n\n    // Not the first message, emit the message as standard\n    if (socket?.connected && chat?._id) {\n      await handleMessageSend(chat._id);\n    }\n  };\n\n  /**\n   * If image - Compress, get signed url, upload in background and send mediaKey for the file to the backend and mark message as complete which then gets sent to all recepients.\n   * If video - Compress, get signed url, generate and upload thumbnail, then send thumbnail key to backend. If success, compress, get signed url and upload video. Then send mediaKey to backend to update the existing message with mediaKey and mark as ready.\n   */\n  const handleMessageSend = async (chatId) => {\n    if (media?.uri && media?.type && socket?.connected) {\n      const message = {\n        body: messageBody,\n        chatId,\n        senderId: authInfo?.senderId,\n        mediaType: media.type?.split(\"/\")[0],\n        online: !!recipient?.online,\n        recipientId: recipient?.userId,\n        auth: authInfo?.token,\n      };\n\n      const mediaType = media.type?.split(\"/\")[0];\n\n      if (mediaType === \"image\") {\n        setSendingMessage(true);\n        await ImageCompress.compress(\n          media.uri,\n          {\n            compressionMethod: \"auto\",\n          },\n          (progress) => {\n            // console.log({ compression: progress });\n          }\n        ).then(async (compressedUrl) => {\n          const tempId = nanoid();\n          await handleBackgroundUpload(\n            compressedUrl,\n            { ...message, tempId },\n            null,\n            mediaType\n          ).then(() => {\n            const mediaType = media.type?.split(\"/\")[0];\n            if (socket) {\n              const newMessages = createUpdatedMessagesArray({\n                body: messageBody,\n                chatId,\n                senderId: authInfo?.senderId,\n                user: \"sender\",\n                mediaUrl: media.uri,\n                mediaHeaders: {}, // recieved as null if media is video\n                mediaType,\n                stringTime: get12HourTime(new Date()),\n                stringDate: getNameDate(new Date()),\n                tempId,\n                _id: tempId, // Incase we use _id anywhere, we need a unique field so we pass a temporary id\n                ready: true,\n              });\n              setMessages(newMessages);\n              setMessageBody(\"\");\n              setHeight(0);\n              setMedia({});\n            }\n          });\n        });\n        setSendingMessage(false);\n        return;\n      }\n      setSendingMessage(true);\n\n      let postData = {};\n      const thumbnailUrl =\n        media.type?.split(\"/\")[0] === \"video\"\n          ? await generateThumbnail()\n          : null;\n\n      if (thumbnailUrl) {\n        const { response, success } = await apiCall(\n          \"POST\",\n          \"/files/signed-upload-url\",\n          { filename: `mediaThumbnail.${thumbnailUrl.split(\".\").pop()}` }\n        );\n        if (!success) {\n          setShowError(true);\n          return;\n        }\n        // upload thumbnail\n        await backgroundUpload({\n          filePath:\n            Platform.OS == \"android\"\n              ? thumbnailUrl.replace(\"file://\", \"\")\n              : thumbnailUrl,\n          url: response.signedUrl,\n          disableLogs: true,\n        });\n\n        postData.thumbnailKey = response.fileKey; // This is the thumbnail. We send this to backend which saves it as the thumbnailkey for this message\n      }\n      // else if (media.type?.split(\"/\")[0] === \"image\") {\n      //   // We add image here and upload but also in background upload below? WHY? need to test this\n      //   postData.append(\"file\", {\n      //     uri: media.uri,\n      //     name: `image.${media.uri.split(\".\").pop()}`,\n      //     type: `image/${media.uri.split(\".\").pop()}`,\n      //   });\n      // }\n\n      postData = { ...postData, ...message };\n\n      const { response, success } = await apiCall(\n        \"POST\",\n        \"/chat/message/upload\",\n        postData\n      );\n      setSendingMessage(false);\n\n      if (success) {\n        const newMessages = createUpdatedMessagesArray({\n          body: messageBody,\n          chatId,\n          senderId: authInfo?.senderId,\n          user: \"sender\",\n          mediaUrl: \"\",\n          mediaHeaders: {}, // recieved as null if media is video\n          mediaType: media.type?.split(\"/\")[0],\n          thumbnailUrl:\n            media.type?.split(\"/\")[0] === \"video\" ? thumbnailUrl : null,\n          stringTime: get12HourTime(new Date()),\n          stringDate: getNameDate(new Date()),\n          _id: response._id,\n          ready: false,\n        });\n\n        setMessages(newMessages);\n        setMessageBody(\"\");\n        setHeight(0);\n        setMedia({});\n        const mediaType = media.type?.split(\"/\")[0];\n\n        if (mediaType === \"video\") {\n          await VideoCompress.compress(\n            media.uri,\n            {\n              compressionMethod: \"auto\",\n              minimumFileSizeForCompress: 20,\n              // getCancellationId: (cancellationId) =>\n              //   (cancelId = cancellationId),\n            },\n            (progress) => {\n              console.log({ videocompression: progress });\n            }\n          ).then(async (compressedUrl) => {\n            await handleBackgroundUpload(\n              compressedUrl,\n              message,\n              response._id,\n              mediaType\n            ).then((success) => {\n              if (!success) {\n                setShowError(true);\n              }\n              if (socket) {\n                const newMessages = createUpdatedMessagesArray({\n                  body: messageBody,\n                  chatId,\n                  senderId: authInfo?.senderId,\n                  user: \"sender\",\n                  mediaUrl: media.uri,\n                  thumbnailUrl,\n                  mediaHeaders: response.mediaHeaders,\n                  mediaType,\n                  stringTime: get12HourTime(new Date()),\n                  stringDate: getNameDate(new Date()),\n                  _id: response._id,\n                });\n\n                setMessages(newMessages);\n                setMessageBody(\"\");\n                setHeight(0);\n                setMedia({});\n              }\n            });\n          });\n          return;\n        }\n      } else {\n        console.log(\"Failed to upload message media\");\n      }\n\n      return true;\n    }\n\n    socket.emit(\"sendMessage\", {\n      body: messageBody,\n      chatId,\n      senderId: authInfo?.senderId,\n      online: !!recipient?.online,\n      recipientId: recipient?.userId,\n    });\n    const newMessages = createUpdatedMessagesArray({\n      body: messageBody,\n      chatId,\n      senderId: authInfo?.senderId,\n      user: \"sender\",\n      stringTime: get12HourTime(new Date()),\n      stringDate: getNameDate(new Date()),\n      _id: nanoid(),\n      ready: true,\n    });\n\n    setMessages(newMessages);\n    setMessageBody(\"\");\n    setHeight(0);\n\n    return true;\n  };\n\n  const cancelUpload = async (messageId) => {\n    const { success, response, message } = await apiCall(\n      \"GET\",\n      `/chat/message/cancel/${messageId}`\n    );\n\n    if (success) {\n      setMessages((messages) => {\n        return messages.filter((message) => {\n          if (message._id !== messageId) {\n            return message;\n          }\n        });\n      });\n    }\n  };\n\n  const pickImage = async () => {\n    setShowMediaSizeError(false);\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      Alert.alert(\n        \"Unable access camera roll\",\n        \"Please enable storage permissions to post media from your local files.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Settings\",\n            onPress: () => openAppSettings(),\n          },\n        ]\n      );\n    }\n\n    if (status === \"granted\") {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        quality: 0.3,\n      });\n\n      if (!result.cancelled) {\n        const mediaInfo = await getInfoAsync(result.uri);\n        const mediaSizeInMb = mediaInfo.size / 1000000;\n        setShowActions(false);\n        if (mediaSizeInMb > 50) {\n          setShowMediaSizeError(true);\n          setMedia(result);\n        } else {\n          if (showMediaSizeError) {\n            setShowMediaSizeError(false);\n          }\n          setMedia(result);\n        }\n      }\n    }\n  };\n\n  const handleActivateCamera = () => {\n    setMedia({});\n    navigation.setOptions({ headerShown: false });\n    setCameraActive(true);\n  };\n\n  const toggleCamera = (state) => {\n    setCameraActive(state);\n    if (!state) {\n      navigation.setOptions({ headerShown: true });\n    }\n  };\n\n  const rowRenderer = useCallback(\n    (_, item, i) => (\n      <MessageContainer\n        cancelUpload={cancelUpload}\n        mediaSize={mediaSize}\n        firstMessageDate={\n          allMessagesLoaded && i === messages.length - 1\n            ? messages[i].stringDate\n            : null\n        }\n        messageDate={\n          i !== messages.length - 1 &&\n          messages[i + 1] &&\n          item.stringDate !== messages[i + 1].stringDate\n            ? messages[i].stringDate\n            : null\n        }\n        message={item}\n        belongsToSender={\n          authInfo?.senderId === item.senderId.toString() ||\n          item.user === \"sender\"\n        }\n      />\n    ),\n    [messages, authInfo]\n  );\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      () => 0,\n      (_, dim) => {\n        dim.height = 60;\n        dim.width = screenWidth;\n      }\n    )\n  ).current;\n\n  let dataProvider = new DataProvider((r1, r2) => {\n    return (\n      r1._id !== r2._id || r1.mediaUrl !== r2.mediaUrl || r1.ready !== r2.ready\n    );\n  }).cloneWithRows(messages);\n\n  useEffect(\n    () => {\n      // TODO: remove isMounted and implement better cleanup that works\n      (async () => {\n        const token =\n          Platform.OS === \"web\"\n            ? localStorage.getItem(\"authToken\")\n            : await getItemAsync(\"authToken\");\n        const senderId =\n          Platform.OS === \"web\"\n            ? localStorage.getItem(\"userId\")\n            : await getItemAsync(\"userId\");\n        setAuthInfo({ token, senderId });\n\n        if (chat) {\n          setLoading(true);\n          await getChatMessages();\n          setLoading(false);\n        }\n\n        if (chat?.users?.length) {\n          setRecipient({ userId: chat?.users?.[0]._id, online: false });\n          navigation.setOptions({\n            title: chat?.users?.[0].firstName,\n          });\n        } else {\n          navigation.setOptions({\n            title: chatUserFirstName,\n          });\n        }\n        // below needs to be last so we can init all other data before opening a socket connection and having things change due to incoming messages\n        await initSocket(port, token);\n      })();\n\n      return () => {};\n    },\n    [chat, params, persistedParams] //[chat, port]\n  );\n\n  useEffect(() => {\n    let isMounted = true;\n    if (socket && isMounted && authInfo) {\n      if (chat) {\n        socket.emit(\"joinRoom\", {\n          chatId: chat?._id,\n          userId: authInfo?.senderId,\n        });\n      }\n\n      socket.on(\"userIsBlocked\", () => {\n        setUserIsBlocked(true);\n      });\n\n      socket.on(\"userHasBlocked\", () => {\n        setUserHasBlocked(true);\n      });\n      socket.on(\"joinRoomSuccess\", async ({ chatId }) => {\n        /* This will send the message only if it's the first message */\n        if ((messageBody || media?.uri) && !existingChat) {\n          await handleMessageSend(chatId);\n        }\n      });\n\n      socket.on(\"userJoinedRoom\", async ({ userId }) => {\n        setRecipient({ userId, online: true });\n        navigation.setOptions({\n          title: `${chat?.users?.[0].firstName} - online`,\n        });\n        socket.emit(\"sendUserOnlineStatus\", {\n          chatId: chat?._id,\n          userId: authInfo?.senderId,\n        });\n      });\n\n      socket.on(\"userLeftRoom\", async ({ userId }) => {\n        setRecipient({ userId, online: false });\n        // console.log(userId, \"left\");\n        navigation.setOptions({\n          title: `${chat?.users?.[0].firstName}`,\n        });\n      });\n\n      socket.on(\"receiveUserOnlineStatus\", async ({ userId }) => {\n        if (userId !== authInfo?.senderId) {\n          setRecipient({ userId, online: true });\n          navigation.setOptions({\n            title: `${chat?.users?.[0].firstName} - online`,\n          });\n        }\n      });\n\n      socket.on(\n        \"receiveMessage\",\n        ({\n          body,\n          chatId,\n          senderId,\n          user,\n          mediaHeaders,\n          mediaUrl,\n          thumbnailUrl,\n          thumbnailHeaders,\n          mediaType,\n          stringDate,\n          stringTime,\n          _id,\n          tempId,\n        }) => {\n          if (senderId === authInfo.senderId) {\n            if (mediaType !== \"video\") return;\n            setMessages((messages) => {\n              return messages?.map((message) => {\n                if (\n                  message.mediaType &&\n                  (message._id === _id ||\n                    (message.tempId && message.tempId === tempId))\n                ) {\n                  return {\n                    ...message,\n                    // mediaHeaders,\n                    // mediaUrl,\n                    ready: true,\n                    _id,\n                  };\n                } else {\n                  return message;\n                }\n              });\n            });\n            return;\n          }\n          if (!socket?.connected) {\n            setShowError(true);\n          } else {\n            if (senderId !== authInfo.senderId && !recipient?.online) {\n              setRecipient({ userId: user?._id, online: true });\n            }\n\n            setMessages((prevMessages) => {\n              if (senderId !== authInfo.senderId) {\n                if (!prevMessages.find((message) => message._id === _id)) {\n                  return [\n                    {\n                      body,\n                      chatId,\n                      senderId,\n                      user,\n                      mediaHeaders,\n                      mediaUrl,\n                      mediaType,\n                      thumbnailUrl,\n                      thumbnailHeaders,\n                      stringDate,\n                      stringTime,\n                      _id,\n                      ready: true,\n                    },\n                    ...prevMessages,\n                  ];\n                } else {\n                  return prevMessages;\n                }\n              }\n            });\n          }\n        }\n      );\n    }\n\n    return () => {\n      isMounted = false;\n      if (socket) {\n        socket.disconnect();\n        socket.off(\"receiveMessage\");\n        socket.off(\"joinRoomSuccess\");\n        socket.off(\"userIsBlocked\");\n        socket.off(\"userHasBlocked\");\n        socket.off(\"userJoinedRoom\");\n        socket.off(\"userLeftRoom\");\n        socket.off(\"receiveUserOnlineStatus\");\n        setSocket(null);\n      }\n    };\n  }, [socket, authInfo, chat]);\n  useEffect(() => {\n    if (!existingChat) {\n      const { existingChat: existing } = params || persistedParams;\n      setExistingChat(existing);\n      setChat(existing);\n    }\n    if (!chatUserFirstName || !chatUserId) {\n      const { chatUserId: userId, chatUserFirstName: firstName } =\n        params || persistedParams;\n      setChatUserId(userId);\n      setChatUserFirstName(firstName);\n    }\n    return () => setMedia({});\n  }, [persistedParams]);\n\n  if (loading) {\n    return (\n      <View\n        style={{ flex: 1, justifyContent: \"flex-start\", alignItems: \"center\" }}\n      >\n        <ActivityIndicator animating size=\"small\" />\n      </View>\n    );\n  }\n\n  if (cameraActive) {\n    return (\n      <CameraStandard\n        cameraActive={cameraActive}\n        recording={recording}\n        setCameraActive={toggleCamera}\n        setFile={setMedia}\n        setRecording={setRecording}\n      />\n    );\n  }\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" && \"padding\"}\n        keyboardVerticalOffset={93}\n        style={{ flex: 1 }}\n      >\n        {/* <TouchableOpacity\n          style={{ backgroundColor: \"red\", margin: 20 }}\n          onPress={() => setPort(\"5000\")}\n        >\n          <Text style={{ color: \"white\" }}>5000</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{ backgroundColor: \"green\", margin: 20 }}\n          onPress={() => setPort(\"5001\")}\n        >\n          <Text style={{ color: \"white\" }}>5001</Text>\n        </TouchableOpacity> */}\n        <ActivityIndicator\n          size=\"small\"\n          animating={loadingMessages}\n          color={themeStyle.colors.secondary.default}\n        />\n        {messages.length && Platform.OS !== \"web\" ? (\n          <RecyclerListView\n            style={{ minHeight: 1, minWidth: 1, transform: [{ scaleY: -1 }] }}\n            rowRenderer={rowRenderer}\n            dataProvider={dataProvider}\n            onEndReached={() => getChatMessages()}\n            layoutProvider={layoutProvider}\n            onEndReachedThreshold={0.5}\n            forceNonDeterministicRendering\n          />\n        ) : messages.length && Platform.OS === \"web\" ? (\n          <FlatList\n            data={messages}\n            onEndReached={() => getChatMessages()}\n            onEndReachedThreshold={0.5}\n            inverted\n            disableVirtualization={true}\n            keyExtractor={(item, i) => item._id + i}\n            style={{ flex: 1 }}\n            renderItem={({ item, i }) => (\n              <View\n                style={{\n                  width: \"100%\",\n                  maxWidth: 900,\n                  alignSelf: \"center\",\n                }}\n              >\n                <MessageContainer\n                  cancelUpload={cancelUpload}\n                  mediaSize={mediaSize}\n                  firstMessageDate={\n                    allMessagesLoaded && i === messages.length - 1\n                      ? messages[i].stringDate\n                      : null\n                  }\n                  messageDate={\n                    i !== messages.length - 1 &&\n                    messages[i + 1] &&\n                    item.stringDate !== messages[i + 1].stringDate\n                      ? messages[i].stringDate\n                      : null\n                  }\n                  message={item}\n                  belongsToSender={\n                    authInfo?.senderId === item.senderId.toString() ||\n                    item.user === \"sender\"\n                  }\n                  isWeb={Platform.OS === \"web\"}\n                />\n              </View>\n            )}\n          />\n        ) : (\n          <View style={{ flex: 1 }} />\n        )}\n        {showError ? (\n          <Text\n            style={{\n              color: themeStyle.colors.error.default,\n              textAlign: \"center\",\n            }}\n          >\n            Something has gone wrong... {\"\\n\"}Please try again later.\n          </Text>\n        ) : null}\n\n        {userIsBlocked ? (\n          <Text\n            style={{\n              textAlign: \"center\",\n              color: themeStyle.colors.grayscale.lowest,\n              marginHorizontal: 10,\n            }}\n          >\n            This user has blocked you.\n          </Text>\n        ) : userHasBlocked ? (\n          <Text\n            style={{\n              textAlign: \"center\",\n              color: themeStyle.colors.grayscale.lowest,\n              marginHorizontal: 10,\n            }}\n          >\n            You have blocked this user.\n          </Text>\n        ) : null}\n        <View\n          style={{\n            flexDirection: \"row\",\n            height: Math.max(height, 70),\n            // maxHeight: 100,\n            alignItems: \"flex-end\",\n            paddingVertical: 10,\n            justifyContent: \"center\",\n          }}\n        >\n          {Platform.OS !== \"web\" ? (\n            <View\n              style={[\n                {\n                  flexDirection: \"column\",\n                  justifyContent: \"flex-end\",\n                  alignItems: \"center\",\n                  height: \"100%\",\n                },\n              ]}\n            >\n              <TouchableOpacity\n                style={[\n                  {\n                    marginHorizontal: 5,\n                    width: 48,\n                    height: 48,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    backgroundColor: \"rgba(140, 140, 140, 0.8)\",\n                    borderRadius: 50,\n                    marginBottom: 5,\n                  },\n                  !showActions && { display: \"none\" },\n                ]}\n                onPress={() => pickImage()}\n              >\n                <FontAwesome\n                  name=\"photo\"\n                  size={24}\n                  color={themeStyle.colors.white}\n                />\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                style={[\n                  {\n                    marginHorizontal: 5,\n                    width: 48,\n                    height: 48,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    backgroundColor: \"rgba(140, 140, 140, 0.8)\",\n                    borderRadius: 50,\n                    marginBottom: 5,\n                  },\n                  !showActions && { display: \"none\" },\n                ]}\n                onPress={() => handleActivateCamera(true)}\n              >\n                <Ionicons\n                  name=\"camera-outline\"\n                  size={26}\n                  color={themeStyle.colors.white}\n                />\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                style={{\n                  width: 48,\n                  height: 48,\n                  marginHorizontal: 10,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  borderRadius: 100,\n                  backgroundColor: \"rgba(140, 140, 140, 0.3)\",\n                }}\n                onPress={() => setShowActions(!showActions)}\n              >\n                <Ionicons\n                  name={showActions ? \"close\" : \"add\"}\n                  size={26}\n                  color={themeStyle.colors.grayscale.lowest}\n                />\n              </TouchableOpacity>\n            </View>\n          ) : null}\n          <View\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              paddingHorizontal: 10,\n              backgroundColor: themeStyle.colors.grayscale.higher,\n              borderWidth: 0.5,\n              borderColor: themeStyle.colors.grayscale.low,\n              borderRadius: 5,\n              flex: 1,\n              opacity: userHasBlocked || userIsBlocked ? 0.3 : 1,\n              maxWidth: 900,\n              alignSelf: \"center\",\n            }}\n          >\n            <ScrollView scrollEnabled={height > 48}>\n              <View\n                style={[\n                  {\n                    justifyContent: \"center\",\n                    color: themeStyle.colors.grayscale.lowest,\n                  },\n                  {\n                    height: height < 48 ? 48 : height,\n                    paddingTop: height < 48 ? 0 : 10,\n                    paddingBottom: height < 48 ? 0 : 10,\n                  },\n                ]}\n              >\n                <TextInput\n                  maxLength={2000}\n                  style={[\n                    {\n                      color: themeStyle.colors.grayscale.lowest,\n                    },\n                    {\n                      paddingTop: height < 48 ? 0 : 10,\n                      paddingBottom: height < 48 ? 0 : 10,\n                    },\n                  ]}\n                  value={messageBody}\n                  placeholderTextColor={themeStyle.colors.grayscale.lower}\n                  multiline\n                  placeholder=\"Type a message...\"\n                  onChangeText={(v) => setMessageBody(v)}\n                  scrollEnabled\n                  editable={!userHasBlocked && !userIsBlocked}\n                  onContentSizeChange={(event) => {\n                    setHeight(\n                      event.nativeEvent.contentSize.height < 150\n                        ? event.nativeEvent.contentSize.height\n                        : 150\n                    );\n                  }}\n                />\n              </View>\n            </ScrollView>\n          </View>\n          <View\n            style={{\n              justifyContent: \"flex-end\",\n              height: \"100%\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                marginLeft: 10,\n                marginRight: 10,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: 48,\n                width: 48,\n                opacity:\n                  ((!media?.uri || !media.type) && !messageBody) ||\n                  userIsBlocked ||\n                  showMediaSizeError\n                    ? 0.5\n                    : 1,\n              }}\n              disabled={\n                ((!media?.uri || !media.type) && !messageBody) ||\n                userIsBlocked ||\n                creatingChat ||\n                sendingMessage | showMediaSizeError\n              }\n              onPress={() => handleMessage()}\n            >\n              {!creatingChat && !sendingMessage ? (\n                <Ionicons\n                  name=\"send-sharp\"\n                  size={24}\n                  color={themeStyle.colors.grayscale.lowest}\n                />\n              ) : (\n                <ActivityIndicator animating size=\"small\" />\n              )}\n            </TouchableOpacity>\n          </View>\n        </View>\n        <View\n          style={[\n            { alignItems: \"center\", position: \"relative\" },\n            media.uri && { margin: 20 },\n          ]}\n        >\n          {media?.type?.includes(\"image\") ? (\n            <View\n              style={{\n                height: screenWidth - 40,\n                alignItems: \"center\",\n                padding: 5,\n              }}\n            >\n              <Image\n                resizeMode=\"contain\"\n                source={{ uri: media.uri }}\n                aspectRatio={1 / 1}\n                style={{\n                  height: \"100%\",\n                  backgroundColor: themeStyle.colors.black,\n                }}\n              />\n            </View>\n          ) : media?.type?.includes(\"video\") ? (\n            <View style={{ width: 200, height: 200 }}>\n              <Video\n                useNativeControls\n                source={{ uri: media.uri }}\n                resizeMode=\"cover\"\n                style={{ width: \"100%\", height: \"100%\", alignSelf: \"center\" }}\n              />\n            </View>\n          ) : null}\n          {media.uri ? (\n            <TouchableOpacity\n              onPress={() => {\n                setMedia({});\n                setShowActions(false);\n                setShowMediaSizeError(false);\n              }}\n              style={{ padding: 10 }}\n            >\n              <Text style={{ color: themeStyle.colors.grayscale.lowest }}>\n                Cancel\n              </Text>\n            </TouchableOpacity>\n          ) : null}\n          {showMediaSizeError ? (\n            <Text style={{ color: themeStyle.colors.error.default }}>\n              Choose a file smaller than 50MB.\n            </Text>\n          ) : null}\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  horizontalLines: {\n    flex: 1,\n    height: 1,\n    backgroundColor: themeStyle.colors.grayscale.low,\n  },\n});\n\nexport default gestureHandlerRootHOC(ChatScreen);\n","const get12HourTime = (date) => {\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  const ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours %= 12;\n  hours = hours || 12;\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\n  const stringTime = `${hours}:${minutes} ${ampm}`;\n  return stringTime;\n};\n\nexport default get12HourTime;\n","const getNameDate = (date) => {\n  const ageDifMs = Date.now() - date;\n  const ageDate = new Date(ageDifMs);\n\n  const showYear = Math.abs(ageDate.getUTCFullYear() - 1970) >= 1;\n\n  const year = date.getFullYear();\n\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December',\n  ];\n\n  const month = monthNames[date.getMonth()];\n  const day = date.getDate();\n\n  if (showYear) {\n    return `${month} ${day} ${year}`;\n  }\n  return `${month} ${day}`;\n};\n\nexport default getNameDate;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport themeStyle from \"../theme.style\";\nimport MessageBox from \"./MessageBox\";\n\nconst MessageContainer = ({\n  message,\n  messageDate,\n  firstMessageDate,\n  belongsToSender,\n  mediaSize,\n  cancelUpload,\n  isWeb,\n}) => {\n  return (\n    <View style={{ width: \"100%\", transform: [{ scaleY: !isWeb ? -1 : 1 }] }}>\n      {messageDate ? (\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={styles.horizontalLines} />\n          <Text\n            style={{\n              textAlign: \"center\",\n              marginHorizontal: 10,\n              color: themeStyle.colors.grayscale.low,\n            }}\n          >\n            {messageDate}\n          </Text>\n          <View style={styles.horizontalLines} />\n        </View>\n      ) : null}\n      {firstMessageDate ? (\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={styles.horizontalLines} />\n          <Text\n            style={{\n              textAlign: \"center\",\n              marginHorizontal: 10,\n              color: themeStyle.colors.grayscale.low,\n            }}\n          >\n            {firstMessageDate}\n          </Text>\n          <View style={styles.horizontalLines} />\n        </View>\n      ) : null}\n      <MessageBox\n        message={message}\n        belongsToSender={belongsToSender}\n        mediaSize={mediaSize}\n        cancelUpload={cancelUpload}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  horizontalLines: {\n    flex: 1,\n    height: 1,\n    backgroundColor: themeStyle.colors.grayscale.low,\n  },\n});\n\nexport default React.memo(MessageContainer);\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  Platform,\n} from \"react-native\";\nimport { AntDesign, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport ImageWithCache from \"./ImageWithCache\";\nimport themeStyle from \"../theme.style\";\nimport ExpoVideoPlayer from \"./ExpoVideoPlayer\";\nimport slashedDate from \"../helpers/slashedDate\";\n\nconst MessageBox = ({ belongsToSender, message, mediaSize, cancelUpload }) => {\n  const {\n    body,\n    mediaUrl,\n    mediaHeaders,\n    stringTime,\n    mediaType,\n    thumbnailUrl,\n    thumbnailHeaders,\n    ready,\n    failed,\n  } = message;\n  const [mediaFullScreen, setMediaFullScreen] = useState(false);\n  return (\n    <View style={styles.container}>\n      {mediaType === \"video\" ? ( // render video in fullcsreen, for image this is handled inside imagewithcache component.\n        <Modal\n          presentationStyle=\"pageSheet\"\n          onRequestClose={() => setMediaFullScreen(false)}\n          visible={mediaFullScreen}\n        >\n          <View\n            style={{\n              flex: 1,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor: themeStyle.colors.grayscale.highest,\n            }}\n          >\n            <View\n              style={{\n                position: \"absolute\",\n                top: 10,\n                right: 10,\n                zIndex: 10,\n              }}\n            >\n              <TouchableOpacity onPress={() => setMediaFullScreen(false)}>\n                <AntDesign\n                  name=\"close\"\n                  size={24}\n                  color={themeStyle.colors.white}\n                  style={{\n                    color: themeStyle.colors.white,\n                    textShadowOffset: {\n                      width: 1,\n                      height: 1,\n                    },\n                    textShadowRadius: 8,\n                    textShadowColor: themeStyle.colors.black,\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n            <ExpoVideoPlayer uri={mediaUrl} />\n          </View>\n        </Modal>\n      ) : null}\n      <View\n        style={[\n          styles.subContainer,\n          {\n            alignItems: belongsToSender ? \"flex-end\" : \"flex-start\",\n          },\n        ]}\n      >\n        <View>\n          {Platform.OS === \"web\" ? (\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                alignSelf: belongsToSender ? \"flex-end\" : \"flex-start\",\n                // marginLeft: !belongsToSender ? 10 : 0,\n                // marginRight: belongsToSender ? 10 : 0,\n                marginVertical: 10,\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 12,\n                  fontWeight: \"700\",\n                  textAlign: \"right\",\n                  color: themeStyle.colors.grayscale.lowest,\n                  alignSelf: belongsToSender ? \"flex-end\" : \"flex-start\",\n                }}\n              >\n                {belongsToSender\n                  ? \"Me\"\n                  : `${message.user?.firstName || \"\"}, ${\n                      message.user?.jobTitle || \"\"\n                    }`}\n              </Text>\n              <View\n                style={{\n                  height: 5,\n                  width: 5,\n                  borderRadius: 5,\n                  backgroundColor: themeStyle.colors.grayscale.lowest,\n                  color: themeStyle.colors.grayscale.lowest,\n                  alignSelf: \"center\",\n                  marginHorizontal: 4,\n                }}\n              />\n              <Text\n                style={{\n                  fontSize: 12,\n                  fontWeight: \"700\",\n                  textAlign: \"right\",\n                  color: themeStyle.colors.grayscale.lowest,\n                  alignSelf: belongsToSender ? \"flex-end\" : \"flex-start\",\n                }}\n              >\n                {slashedDate(message.createdAt)}\n              </Text>\n            </View>\n          ) : null}\n          <View\n            style={[\n              styles.message,\n              belongsToSender\n                ? {\n                    marginLeft: 50,\n                    backgroundColor: themeStyle.colors.primary.default,\n                    borderTopRightRadius: 0,\n                  }\n                : {\n                    marginRight: 50,\n                    backgroundColor: themeStyle.colors.secondary.default,\n                    borderTopLeftRadius: 0,\n                  },\n            ]}\n          >\n            {failed && !ready ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity onPress={() => cancelUpload(message?._id)}>\n                  <Text\n                    style={{\n                      color: themeStyle.colors.error.default,\n                      fontWeight: \"700\",\n                    }}\n                  >\n                    Delete\n                  </Text>\n                </TouchableOpacity>\n                <Text\n                  style={{\n                    fontSize: 12,\n                    fontWeight: \"700\",\n                    textAlign: \"right\",\n                    color: themeStyle.colors.white,\n                    alignSelf: belongsToSender ? \"flex-end\" : \"flex-start\",\n                    padding: 5,\n                  }}\n                >\n                  Failed to send message.\n                </Text>\n              </View>\n            ) : !ready ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity onPress={() => cancelUpload(message?._id)}>\n                  <Text\n                    style={{\n                      color: themeStyle.colors.error.default,\n                      fontWeight: \"700\",\n                    }}\n                  >\n                    Cancel\n                  </Text>\n                </TouchableOpacity>\n                <Text\n                  style={{\n                    fontSize: 16,\n                    fontWeight: \"700\",\n                    textAlign: \"right\",\n                    color: themeStyle.colors.white,\n                    alignSelf: belongsToSender ? \"flex-end\" : \"flex-start\",\n                    marginBottom: 5,\n                  }}\n                >\n                  Sending...\n                </Text>\n              </View>\n            ) : (\n              <Text\n                style={{\n                  fontSize: 12,\n                  fontWeight: \"700\",\n                  textAlign: \"right\",\n                  color: themeStyle.colors.white,\n                  alignSelf: belongsToSender ? \"flex-end\" : \"flex-start\",\n                }}\n              >\n                {stringTime}\n              </Text>\n            )}\n            {mediaUrl && mediaType === \"image\" ? (\n              <TouchableOpacity onPress={() => setMediaFullScreen(true)}>\n                <ImageWithCache\n                  removeBorderRadius\n                  resizeMode=\"cover\"\n                  mediaUrl={mediaUrl}\n                  mediaHeaders={mediaHeaders}\n                  aspectRatio={1 / 1}\n                  toggleFullScreen={setMediaFullScreen}\n                  isFullScreen={mediaFullScreen}\n                  style={{\n                    width: mediaSize || 200,\n                    height: mediaSize || 200,\n                    maxWidth: 500,\n                    maxHeight: 500,\n                  }}\n                />\n              </TouchableOpacity>\n            ) : thumbnailUrl && mediaType === \"video\" ? (\n              <TouchableOpacity onPress={() => setMediaFullScreen(true)}>\n                <View\n                  style={{ alignItems: \"center\", justifyContent: \"center\" }}\n                >\n                  <ImageWithCache\n                    removeBorderRadius\n                    resizeMode=\"cover\"\n                    mediaUrl={thumbnailUrl}\n                    mediaHeaders={thumbnailHeaders || {}}\n                    style={{\n                      width: mediaSize || 200,\n                      height: mediaSize || 200,\n                      maxWidth: 500,\n                      maxHeight: 500,\n                    }}\n                  />\n                  <View\n                    style={{\n                      position: \"absolute\",\n                      backgroundColor: themeStyle.colors.secondary.light,\n                      borderRadius: 100,\n                    }}\n                  >\n                    <MaterialCommunityIcons\n                      name=\"play\"\n                      size={60}\n                      color={themeStyle.colors.grayscale.lowest}\n                    />\n                  </View>\n                </View>\n              </TouchableOpacity>\n            ) : null}\n            {body ? (\n              <Text\n                style={{\n                  color: themeStyle.colors.white,\n                  textAlign: \"left\",\n                }}\n              >\n                {body}\n              </Text>\n            ) : null}\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 20,\n  },\n  senderName: {\n    color: themeStyle.colors.grayscale.lowest,\n    fontWeight: \"700\",\n    marginRight: 10,\n  },\n  message: {\n    borderRadius: 10,\n    padding: 5,\n    // margin: 20,\n    paddingVertical: 10,\n  },\n  subContainer: {\n    marginHorizontal: 10,\n    // flex: 1,\n  },\n});\n\nexport default MessageBox;\n","const slashedDate = (dateArg) => {\n  const date = new Date(dateArg);\n  const yyyy = date.getFullYear();\n  let mm = date.getMonth() + 1; // Months start at 0!\n  let dd = date.getDate();\n\n  if (dd < 10) dd = \"0\" + dd;\n  if (mm < 10) mm = \"0\" + mm;\n\n  const formattedDate = dd + \"/\" + mm + \"/\" + yyyy;\n  return formattedDate;\n};\n\nexport default slashedDate;\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  RefreshControl,\n  Dimensions,\n  Platform,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport ChatCard from \"../../../components/ChatCard\";\nimport themeStyle from \"../../../theme.style\";\nimport ContentLoader from \"../../../components/ContentLoader\";\nimport { useSelector } from \"react-redux\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from \"recyclerlistview\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\n\nconst ChatListScreen = () => {\n  const [chats, setChats] = useState([]);\n  const [error, setError] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  const navigation = useNavigation();\n  const nativeUserData = useSelector((state) => state.userData);\n  const userData =\n    Platform.OS === \"web\"\n      ? { state: getWebPersistedUserData() }\n      : nativeUserData;\n\n  const { width: screenWidth } = Dimensions.get(\"window\");\n\n  const getUserChats = async () => {\n    const { response, success } = await apiCall(\n      \"GET\",\n      `/user/chats/${chats.length}`\n    );\n    setError(false);\n    if (success) {\n      setChats([...chats, ...response]);\n    }\n  };\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      () => 0,\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 80;\n      }\n    )\n  ).current;\n\n  let dataProvider = new DataProvider((r1, r2) => {\n    return r1._id !== r2._id || r1.upToDateUsers !== r2.upToDateUsers;\n  }).cloneWithRows(chats);\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await getUserChats();\n    setRefreshing(false);\n  }, []);\n\n  const rowRenderer = useCallback(\n    (_, item) => (\n      <ChatCard\n        userId={userData.state?._id}\n        chat={item}\n        onPress={() =>\n          navigation.navigate(\"ChatScreen\", { existingChat: item })\n        }\n      />\n    ),\n    [chats.length]\n  );\n\n  useEffect(() => {\n    const focusListener = navigation.addListener(\"focus\", async () => {\n      await getUserChats();\n      setLoaded(true);\n    });\n\n    return () => {\n      navigation.removeListener(focusListener);\n    };\n  }, [navigation]);\n  if (loaded && !chats.length) {\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            textAlign: \"center\",\n            fontSize: 20,\n            marginHorizontal: 10,\n            marginBottom: 20,\n          }}\n        >\n          Your chats will appear here\n        </Text>\n        <Ionicons\n          name=\"md-chatbox-outline\"\n          size={100}\n          color={themeStyle.colors.grayscale.high}\n        />\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"CreateChatScreen\")}\n          style={{ marginTop: 50 }}\n        >\n          <View\n            style={{\n              paddingVertical: 5,\n              paddingHorizontal: 10,\n              borderWidth: 1,\n              borderColor: themeStyle.colors.secondary.default,\n              borderRadius: 5,\n            }}\n          >\n            <Text\n              style={{\n                fontWeight: \"700\",\n                color: themeStyle.colors.grayscale.lowest,\n              }}\n            >\n              Create a chat\n            </Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n  return (\n    <View style={styles.container}>\n      {!loaded && !error ? (\n        <View style={{ marginLeft: 10 }}>\n          <ContentLoader\n            listSize={6}\n            active\n            showAvatar\n            hideExtraText\n            avatarSize={50}\n          />\n        </View>\n      ) : null}\n      {error ? (\n        <View>\n          <Text>Oops, something went wrong</Text>\n        </View>\n      ) : chats.length ? (\n        <RecyclerListView\n          style={{ minHeight: 1, minWidth: 1 }}\n          rowRenderer={rowRenderer}\n          dataProvider={dataProvider}\n          onEndReached={() => getUserChats()}\n          layoutProvider={layoutProvider}\n          onEndReachedThreshold={0.5}\n          scrollViewProps={{\n            refreshControl: (\n              <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n            ),\n          }}\n        />\n      ) : (\n        <View />\n      )}\n      <View\n        style={{\n          position: \"absolute\",\n          bottom: 20,\n          right: 20,\n          borderRadius: 100,\n          borderWidth: 2,\n          borderColor: themeStyle.colors.primary.default,\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            height: 60,\n            width: 60,\n            zIndex: 20,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          onPress={() => navigation.navigate(\"CreateChatScreen\")}\n        >\n          <Entypo\n            name=\"new-message\"\n            size={24}\n            color={themeStyle.colors.grayscale.lowest}\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport default ChatListScreen;\n","import React from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport themeStyle from \"../theme.style\";\nimport Avatar from \"./Avatar\";\n\nconst ChatCard = ({ chat, onPress, userId }) => {\n  const user = chat.users?.[0];\n\n  return (\n    <TouchableOpacity\n      onPress={onPress ? () => onPress() : null}\n      disabled={!onPress}\n    >\n      <View style={styles.container}>\n        <Avatar\n          preventClicks\n          size={50}\n          avatarUrl={user.profileGifUrl || \"\"}\n          profileGifHeaders={user.profileGifHeaders}\n          flipProfileVideo={user.flipProfileVideo}\n        />\n        <View style={styles.chatInfo}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"flex-end\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text\n              numberOfLines={1}\n              style={{\n                fontWeight: \"600\",\n                fontSize: 16,\n                color: themeStyle.colors.grayscale.lowest,\n                flex: 1,\n              }}\n            >\n              {user.firstName} {user.lastName}\n            </Text>\n            {!chat?.upToDateUsers?.includes(userId) ? (\n              <View\n                style={{\n                  backgroundColor: themeStyle.colors.primary.default,\n                  width: 20,\n                  height: 20,\n                  borderRadius: 20,\n                }}\n              />\n            ) : null}\n          </View>\n          <Text\n            style={[\n              {\n                color: themeStyle.colors.grayscale.low,\n                marginTop: 10,\n                marginRight: 20,\n              },\n              !chat?.upToDateUsers?.includes(userId) && {\n                fontWeight: \"700\",\n                color: themeStyle.colors.primary.default,\n              },\n            ]}\n            numberOfLines={1}\n          >\n            {chat.lastMessage?.body ||\n              chat.lastMessage?.mediaType?.toUpperCase()}\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    borderBottomWidth: 0.5,\n    borderBottomColor: themeStyle.colors.grayscale.low,\n    paddingVertical: 10,\n    marginHorizontal: 20,\n  },\n  chatInfo: {\n    marginHorizontal: 20,\n    flex: 1,\n    justifyContent: \"space-between\",\n  },\n});\n\nexport default React.memo(ChatCard);\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Keyboard,\n  Dimensions,\n  RefreshControl,\n  ActivityIndicator,\n  Platform,\n} from \"react-native\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport UserThumbnail from \"../../../components/UserThumbnail\";\nimport UserSearchBar from \"../../../components/UserSearchBar\";\nimport themeStyle from \"../../../theme.style\";\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from \"recyclerlistview\";\nimport { useSelector } from \"react-redux\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\n\nconst CreateChatScreen = () => {\n  const isMounted = useRef(null);\n\n  const nativeUserData = useSelector((state) => state.userData)?.state;\n\n  const userData =\n    Platform.OS === \"web\" ? getWebPersistedUserData() : nativeUserData;\n\n  const [contacts, setContacts] = useState([]);\n  const [error, setError] = useState(false);\n  const [searchedContacts, setSearchedContacts] = useState([]);\n  const [offsets, setOffsets] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const onEndReachedCalledDuringMomentum = useRef(false);\n\n  const data =\n    searchedContacts === \"none\"\n      ? []\n      : searchedContacts?.length\n      ? searchedContacts\n      : contacts;\n\n  const navigation = useNavigation();\n\n  const { width: screenWidth } = Dimensions.get(\"window\");\n\n  const handleSetSearchedContacts = async (data) => {\n    onEndReachedCalledDuringMomentum.current = true;\n    setSearchedContacts(data);\n  };\n\n  const getUserContacts = async () => {\n    const { success, response } = await apiCall(\n      \"POST\",\n      `/user/friend/fetch/all`,\n      offsets\n    );\n    const { friendsAsSenderOffset, friendsAsReceiverOffset } = response;\n    setOffsets({ friendsAsSenderOffset, friendsAsReceiverOffset });\n    if (success) {\n      setContacts([...contacts, ...response.friends]); // TODO: rename to contacts in BE\n    } else {\n      setError(true);\n    }\n  };\n\n  const handleChatNavigation = async (chatUserId, chatUserFirstName) => {\n    setError(false);\n    const { response, success, message } = await apiCall(\n      \"POST\",\n      \"/chat/exists\",\n      {\n        participants: [chatUserId],\n      }\n    );\n    if (success) {\n      if (response === null) {\n        navigation.navigate(\"ChatScreen\", { chatUserId, chatUserFirstName });\n      } else {\n        navigation.navigate(\"ChatScreen\", { existingChat: response });\n      }\n    } else {\n      setError(true);\n    }\n  };\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      () => 0,\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 80;\n      }\n    )\n  ).current;\n\n  let dataProvider = new DataProvider((r1, r2) => {\n    return r1._id !== r2._id;\n  }).cloneWithRows(data);\n\n  const rowRenderer = useCallback(\n    (_, item) => (\n      <TouchableOpacity\n        onPress={() => handleChatNavigation(item._id, item.firstName)}\n      >\n        <UserThumbnail preventClicks user={item} avatarSize={50} />\n      </TouchableOpacity>\n    ),\n    [contacts]\n  );\n\n  useEffect(() => {\n    isMounted.current = true;\n    (async () => {\n      if (userData?.profileVideoUrl) {\n        setLoading(true);\n        await getUserContacts();\n        setLoading(false);\n      }\n    })();\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  if (loading) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ActivityIndicator\n          animating\n          size={\"large\"}\n          color={themeStyle.colors.primary.default}\n        />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <UserSearchBar // TODO: This only searches in the data provided. Users will expect all contacts to be shared not just the current ones loaded. Need to make this call an endpoint possibly\n        setResults={handleSetSearchedContacts}\n        onSubmitEditing={() => Keyboard.dismiss()}\n        customSearch\n        placeholder={\"name, username or job title\"}\n        publicUsers\n        avoidSameUser\n      />\n      {error ? (\n        <View>\n          <Text\n            style={{\n              textAlign: \"center\",\n              color: themeStyle.colors.grayscale.lowest,\n            }}\n          >\n            Something went wrong, please try again later.\n          </Text>\n        </View>\n      ) : data?.length ? (\n        <RecyclerListView\n          style={{ minHeight: 1, minWidth: 1 }}\n          rowRenderer={rowRenderer}\n          dataProvider={dataProvider}\n          onEndReached={() => {\n            if (!onEndReachedCalledDuringMomentum.current) {\n              getUserContacts();\n              onEndReachedCalledDuringMomentum.current = true;\n            }\n          }}\n          layoutProvider={layoutProvider}\n          onEndReachedThreshold={0.5}\n          scrollViewProps={{\n            onMomentumScrollBegin: () => {\n              onEndReachedCalledDuringMomentum.current = false;\n            },\n          }}\n        />\n      ) : (\n        <View style={{ marginLeft: 10 }} />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n  },\n});\n\nexport default CreateChatScreen;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  ActivityIndicator,\n  StyleSheet,\n  Dimensions,\n  SafeAreaView,\n  KeyboardAvoidingView,\n  Platform,\n  Alert,\n} from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Camera } from \"expo-camera\";\nimport { Ionicons, FontAwesome5 } from \"@expo/vector-icons\";\nimport { getItemAsync } from \"expo-secure-store\";\nimport themeStyle from \"../../../theme.style\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport ProfileVideoCamera from \"../../../components/ProfileVideoCamera\";\nimport PreviewVideo from \"../../../components/PreviewVideo\";\nimport ContentLoader from \"../../../components/ContentLoader\";\nimport InputNoBorder from \"../../../components/InputNoBorder\";\nimport validateEmail from \"../../../helpers/validateEmail\";\nimport validatePassword from \"../../../helpers/validatePassword\";\nimport PasswordInputNoBorder from \"../../../components/PasswordInputNoBorder\";\nimport { detectFacesAsync } from \"expo-face-detector\";\nimport { getThumbnailAsync } from \"expo-video-thumbnails\";\nimport Upload from \"react-native-background-upload\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport openAppSettings from \"../../../helpers/openAppSettings\";\nimport { getInfoAsync } from \"expo-file-system\";\nimport webPersistUserData from \"../../../helpers/webPersistUserData\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\n\nconst { statusBarHeight } = Constants;\nconst EditUserDetailsScreen = () => {\n  const { width: screenWidth } = Dimensions.get(\"window\");\n  const [loading, setLoading] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [unFocussed, setUnFocussed] = useState(false);\n\n  const [email, setEmail] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [jobTitle, setJobTitle] = useState(null);\n  const [jobTitleOptions, setJobTitleOptions] = useState([]);\n\n  const [loadingVideo, setLoadingVideo] = useState(false);\n\n  const [validationErrors, setValidationErrors] = useState({});\n  const [initialProfileData, setInitialProfileData] = useState({});\n  const [detectingFaces, setDetectingFaces] = useState(false);\n\n  const [hasCameraPermission, setHasCameraPermission] = useState(null);\n  const [hasAudioPermission, setHasAudioPermission] = useState(null);\n\n  const [cameraActivated, setCameraActivated] = useState(false);\n\n  const [recording, setRecording] = useState(false);\n  const [recordingLength, setRecordingLength] = useState(30);\n\n  const [faceDetected, setFaceDetected] = useState(false);\n\n  const [profileVideo, setProfileVideo] = useState(\"\");\n  const [prevProfileVideo, setPrevProfileVideo] = useState(\"\");\n\n  const [updateError, setupdateError] = useState(\"\");\n  const [showVideoSizeError, setShowVideoSizeError] = useState(false);\n  const [tooShort, setTooShort] = useState(false);\n  const [tooLong, setTooLong] = useState(false);\n\n  const [showUpdatedPill, setShowUpdatedPill] = useState(false);\n  const [pickedFromCameraRoll, setPickedFromCameraRoll] = useState(false);\n\n  const [typingStatus, setTypingStatus] = useState({\n    name: \"\",\n    typing: false,\n    typingTimeout: 0,\n  });\n\n  const existingNativeUserData = useSelector((state) => state.userData);\n\n  const userdata =\n    Platform.OS === \"web\"\n      ? { state: getWebPersistedUserData() }\n      : existingNativeUserData;\n\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n\n  const pickProfileVideo = async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      Alert.alert(\n        \"Unable access camera roll\",\n        \"Please enable storage permissions to upload a profile video from your local files.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Settings\",\n            onPress: () => openAppSettings(),\n          },\n        ]\n      );\n    }\n\n    if (status === \"granted\") {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Videos,\n        quality: 0.3,\n        allowsMultipleSelection: false,\n        videoMaxDuration: 30,\n        allowsEditing: false,\n      });\n      if (!result.cancelled) {\n        const mediaInfo = await getInfoAsync(result.uri);\n        const mediaSizeInMb = mediaInfo.size / 1000000;\n        if (mediaSizeInMb > 50) {\n          setShowVideoSizeError(true);\n          Alert.alert(\n            \"Unable to process this video\",\n            \"This video is too large. Please choose a video that is 50MB or smaller in size.\",\n            [\n              {\n                text: \"Cancel\",\n              },\n              {\n                text: \"Select Another Video\",\n                onPress: () => pickProfileVideo(),\n              },\n            ]\n          );\n          setLoading(false);\n          return;\n        }\n        setFaceDetected(false);\n        setDetectingFaces(false);\n        setPickedFromCameraRoll(true);\n        setShowVideoSizeError(false);\n        setProfileVideo(result.uri);\n      }\n    }\n  };\n\n  const handleFaceDetection = async (duration) => {\n    if (!profileVideo) return;\n    setLoadingVideo(true);\n    setTooShort(false);\n    setTooLong(false);\n    setDetectingFaces(true);\n    if (Number(duration) < 3000) {\n      // setProfileVideo(prevProfileVideo || initialProfileData?.profileVideoUrl);\n      setDetectingFaces(false);\n      setFaceDetected(false);\n      setTooShort(true);\n      setLoadingVideo(false);\n\n      return;\n    }\n    if (Number(duration) > 30000) {\n      setDetectingFaces(false);\n      setLoadingVideo(false);\n      setTooLong(true);\n      return;\n    }\n    setDetectingFaces(true);\n    const { uri } = await getThumbnailAsync(profileVideo, {\n      time: 3000,\n    });\n    const { faces } = await detectFacesAsync(uri);\n\n    if (faces?.length) {\n      setFaceDetected(true);\n      setPrevProfileVideo(profileVideo);\n    } else {\n      setFaceDetected(false);\n    }\n    setDetectingFaces(false);\n    setLoadingVideo(false);\n  };\n\n  const getJobTitles = async (query) => {\n    if (typingStatus.typingTimeout) {\n      clearTimeout(typingStatus.typingTimeout);\n    }\n    setTypingStatus({\n      name: query,\n      typing: false,\n      typingTimeout: setTimeout(async () => {\n        const { response } = await apiCall(\"GET\", `/jobs/search/${query}`);\n        if (response?.length) {\n          response.map((jobTitle) => {\n            jobTitle.title = jobTitle?.title.replace(\n              /(^\\w{1})|(\\s+\\w{1})/g,\n              (letter) => letter.toUpperCase()\n            );\n          });\n          setJobTitleOptions(response.length <= 5 ? response : []);\n        }\n      }, 200),\n    });\n  };\n\n  const validateInfo = async () => {\n    if (tooShort || tooLong) return false;\n\n    const emailValid = email ? await validateEmail(email) : true;\n    const passwordValid = password ? await validatePassword(password) : true;\n    const emailMessage =\n      email === \"\"\n        ? \"Your email cannot be empty\"\n        : !emailValid\n        ? \"This email not valid\"\n        : null;\n    const passwordMessage = !passwordValid\n      ? \"Your new password is not secure enough.\"\n      : null;\n\n    const validationResult = Object.assign(\n      {},\n      username === \"\" && { username: \"Your username cannot be empty\" },\n      username &&\n        username.length < 3 && { username: \"Please choose a longer username\" },\n      emailMessage && { email: emailMessage },\n      firstName === \"\" && { firstName: \"Your first name cannot be empty\" },\n      lastName === \"\" && { lastName: \"Your last name cannot be empty\" },\n      jobTitle === \"\" && { jobTitle: \"Your job title cannot be empty\" },\n      passwordMessage && { password: passwordMessage }\n    );\n\n    setValidationErrors(validationResult);\n    return validationResult;\n  };\n\n  const updateProfile = async () => {\n    setupdateError(\"\");\n    const validationResults = await validateInfo();\n    if (Object.keys(validationResults).length) {\n      return;\n    }\n    const payload = {\n      firstName,\n      lastName,\n      email,\n      password,\n      username,\n      jobTitle,\n    };\n    const validData = {};\n    const validValues = Object.keys(payload).filter((key) => {\n      if (payload[key] === initialProfileData[key]) {\n        return false;\n      }\n      // check if value is not null. Don't want to send null data to BE\n      if (payload[key] !== null) {\n        validData[key] = payload[key];\n        return true;\n      }\n    });\n    if (validValues.length || (profileVideo && faceDetected)) {\n      setIsUpdating(true);\n      const { success, other, response } = await apiCall(\n        \"POST\",\n        \"/user/update/details\",\n        validData\n      );\n      setIsUpdating(false);\n\n      if (success) {\n        setShowUpdatedPill(true);\n\n        setTimeout(() => {\n          setShowUpdatedPill(false);\n        }, 3000);\n\n        setInitialProfileData(response);\n      }\n      if (!success) {\n        if (other?.validationErrors) {\n          setValidationErrors(other.validationErrors);\n        } else {\n          setupdateError(\n            \"Sorry, we could not update your details. Please try again later.\"\n          );\n        }\n      }\n      if (!(profileVideo && faceDetected)) return;\n      const { response: signedData, success: signedDataSuccess } =\n        await apiCall(\"POST\", \"/files/signed-video-profile-upload-url\", {\n          username: userdata?.state?.username || \"\",\n          filename: profileVideo.replace(/^.*[\\\\\\/]/, \"\"),\n        });\n      if (!signedDataSuccess) {\n        setupdateError(\n          \"Sorry, we could not update your profile video. Please try again later.\"\n        );\n        return;\n      }\n\n      // get signed url\n      // if successfully uploaded profile video, send flipproflilevideo plus the profile video key to backend\n\n      const filePath =\n        Platform.OS == \"android\"\n          ? profileVideo.replace(\"file://\", \"\")\n          : profileVideo;\n\n      const options = {\n        url: signedData?.signedUrl,\n        path: filePath, // path to file\n        method: \"PUT\",\n        type: \"raw\",\n        maxRetries: 2, // set retry count (Android only). Default 2\n        field: \"file\",\n        // Below are options only supported on Android\n        notification: {\n          enabled: false,\n        },\n        useUtf8Charset: true,\n        // customUploadId: post?._id,\n      };\n      Upload.startUpload(options)\n        .then((uploadId) => {\n          Upload.addListener(\"progress\", uploadId, (progress) => {\n            console.log(progress);\n          });\n          Upload.addListener(\"error\", uploadId, async (data) => {\n            if (!unFocussed) {\n              setIsUpdating(false);\n              const other = JSON.parse(data.responseBody)?.other;\n\n              if (other?.validationErrors) {\n                setValidationErrors(other.validationErrors);\n              } else {\n                setupdateError(\n                  \"Sorry, we couldn't update your details. Please try again later\"\n                );\n              }\n            }\n          });\n          Upload.addListener(\"cancelled\", uploadId, async (data) => {\n            if (!unFocussed) {\n              setIsUpdating(false);\n              const other = JSON.parse(data.responseBody)?.other;\n\n              if (other?.validationErrors) {\n                setValidationErrors(other.validationErrors);\n              } else {\n                setupdateError(\n                  \"Sorry, we couldn't update your details. Please try again later\"\n                );\n              }\n            }\n          });\n          Upload.addListener(\"completed\", uploadId, async (data) => {\n            if (data.responseCode === 200) {\n              if (!unFocussed) {\n                setIsUpdating(false);\n              }\n\n              const { success, response } = await apiCall(\n                \"POST\",\n                \"/user/update/details\",\n                {\n                  flipProfileVideo:\n                    Platform.OS === \"android\" && !pickedFromCameraRoll,\n                  profileVideoKey: signedData?.profileVideoKey,\n                }\n              );\n              if (!unFocussed) {\n                if (!success) {\n                  setupdateError(\n                    \"Sorry, we couldn't update your details. Please try again later\"\n                  );\n                } else {\n                  setInitialProfileData(response);\n                  if (initialProfileData) {\n                    dispatch({\n                      type: \"SET_USER_DATA\",\n                      payload: {\n                        ...initialProfileData,\n                        ...response,\n                      },\n                    });\n                    webPersistUserData({\n                      ...initialProfileData,\n                      ...response,\n                    });\n                  }\n                }\n              }\n            } else if (!unFocussed) {\n              setupdateError(\n                \"Sorry, we couldn't update your details. Please try again later\"\n              );\n            }\n          });\n        })\n        .catch(async (e) => {\n          console.log(e);\n          if (!unFocussed) {\n            setupdateError(\n              \"Sorry, we couldn't upload your profile video. Please try again later\"\n            );\n          }\n        });\n    }\n  };\n\n  const checkUserExists = async (type, identifier) => {\n    const { response, success } = await apiCall(\"POST\", \"/user/check/exists\", {\n      type,\n      identifier,\n      userId,\n    });\n\n    if (success && response[type]?.exists) {\n      setValidationErrors({\n        ...validationErrors,\n        [type]: { exists: response[type].exists },\n      });\n    }\n\n    if (\n      success &&\n      !response[type]?.exists &&\n      Object.keys(validationErrors).length\n    ) {\n      const updatedValidationErrors = validationErrors;\n      delete updatedValidationErrors[type];\n      if (!Object.keys(updatedValidationErrors).length) {\n        setValidationErrors({});\n      } else {\n        setValidationErrors(updatedValidationErrors);\n      }\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const _userId =\n        Platform.OS === \"web\"\n          ? localStorage.getItem(\"userId\")\n          : await getItemAsync(\"userId\");\n\n      setUserId(_userId);\n      if (Platform.OS !== \"web\") {\n        const cameraStatus = await Camera.requestCameraPermissionsAsync();\n        setHasCameraPermission(cameraStatus.status === \"granted\");\n        const audioStatus = await Camera.requestMicrophonePermissionsAsync();\n        setHasAudioPermission(audioStatus.status === \"granted\");\n      }\n      const { response, success } = await apiCall(\"GET\", \"/user/data\");\n      setLoading(false);\n      if (success) {\n        setInitialProfileData(response);\n      } else {\n        setupdateError(\"Something went wrong... Please try again later\");\n      }\n    })();\n    return () => {\n      setHasCameraPermission(false);\n      setHasAudioPermission(false);\n      setUnFocussed(true);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (cameraActivated) {\n      navigation.setOptions({ headerShown: false });\n    } else {\n      navigation.setOptions({ headerShown: true });\n    }\n  }, [cameraActivated]);\n\n  if (cameraActivated && Platform.OS !== \"web\") {\n    return (\n      <ProfileVideoCamera\n        setRecording={setRecording}\n        setProfileVideo={(video) => {\n          setPickedFromCameraRoll(false);\n          setProfileVideo(video);\n        }}\n        setCameraActivated={setCameraActivated}\n        setRecordingLength={setRecordingLength}\n        recording={recording}\n        recordingLength={recordingLength}\n        hasCameraPermission={hasCameraPermission}\n        hasAudioPermission={hasAudioPermission}\n      />\n    );\n  }\n\n  if (loading) {\n    return (\n      <View>\n        <View style={{ width: screenWidth, height: screenWidth }}>\n          <ContentLoader active isProfileVideo />\n        </View>\n        <ContentLoader active isInput />\n        <ContentLoader active isInput />\n        <ContentLoader active isInput />\n        <ContentLoader active isInput />\n        <ContentLoader active isInput />\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" && \"padding\"}\n        style={{ flex: 1 }}\n      >\n        <View style={{ height: \"100%\" }}>\n          {showUpdatedPill ? (\n            <Text style={styles.newPostPill}>\n              {profileVideo && faceDetected ? \"Updating...\" : \"Updated\"}\n            </Text>\n          ) : null}\n          <ScrollView\n            style={{ marginBottom: 48 }}\n            keyboardShouldPersistTaps=\"handled\"\n          >\n            {!profileVideo && !initialProfileData.profileVideoUrl ? (\n              <Text\n                style={{\n                  color: themeStyle.colors.secondary.default,\n                  fontWeight: \"700\",\n                  textAlign: \"center\",\n                  marginVertical: 20,\n                  fontSize: 20,\n                  marginHorizontal: 10,\n                }}\n              >\n                {Platform.OS !== \"web\"\n                  ? \"Record a profile video to complete your profile.\"\n                  : \"Record a profile video to complete your profile through the Magnet App.\"}\n              </Text>\n            ) : null}\n            <View style={styles.formContainer}>\n              {Platform.OS !== \"web\" ? (\n                <>\n                  {(profileVideo && faceDetected) ||\n                  (!profileVideo && initialProfileData.profileVideoUrl) ? (\n                    <View>\n                      <PreviewVideo\n                        onLoad={(info) =>\n                          handleFaceDetection(info?.durationMillis)\n                        }\n                        flipProfileVideo={\n                          profileVideo && !loadingVideo\n                            ? !!(\n                                Platform.OS === \"android\" &&\n                                !pickedFromCameraRoll\n                              )\n                            : !!initialProfileData.flipProfileVideo\n                        }\n                        isFullWidth\n                        uri={\n                          profileVideo || initialProfileData?.profileVideoUrl\n                        }\n                        headers={initialProfileData?.profileVideoHeaders}\n                      />\n                      {!detectingFaces &&\n                      !loadingVideo &&\n                      !faceDetected &&\n                      profileVideo ? (\n                        <Text style={styles.faceDetectionError}>\n                          {tooShort\n                            ? \"Profile video must be at least 3 seconds long.\"\n                            : tooLong\n                            ? \"Profile video must be no longer than 30 seconds.\"\n                            : !faceDetected\n                            ? \"Face was not fully detected. Please make sure your face is shown at the start and end of your profile video when introducing yourself.\"\n                            : \"\"}\n                        </Text>\n                      ) : null}\n                      {profileVideo ? (\n                        <TouchableOpacity\n                          style={{ marginVertical: 10 }}\n                          onPress={() => {\n                            setProfileVideo(\"\");\n                            setFaceDetected(true);\n                            setDetectingFaces(false);\n                            setLoadingVideo(false);\n                            setTooShort(false);\n                            setTooLong(false);\n                          }}\n                        >\n                          <Text style={styles.resetProfileVideoText}>\n                            Reset Profile Video\n                          </Text>\n                        </TouchableOpacity>\n                      ) : null}\n                    </View>\n                  ) : profileVideo ? (\n                    <View>\n                      <PreviewVideo\n                        onLoad={(info) =>\n                          handleFaceDetection(info?.durationMillis)\n                        }\n                        isFullWidth\n                        flipProfileVideo={\n                          Platform.OS === \"android\" &&\n                          profileVideo &&\n                          !pickedFromCameraRoll\n                        }\n                        uri={profileVideo}\n                      />\n                      <View style={styles.faceDetectionError}>\n                        {!detectingFaces && !loadingVideo ? (\n                          <Text style={styles.faceDetectionError}>\n                            {tooShort\n                              ? \"Profile video must be at least 3 seconds long.\"\n                              : tooLong\n                              ? \"Profile video must be no longer than 30 seconds.\"\n                              : !faceDetected\n                              ? \"Face was not fully detected. Please make sure your face is shown at the start and end of your profile video when introducing yourself.\"\n                              : \"\"}\n                          </Text>\n                        ) : null}\n                        <TouchableOpacity\n                          style={{ marginVertical: 10 }}\n                          onPress={() => setProfileVideo(\"\")}\n                        >\n                          <Text style={styles.resetProfileVideoText}>\n                            Reset Profile Video\n                          </Text>\n                        </TouchableOpacity>\n                      </View>\n                    </View>\n                  ) : null}\n                </>\n              ) : null}\n              {Platform.OS !== \"web\" ? (\n                <View>\n                  <TouchableOpacity\n                    style={styles.takeVideoButton}\n                    onPress={() => {\n                      setFaceDetected(false);\n                      setCameraActivated(true);\n                      setRecordingLength(recordingLength);\n                    }}\n                  >\n                    <Text style={styles.takeVideoButtonText}>\n                      <Ionicons name=\"videocam\" size={14} /> Take new profile\n                      video\n                    </Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={styles.takeVideoButton}\n                    onPress={() => {\n                      setRecordingLength(recordingLength);\n                      pickProfileVideo();\n                    }}\n                  >\n                    <Text style={styles.takeVideoButtonText}>\n                      <FontAwesome5\n                        name=\"images\"\n                        size={14}\n                        color={themeStyle.colors.grayscale.lowest}\n                      />{\" \"}\n                      Upload new profile video\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n              ) : (\n                <View style={{ marginVertical: 20 }}>\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      textAlign: \"center\",\n                      color: themeStyle.colors.primary.default,\n                      fontWeight: \"700\",\n                    }}\n                  >\n                    Download the Magnet App to upload or take a profile video.\n                  </Text>\n                </View>\n              )}\n              <InputNoBorder\n                error={validationErrors?.firstName}\n                label=\"First Name\"\n                value={\n                  firstName !== null ? firstName : initialProfileData.firstName\n                }\n                setValue={setFirstName}\n                onChangeText={(v) => {\n                  setFirstName(v);\n                  if (validationErrors.firstName) {\n                    const updatedValidationErrors = validationErrors;\n                    delete updatedValidationErrors.firstName;\n                    setValidationErrors(updatedValidationErrors);\n                  }\n                }}\n              />\n              <InputNoBorder\n                error={validationErrors?.lastName}\n                label=\"Last Name\"\n                value={\n                  lastName !== null ? lastName : initialProfileData.lastName\n                }\n                setValue={setLastName}\n                onChangeText={(v) => {\n                  setLastName(v);\n                  if (validationErrors.lastName) {\n                    const updatedValidationErrors = validationErrors;\n                    delete updatedValidationErrors.lastName;\n                    setValidationErrors(updatedValidationErrors);\n                  }\n                }}\n              />\n              <View style={{ width: \"100%\" }}>\n                {jobTitleOptions?.length ? (\n                  <ScrollView\n                    style={{\n                      position: \"absolute\",\n                      bottom: 90,\n                      zIndex: 999,\n                      backgroundColor: themeStyle.colors.grayscale.higher,\n                      paddingHorizontal: 10,\n                      width: \"100%\",\n                    }}\n                    keyboardShouldPersistTaps=\"handled\"\n                  >\n                    <View>\n                      {jobTitleOptions.map((item, i) => (\n                        <TouchableOpacity\n                          style={{\n                            height: 48,\n                            justifyContent: \"center\",\n                            borderTopColor: themeStyle.colors.grayscale.highest,\n                            borderTopWidth: i > 0 ? 1 : 0,\n                            zIndex: 999,\n                          }}\n                          key={`${item._id}-${i}`}\n                          onPress={() => {\n                            setJobTitle(item.title);\n                            setJobTitleOptions([]);\n                          }}\n                        >\n                          <Text\n                            style={{\n                              color: themeStyle.colors.grayscale.lowest,\n                            }}\n                          >\n                            {item.title}\n                          </Text>\n                        </TouchableOpacity>\n                      ))}\n                    </View>\n                  </ScrollView>\n                ) : null}\n                <InputNoBorder\n                  label=\"Job title\"\n                  value={\n                    jobTitle !== null ? jobTitle : initialProfileData.jobTitle\n                  }\n                  setValue={setJobTitle}\n                  onChangeText={(v) => {\n                    if (!v) {\n                      setJobTitleOptions([]);\n                    }\n                    setJobTitle(v);\n                    getJobTitles(v);\n                    if (validationErrors.jobTitle) {\n                      const updatedValidationErrors = validationErrors;\n                      delete updatedValidationErrors.jobTitle;\n                      setValidationErrors(updatedValidationErrors);\n                    }\n                  }}\n                  error={validationErrors?.jobTitle}\n                  onBlur={() => setJobTitleOptions([])}\n                  onEndEditing={() => setJobTitleOptions([])}\n                  onClear={() => setJobTitleOptions([])}\n                />\n              </View>\n              <InputNoBorder\n                error={\n                  validationErrors?.username?.exists\n                    ? \"A user with this username already exists.\"\n                    : validationErrors?.username\n                }\n                label=\"Username\"\n                value={\n                  username !== null ? username : initialProfileData.username\n                }\n                setValue={setUsername}\n                onChangeText={(v) => {\n                  setUsername(v);\n                  if (validationErrors.username) {\n                    const updatedValidationErrors = validationErrors;\n                    delete updatedValidationErrors.username;\n                    setValidationErrors(updatedValidationErrors);\n                  }\n                }}\n                onEndEditing={(e) =>\n                  checkUserExists(\"username\", e.nativeEvent.text)\n                }\n              />\n              <InputNoBorder\n                error={\n                  validationErrors?.email?.exists\n                    ? \"A user with this email already exists.\"\n                    : validationErrors?.email\n                }\n                label=\"Email\"\n                value={email !== null ? email : initialProfileData.email}\n                setValue={setEmail}\n                onChangeText={(v) => {\n                  setEmail(v);\n                  if (validationErrors.email) {\n                    const updatedValidationErrors = validationErrors;\n                    delete updatedValidationErrors.email;\n                    setValidationErrors(updatedValidationErrors);\n                  }\n                }}\n                onEndEditing={(e) =>\n                  checkUserExists(\"email\", e.nativeEvent.text)\n                }\n              />\n              <View style={styles.textInputContainer}>\n                <PasswordInputNoBorder\n                  label={\"Password\"}\n                  error={validationErrors?.password}\n                  onChangeText={(v) => {\n                    setPassword(v);\n                    if (validationErrors?.password) {\n                      let newValidationErrorsObj = validationErrors;\n                      delete newValidationErrorsObj.password;\n                      setValidationErrors(newValidationErrorsObj);\n                    }\n                  }}\n                />\n                {validationErrors?.password && password ? (\n                  <View style={styles.passwordGuide}>\n                    <Text style={styles.errorText}>\n                      - Must be at least 8 characters\n                    </Text>\n                    <Text style={styles.errorText}>\n                      - Must container an uppercase character\n                    </Text>\n                    <Text style={styles.errorText}>\n                      - Must container an lowercase character\n                    </Text>\n                    <Text style={styles.errorText}>\n                      - Must container a number\n                    </Text>\n                  </View>\n                ) : null}\n              </View>\n              {updateError ? (\n                <Text style={styles.updateError}>{updateError}</Text>\n              ) : null}\n            </View>\n          </ScrollView>\n          <View\n            style={[\n              styles.submitButtonContainer,\n              ((profileVideo && !faceDetected) ||\n                Object.keys(validationErrors).length ||\n                detectingFaces ||\n                loadingVideo) && { opacity: 0.3 },\n            ]}\n          >\n            <TouchableOpacity\n              style={[styles.submitButton]}\n              onPress={() => updateProfile()}\n              disabled={\n                (profileVideo && !faceDetected) ||\n                Object.keys(validationErrors).length ||\n                detectingFaces ||\n                loadingVideo\n              }\n            >\n              {isUpdating && profileVideo ? (\n                <Text style={{ color: themeStyle.colors.grayscale.lowest }}>\n                  Updating...\n                </Text>\n              ) : isUpdating ? (\n                <ActivityIndicator\n                  size=\"small\"\n                  color={themeStyle.colors.white}\n                />\n              ) : (\n                <Text\n                  style={{\n                    color: themeStyle.colors.white,\n                    fontWeight: \"700\",\n                  }}\n                >\n                  Update details\n                </Text>\n              )}\n            </TouchableOpacity>\n          </View>\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n  },\n  formContainer: {\n    paddingHorizontal: 20,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    marginBottom: 50,\n  },\n  newPostPill: {\n    zIndex: 3, // works on ios\n    elevation: 3, // works on android\n    backgroundColor: themeStyle.colors.primary.default,\n    color: themeStyle.colors.grayscale.lowest,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderRadius: 20,\n    alignSelf: \"center\",\n    position: \"absolute\",\n    marginTop: statusBarHeight,\n  },\n  formHeader: {\n    fontSize: 20,\n  },\n  updateError: {\n    textAlign: \"center\",\n    color: themeStyle.colors.error.default,\n    fontWeight: \"500\",\n  },\n  resetProfileVideoText: {\n    textAlign: \"center\",\n    color: themeStyle.colors.secondary.default,\n  },\n  faceDetectionError: {\n    color: themeStyle.colors.error.default,\n    textAlign: \"center\",\n    fontWeight: \"700\",\n    marginVertical: 20,\n    marginHorizontal: 10,\n  },\n  faceDetectionErrorText: {\n    color: themeStyle.colors.error.default,\n    textAlign: \"center\",\n    fontWeight: \"700\",\n    marginBottom: 10,\n  },\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: \"transparent\",\n    flexDirection: \"row\",\n    margin: 20,\n  },\n  button: {\n    flex: 0.1,\n    alignSelf: \"flex-end\",\n    alignItems: \"center\",\n  },\n  textInputContainer: {\n    alignSelf: \"stretch\",\n    marginBottom: 20,\n  },\n  submitButtonContainer: {\n    width: \"98%\",\n    backgroundColor: themeStyle.colors.primary.default,\n    position: \"absolute\",\n    bottom: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 48,\n    zIndex: 1,\n    alignSelf: \"center\",\n    borderRadius: 5,\n  },\n  submitButton: {\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  takeVideoButton: {\n    margin: 10,\n    padding: 10,\n    borderWidth: 3,\n    borderColor: themeStyle.colors.primary.default,\n    borderRadius: 5,\n  },\n  takeVideoButtonText: {\n    color: themeStyle.colors.grayscale.lowest,\n    fontWeight: \"700\",\n  },\n  text: {\n    fontSize: 18,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  label: {\n    fontWeight: \"700\",\n  },\n  errorText: {\n    fontSize: 12,\n    color: themeStyle.colors.error.default,\n  },\n  visibleTextInputs: {\n    fontSize: 15,\n    height: 45,\n    paddingHorizontal: 10,\n    backgroundColor: themeStyle.colors.grayscale.lower,\n  },\n  searchBar: {\n    flex: 1,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  searchSection: {\n    flexDirection: \"row\",\n  },\n  searchIcon: {\n    padding: 10,\n  },\n  userResult: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n  },\n});\n\nexport default EditUserDetailsScreen;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport themeStyle from \"../theme.style\";\nconst InputNoBorder = ({\n  label,\n  value,\n  onChangeText,\n  error,\n  onEndEditing,\n  setValue,\n  onClear,\n  onBlur,\n}) => {\n  const handleClear = () => {\n    if (setValue) {\n      setValue(\"\");\n    }\n    if (onClear) {\n      onClear();\n    }\n  };\n  return (\n    <View style={styles.textInputContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <View\n        style={[\n          {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            flex: 1,\n            backgroundColor: themeStyle.colors.grayscale.higher,\n            paddingRight: 10,\n          },\n          error && {\n            borderColor: themeStyle.colors.error.default,\n            borderWidth: 1,\n          },\n        ]}\n      >\n        <TextInput\n          style={[styles.visibleTextInputs]}\n          value={value}\n          onChangeText={onChangeText ? (v) => onChangeText(v) : null}\n          onEndEditing={onEndEditing ? (e) => onEndEditing(e) : null}\n          onBlur={onBlur ? (e) => onBlur(e) : null}\n        />\n        {value ? (\n          <TouchableOpacity onPress={() => handleClear()}>\n            <AntDesign\n              name=\"closecircle\"\n              size={16}\n              color={themeStyle.colors.grayscale.low}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n      {error ? <Text style={styles.errorText}>{error}</Text> : null}\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  errorText: {\n    fontSize: 12,\n    color: themeStyle.colors.error.default,\n  },\n  label: {\n    fontWeight: \"700\",\n    color: themeStyle.colors.grayscale.lowest,\n    textAlign: \"left\",\n  },\n  visibleTextInputs: {\n    fontSize: 15,\n    height: 45,\n    paddingHorizontal: 10,\n    backgroundColor: themeStyle.colors.grayscale.higher,\n    flex: 1,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  textInputContainer: {\n    alignSelf: \"stretch\",\n    marginBottom: 20,\n  },\n});\nexport default React.memo(InputNoBorder);\n","import {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport themeStyle from \"../theme.style\";\nimport React, { useState } from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst PasswordInputNoBorder = ({\n  label,\n  value,\n  onChangeText,\n  error,\n  onEndEditing,\n  placeholder,\n  isOutlined,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <View style={styles.textInputContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <View\n        style={[\n          styles.passwordInputContainer,\n          isOutlined && {\n            borderWidth: 0,\n            borderBottomWidth: 2,\n            borderRadius: 0,\n            paddingLeft: 5,\n          },\n          error && {\n            borderColor: themeStyle.colors.error.default,\n            borderWidth: 1,\n          },\n        ]}\n      >\n        <TextInput\n          style={styles.passwordInput}\n          placeholderTextColor={themeStyle.colors.grayscale.low}\n          secureTextEntry={!showPassword}\n          autoCorrect={false}\n          placeholder={placeholder || \"\"}\n          value={value}\n          onChangeText={onChangeText ? (v) => onChangeText(v) : null}\n          onEndEditing={onEndEditing ? (e) => onEndEditing(e) : null}\n        />\n        <TouchableOpacity\n          style={styles.eyeIcon}\n          onPress={() => setShowPassword(!showPassword)}\n        >\n          <Ionicons\n            color={themeStyle.colors.grayscale.lowest}\n            name={showPassword ? \"eye-outline\" : \"eye-off-outline\"}\n            size={19}\n          />\n        </TouchableOpacity>\n      </View>\n      {error && typeof error === \"string\" ? (\n        <Text style={styles.errorText}>{error}</Text>\n      ) : null}\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  errorText: {\n    fontSize: 12,\n    color: themeStyle.colors.error.default,\n  },\n  label: {\n    fontWeight: \"700\",\n    color: themeStyle.colors.grayscale.lowest,\n    textAlign: \"left\",\n  },\n  textInput: {\n    fontSize: 15,\n    height: 45,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderWidth: 2,\n    borderColor: themeStyle.colors.primary.default,\n  },\n  textInputContainer: {\n    alignSelf: \"stretch\",\n    marginBottom: 20,\n  },\n  passwordInput: {\n    flex: 1,\n    fontSize: 15,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  passwordInputContainer: {\n    flexDirection: \"row\",\n    height: 45,\n    padding: 5,\n    paddingHorizontal: 8,\n    backgroundColor: themeStyle.colors.grayscale.higher,\n  },\n  eyeIcon: {\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n  },\n});\nexport default React.memo(PasswordInputNoBorder);\n","import React from \"react\";\nimport {\n  SafeAreaView,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  View,\n  Platform,\n} from \"react-native\";\nimport { setItemAsync } from \"expo-secure-store\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport themeStyle from \"../../../theme.style\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst SettingScreen = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n\n  const logout = async () => {\n    dispatch({ type: \"SET_USER_LOGGED_IN\", payload: false });\n  };\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.basicOptions}>\n        <View style={styles.option}>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"EditUserDetailsScreen\")}\n          >\n            <View style={styles.optionContent}>\n              <Ionicons\n                name=\"create-outline\"\n                size={14}\n                color={themeStyle.colors.grayscale.lowest}\n              />\n              <Text style={styles.basicOptionsText}>Edit My Details</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.option}>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"AccountScreen\")}\n          >\n            <View style={styles.optionContent}>\n              <Ionicons\n                name=\"person-outline\"\n                size={14}\n                color={themeStyle.colors.grayscale.lowest}\n              />\n              <Text style={styles.basicOptionsText}>Account Settings</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        {Platform.OS !== \"web\" ? (\n          <>\n            <View style={styles.option}>\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"PrivacyPolicyScreen\")}\n              >\n                <View style={styles.optionContent}>\n                  <Ionicons\n                    name=\"lock-closed-outline\"\n                    size={14}\n                    color={themeStyle.colors.grayscale.lowest}\n                  />\n                  <Text style={styles.basicOptionsText}>Privacy Policy</Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n            <View style={styles.option}>\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"TermsOfUseScreen\")}\n              >\n                <View style={styles.optionContent}>\n                  <Ionicons\n                    name=\"clipboard-outline\"\n                    size={14}\n                    color={themeStyle.colors.grayscale.lowest}\n                  />\n                  <Text style={styles.basicOptionsText}>Terms Of Use</Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n          </>\n        ) : null}\n      </View>\n      <View style={styles.signoutContainer}>\n        <TouchableOpacity onPress={() => logout()}>\n          <Text\n            style={{\n              color: themeStyle.colors.error.default,\n              fontWeight: \"700\",\n            }}\n          >\n            Sign Out\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  basicOptions: {\n    width: \"100%\",\n  },\n  basicOptionsText: {\n    color: themeStyle.colors.grayscale.lowest,\n    paddingHorizontal: 5,\n    fontSize: 16,\n    fontWeight: \"700\",\n    textAlign: \"left\",\n    marginLeft: 20,\n    width: \"100%\",\n    paddingRight: 14,\n  },\n  option: {\n    width: \"100%\",\n    borderBottomWidth: 0.5,\n    borderColor: themeStyle.colors.grayscale.high,\n  },\n  optionContent: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingVertical: 20,\n    paddingHorizontal: 40,\n  },\n  signoutContainer: {\n    alignItems: \"center\",\n    padding: 20,\n    borderTopWidth: 1,\n    borderColor: themeStyle.colors.grayscale.lowest,\n    width: \"100%\",\n  },\n});\n\nexport default SettingScreen;\n","import React from \"react\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport themeStyle from \"../../../theme.style\";\n\nconst PrivacyPolicyScreen = () => {\n  return (\n    <ScrollView style={{ padding: 10 }}>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 20,\n          fontWeight: \"700\",\n          margin: 10,\n        }}\n      >\n        PRIVACY NOTICE\n      </Text>\n      <View>\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            margin: 10,\n            fontWeight: \"700\",\n          }}\n        >\n          {\"\\n\"}Last updated January 07, 2022\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          Thank you for choosing to be part of our community at Magnet\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontWeight: \"700\",\n            }}\n          >\n            (&quot;Company,&quot; &quot;we,&quot; &quot;us,&quot; or\n            &quot;our&quot;)\n          </Text>\n          . We are committed to protecting your personal information and your\n          right to privacy. If you have any questions or concerns about this\n          privacy notice or our practices with regard to your personal\n          information, please contact us at privacy@magnetapp.co.uk.\n        </Text>\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            margin: 10,\n            fontWeight: \"700\",\n          }}\n        >\n          {\"\\n\"}\n          This privacy notice describes how we might use your information if\n          you:\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          - Download and use our mobile application — Magnet\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          - Engage with us in other related ways ― including any sales,\n          marketing, or events\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontWeight: \"700\",\n            }}\n          >\n            In this privacy notice, if we refer to:\n          </Text>\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontWeight: \"700\",\n            }}\n          >\n            - &quot;App&quot;{\" \"}\n          </Text>\n          , we are referring to any application of ours that references or links\n          to this policy, including any listed above\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontWeight: \"700\",\n            }}\n          >\n            - &quot;Services&quot;{\" \"}\n          </Text>\n          , we are referring to our App, and other related services, including\n          any sales, marketing, or events\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          The purpose of this privacy notice is to explain to you in the\n          clearest way possible what information we collect, how we use it, and\n          what rights you have in relation to it. If there are any terms in this\n          privacy notice that you do not agree with, please discontinue use of\n          our Services immediately.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontWeight: \"700\",\n            }}\n          >\n            Please read this privacy notice carefully, as it will help you\n            understand what we do with the information that we collect.\n          </Text>\n        </Text>\n      </View>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        1. WHAT INFORMATION DO WE COLLECT?\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 16,\n          fontWeight: \"700\",\n        }}\n      >\n        Personal information you disclose to us\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontWeight: \"700\",\n          }}\n        >\n          In Short:{\" \"}\n        </Text>\n        We collect personal information that you provide to us. {\"\\n\"}\n        {\"\\n\"}We collect personal information that you voluntarily provide to us\n        when you register on the App, express an interest in obtaining\n        information about us or our products and Services, when you participate\n        in activities on the App (such as by posting messages in our online\n        forums or entering competitions, contests or giveaways) or otherwise\n        when you contact us. The personal information that we collect depends on\n        the context of your interactions with us and the App, the choices you\n        make and the products and features you use.\n      </Text>\n      <Text\n        style={{ color: themeStyle.colors.grayscale.lowest, fontWeight: \"700\" }}\n      >\n        {\"\\n\"}\n        The personal information we collect may include the following: {\"\\n\"}\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 16,\n          fontWeight: \"700\",\n        }}\n      >\n        Personal Information Provided by You.{\"\\n\"}\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest }}>\n        We collect names; email addresses; job titles; usernames; passwords;\n        profile videos; profile gifs generated using your profile video; and\n        other similar information. {\"\\n\"}All personal information that you\n        provide to us must be true, complete and accurate, and you must notify\n        us of any changes to such personal information.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 16,\n          fontWeight: \"700\",\n        }}\n      >\n        Information collected through our App\n      </Text>\n      <View>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontWeight: \"700\",\n            }}\n          >\n            In Short:{\" \"}\n          </Text>{\" \"}\n          We collect information regarding your mobile device, push\n          notifications, when you use our App.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          If you use our App, we also collect the following information:\n        </Text>\n        <View>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Mobile Device Access. We may request access or permission to\n            certain features from your mobile device, including your mobile\n            device&apos;s camera, microphone, storage, and other features. If\n            you wish to change our access or permissions, you may do so in your\n            device&apos;s settings.\n          </Text>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Mobile Device Data. We automatically collect device information\n            (such as your mobile device ID, model and manufacturer), operating\n            system, version information and system configuration information,\n            device and application identification numbers, browser type and\n            version, hardware model, Internet service provider and/or mobile\n            carrier, and Internet Protocol (IP) address (or proxy server). If\n            you are using our App, we may also collect information about the\n            phone network associated with your mobile device, your mobile\n            device&apos;s operating system or platform, the type of mobile\n            device you use, your mobile device&apos;s unique device ID and\n            information about the features of our App you accessed.\n          </Text>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Push Notifications. We may request to send you push notifications\n            regarding your account or certain features of the App. If you wish\n            to opt-out from receiving these types of communications, you may\n            turn them off in your device&apos;s settings.\n          </Text>\n        </View>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          This information is primarily needed to maintain the security and\n          operation of our App, for troubleshooting and for our internal\n          analytics and reporting purposes.\n        </Text>\n      </View>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        2. HOW DO WE USE YOUR INFORMATION?\n      </Text>\n      <View>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontWeight: \"700\",\n            }}\n          >\n            In Short:{\" \"}\n          </Text>{\" \"}\n          We process your information for purposes based on legitimate business\n          interests, the fulfillment of our contract with you, compliance with\n          our legal obligations, and/or your consent. {\"\\n\"}\n          {\"\\n\"}We use personal information collected via our App for a variety\n          of business purposes described below. We process your personal\n          information for these purposes in reliance on our legitimate business\n          interests, in order to enter into or perform a contract with you, with\n          your consent, and/or for compliance with our legal obligations. We\n          indicate the specific processing grounds we rely on next to each\n          purpose listed below.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontWeight: \"700\",\n            }}\n          >\n            We use the information we collect or receive:\n          </Text>\n        </Text>\n        <View>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - To facilitate account creation and logon process. If you choose to\n            link your account with us to a third-party account (such as your\n            Google or Facebook account), we use the information you allowed us\n            to collect from those third parties to facilitate account creation\n            and logon process for the performance of the contract.\n          </Text>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - We may use your information to request feedback and to contact you\n            about your use of our App.\n          </Text>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - To enable user-to-user communications. We may use your information\n            in order to enable user-to-user communications with each user&apos;s\n            consent.\n          </Text>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - To manage user accounts. We may use your information for the\n            purposes of managing our account and keeping it in working order.\n          </Text>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - To send administrative information to you. We may use your\n            personal information to send you product, service and new feature\n            information and/or information about changes to our terms,\n            conditions, and policies.\n          </Text>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - To protect our Services. We may use your information as part of\n            our efforts to keep our App safe and secure (for example, for fraud\n            monitoring and prevention).\n          </Text>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - To enforce our terms, conditions and policies for business\n            purposes, to comply with legal and regulatory requirements or in\n            connection with our contract.\n          </Text>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - To respond to legal requests and prevent harm. If we receive a\n            subpoena or other legal request, we may need to inspect the data we\n            hold to determine how to respond.\n          </Text>\n        </View>\n      </View>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        3. WILL YOUR INFORMATION BE SHARED WITH ANYONE?\n      </Text>\n      <View>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontWeight: \"700\",\n            }}\n          >\n            In Short:{\" \"}\n          </Text>{\" \"}\n          We only share information with your consent, to comply with laws, to\n          provide you with services, to protect your rights, or to fulfill\n          business obligations.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          We may process or share your data that we hold based on the following\n          legal basis:\n        </Text>\n        <View>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Consent: We may process your data if you have given us specific\n            consent to use your personal information for a specific purpose.\n          </Text>\n\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Legitimate Interests: We may process your data when it is\n            reasonably necessary to achieve our legitimate business interests.\n          </Text>\n\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Performance of a Contract: Where we have entered into a contract\n            with you, we may process your personal information to fulfill the\n            terms of our contract.\n          </Text>\n\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Legal Obligations: We may disclose your information where we are\n            legally required to do so in order to comply with applicable law,\n            governmental requests, a judicial proceeding, court order, or legal\n            process, such as in response to a court order or a subpoena\n            (including in response to public authorities to meet national\n            security or law enforcement requirements).\n          </Text>\n\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Vital Interests: We may disclose your information where we believe\n            it is necessary to investigate, prevent, or take action regarding\n            potential violations of our policies, suspected fraud, situations\n            involving potential threats to the safety of any person and illegal\n            activities, or as evidence in litigation in which we are involved.\n          </Text>\n          {/* <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Deliver targeted advertising to you. We may use your information\n            to develop and display personalized content and advertising (and\n            work with third parties who do so) tailored to your interests and/or\n            location and to measure its effectiveness.\n          </Text> */}\n        </View>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          {\"\\n\"}\n          More specifically, we may need to process your data or share your\n          personal information in the following situations:\n        </Text>\n        <View>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Business Transfers. We may share or transfer your information in\n            connection with, or during negotiations of, any merger, sale of\n            company assets, financing, or acquisition of all or a portion of our\n            business to another company.\n          </Text>\n\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            - Other Users. When you share personal information (for example, by\n            posting comments, contributions or other content to the App) or\n            otherwise interact with public areas of the App, such personal\n            information may be viewed by all users and may be publicly made\n            available outside the App in perpetuity. Similarly, other users will\n            be able to view descriptions of your activity, communicate with you\n            within our App, and view your profile.\n          </Text>\n        </View>\n      </View>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        4. WHO WILL YOUR INFORMATION BE SHARED WITH?\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest }}>\n        {\"\\n\"}\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontWeight: \"700\",\n          }}\n        >\n          In Short:{\" \"}\n        </Text>\n        We only share information with the following categories of third\n        parties.{\"\\n\"}\n        {\"\\n\"}\n        We only share and disclose your information with the following\n        categories of third parties. If we have processed your data based on\n        your consent and you wish to revoke your consent, please contact us\n        using the contact details provided in point 13 titled{\" \"}\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontWeight: \"700\",\n          }}\n        >\n          &quot;HOW CAN YOU CONTACT US ABOUT THIS NOTICE?&quot;.{\"\\n\"}\n          {\"\\n\"}\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          - Ad Networks\n        </Text>\n      </Text>\n\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        5. WHAT IS OUR STANCE ON THIRD-PARTY WEBSITES AND APPS?\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontWeight: \"700\",\n          }}\n        >\n          In Short:{\" \"}\n        </Text>{\" \"}\n        We are not responsible for the safety of any information that you share\n        with third-party providers who advertise, but are not affiliated with\n        our App, Website or any other services we provide. {\"\\n\"}\n        {\"\\n\"}The App may contain advertisements from third parties that are not\n        affiliated with us and which may link to other websites, online services\n        or mobile applications. We cannot guarantee the safety and privacy of\n        data you provide to any third parties. Any data collected by third\n        parties is not covered by this privacy notice. We are not responsible\n        for the content or privacy and security practices and policies of any\n        third parties, including other websites, services or applications that\n        may be linked to or from the App. You should review the policies of such\n        third parties and contact them directly to respond to your questions.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        6. HOW LONG DO WE KEEP YOUR INFORMATION?\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontWeight: \"700\",\n          }}\n        >\n          In Short:{\" \"}\n        </Text>{\" \"}\n        We keep your information for as long as necessary to fulfill the\n        purposes outlined in this privacy notice unless otherwise required by\n        law. {\"\\n\"}\n        {\"\\n\"}We will only keep your personal information for as long as it is\n        necessary for the purposes set out in this privacy notice, unless a\n        longer retention period is required or permitted by law (such as tax,\n        accounting or other legal requirements). No purpose in this notice will\n        require us keeping your personal information for longer than the period\n        of time in which users have an account with us. When we have no ongoing\n        legitimate business need to process your personal information, we will\n        either delete or anonymize such information, or, if this is not possible\n        (for example, because your personal information has been stored in\n        backup archives), then we will securely store your personal information\n        and isolate it from any further processing until deletion is possible.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        7. HOW DO WE KEEP YOUR INFORMATION SAFE?\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontWeight: \"700\",\n          }}\n        >\n          In Short:{\" \"}\n        </Text>{\" \"}\n        We aim to protect your personal information through a system of\n        organizational and technical security measures. {\"\\n\"}\n        {\"\\n\"}We have implemented appropriate technical and organizational\n        security measures designed to protect the security of any personal\n        information we process. However, despite our safeguards and efforts to\n        secure your information, no electronic transmission over the Internet or\n        information storage technology can be guaranteed to be 100% secure, so\n        we cannot promise or guarantee that hackers, cybercriminals, or other\n        unauthorized third parties will not be able to defeat our security, and\n        improperly collect, access, steal, or modify your information. Although\n        we will do our best to protect your personal information, transmission\n        of personal information to and from our App is at your own risk. You\n        should only access the App within a secure environment.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        8. DO WE COLLECT INFORMATION FROM MINORS?\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontWeight: \"700\",\n          }}\n        >\n          In Short:{\" \"}\n        </Text>{\" \"}\n        We do not knowingly collect data from or market to children under 18\n        years of age.\n        {\"\\n\"}\n        {\"\\n\"}\n        We do not knowingly solicit data from or market to children under 18\n        years of age. By using the App, you represent that you are at least 18\n        or that you are the parent or guardian of such a minor and consent to\n        such minor dependent&apos;s use of the App. If we learn that personal\n        information from users less than 18 years of age has been collected, we\n        will deactivate the account and take reasonable measures to promptly\n        delete such data from our records. If you become aware of any data we\n        may have collected from children under age 18, please contact us at\n        privacy@magnetapp.co.uk.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        9. WHAT ARE YOUR PRIVACY RIGHTS?\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontWeight: \"700\",\n          }}\n        >\n          In Short:{\" \"}\n        </Text>{\" \"}\n        In some regions, such as the European Economic Area (EEA) and United\n        Kingdom (UK), you have rights that allow you greater access to and\n        control over your personal information. {\"\\n\"}\n        {\"\\n\"}You may review, change, or terminate your account at any time. In\n        some regions (like the EEA and UK), you have certain rights under\n        applicable data protection laws. These may include the right (i) to\n        request access and obtain a copy of your personal information, (ii) to\n        request rectification or erasure; (iii) to restrict the processing of\n        your personal information; and (iv) if applicable, to data portability.\n        In certain circumstances, you may also have the right to object to the\n        processing of your personal information. To make such a request, please\n        use the contact details provided below. We will consider and act upon\n        any request in accordance with applicable data protection laws. If we\n        are relying on your consent to process your personal information, you\n        have the right to withdraw your consent at any time. Please note however\n        that this will not affect the lawfulness of the processing before its\n        withdrawal, nor will it affect the processing of your personal\n        information conducted in reliance on lawful processing grounds other\n        than consent. If you are a resident in the EEA or UK and you believe we\n        are unlawfully processing your personal information, you also have the\n        right to complain to your local data protection supervisory authority.\n        You can find their contact details here:\n        https://ec.europa.eu/justice/data-protection/bodies/authorities/index_en.html.\n        If you are a resident in Switzerland, the contact details for the data\n        protection authorities are available here: https://www.edoeb.admin.ch.\n        If you have questions or comments about your privacy rights, you may\n        email us at privacy@magnetapp.co.uk.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 16,\n          fontWeight: \"700\",\n        }}\n      >\n        Account Information\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        If you would at any time like to review or change the information in\n        your account or terminate your account, you can:\n      </Text>\n      <View>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          - Log in and navigate to your account settings.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          - Update or delete your user account.\n        </Text>\n      </View>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        Upon your request to terminate your account, we will deactivate or\n        delete your account and information from our active databases. However,\n        we may retain some information in our files to prevent fraud,\n        troubleshoot problems, assist with any investigations, enforce our Terms\n        of Use and/or comply with applicable legal requirements.{\"\\n \"}\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontWeight: \"700\",\n          }}\n        >\n          Opting out of email marketing:{\"\\n\"}\n        </Text>\n        You can unsubscribe from our marketing email list at any time by\n        clicking on the unsubscribe link in the emails that we send or by\n        contacting us using the details provided below. You will then be removed\n        from the marketing email list — however, we may still communicate with\n        you, for example to send you service-related emails that are necessary\n        for the administration and use of your account, to respond to service\n        requests, or for other non-marketing purposes. To otherwise opt-out, you\n        may:\n      </Text>\n      <View>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n          - Access your account settings and update your preferences.\n        </Text>\n      </View>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        10. CONTROLS FOR DO-NOT-TRACK FEATURES\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        Most web browsers and some mobile operating systems and mobile\n        applications include a Do-Not-Track (&quot;DNT&quot;) feature or setting\n        you can activate to signal your privacy preference not to have data\n        about your online browsing activities monitored and collected. At this\n        stage no uniform technology standard for recognizing and implementing\n        DNT signals has been finalized. As such, we do not currently respond to\n        DNT browser signals or any other mechanism that automatically\n        communicates your choice not to be tracked online. If a standard for\n        online tracking is adopted that we must follow in the future, we will\n        inform you about that practice in a revised version of this privacy\n        notice.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        11. DO CALIFORNIA RESIDENTS HAVE SPECIFIC PRIVACY RIGHTS?\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        In Short: Yes, if you are a resident of California, you are granted\n        specific rights regarding access to your personal information.\n        {\"\\n\"}\n        {\"\\n\"}California Civil Code Section 1798.83, also known as the\n        &quot;Shine The Light&quot; law, permits our users who are California\n        residents to request and obtain from us, once a year and free of charge,\n        information about categories of personal information (if any) we\n        disclosed to third parties for direct marketing purposes and the names\n        and addresses of all third parties with which we shared personal\n        information in the immediately preceding calendar year. If you are a\n        California resident and would like to make such a request, please submit\n        your request in writing to us using the contact information provided\n        below. If you are under 18 years of age, reside in California, and have\n        a registered account with the App, you have the right to request removal\n        of unwanted data that you publicly post on the App. To request removal\n        of such data, please contact us using the contact information provided\n        below, and include the email address associated with your account and a\n        statement that you reside in California. We will make sure the data is\n        not publicly displayed on the App, but please be aware that the data may\n        not be completely or comprehensively removed from all our systems (e.g.\n        backups, etc.).\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        12. DO WE MAKE UPDATES TO THIS NOTICE?\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontWeight: \"700\",\n          }}\n        >\n          In Short:{\" \"}\n        </Text>{\" \"}\n        Yes, we will update this notice as necessary to stay compliant with\n        relevant laws.\n        {\"\\n\"}\n        {\"\\n\"}We may update this privacy notice from time to time. The updated\n        version will be indicated by an updated &quot;Revised&quot; date and the\n        updated version will be effective as soon as it is accessible. If we\n        make material changes to this privacy notice, we may notify you either\n        by prominently posting a notice of such changes or by directly sending\n        you a notification. We encourage you to review this privacy notice\n        frequently to be informed of how we are protecting your information.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        13. HOW CAN YOU CONTACT US ABOUT THIS NOTICE?\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        If you have questions or comments about this notice, you may email us at\n        privacy@magnetapp.co.uk.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        14. HOW CAN YOU REVIEW, UPDATE, OR DELETE THE DATA WE COLLECT FROM YOU?\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        {\"\\n\"}\n        Based on the applicable laws of your country, you may have the right to\n        request access to the personal information we collect from you, change\n        that information, or delete it in some circumstances. This can be done\n        by either:\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        - By using the edit profile service within the Magnet App using the\n        following instructions:\n      </Text>\n      <Text\n        style={{ color: themeStyle.colors.grayscale.lowest, marginLeft: 30 }}\n      >\n        1. Open the Magnet App and navigate to the profile screen using the\n        bottom navigation.\n        {\"\\n\"}\n      </Text>\n      <Text\n        style={{ color: themeStyle.colors.grayscale.lowest, marginLeft: 30 }}\n      >\n        2. Click &quot;edit profile&quot;. Here you can access and edit your\n        personal information. You also have the option to delete your account.\n        {\"\\n\"}\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          margin: 10,\n          marginBottom: 40,\n        }}\n      >\n        - Should you require any further assistance or access to the data we\n        collect from you, please email us at privacy@magnetapp.co.uk.\n      </Text>\n    </ScrollView>\n  );\n};\n\nexport default PrivacyPolicyScreen;\n","import React from \"react\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport themeStyle from \"../../../theme.style\";\n\nconst TermsOfUseScreen = () => {\n  return (\n    <ScrollView style={{ padding: 10 }}>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontWeight: \"700\",\n          fontSize: 20,\n          margin: 10,\n        }}\n      >\n        END USER LICENSE AGREEMENT {\"\\n\"}\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontWeight: \"700\",\n          margin: 10,\n        }}\n      >\n        Last updated January 08, 2022{\"\\n\"}\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        Magnet is licensed to You (End-User) by MAGNET SOFTWARE LIMITED\n        (hereinafter: MAGNET SOFTWARE), for use only under the terms of this\n        License Agreement.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        By downloading the Application from the Google Play Store or Apple\n        AppStore, and any update thereto (as permitted by this License\n        Agreement), You indicate that You agree to be bound by all of the terms\n        and conditions of this License Agreement, and that You accept this\n        License Agreement.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        The parties of this License Agreement acknowledge that neither Apple nor\n        Google is a Party to this License Agreement and is not bound by any\n        provisions or obligations with regard to the Application, such as\n        warranty, liability, maintenance and support thereof. MAGNET SOFTWARE,\n        not Apple nor Google, is solely responsible for the licensed Application\n        and the content thereof.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        This License Agreement may not provide for usage rules for the\n        Application that are in conflict with the latest App Store Terms of\n        Service. MAGNET SOFTWARE acknowledges that it had the opportunity to\n        review said terms and this License Agreement is not conflicting with\n        them.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        All rights not expressly granted to You are reserved.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        1. THE APPLICATION\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        Magnet (hereinafter: Application) is a piece of software created to\n        enable people to connect easily and customized for Android and Apple\n        mobile devices. It is used to create a network of people you can\n        communicate with directly.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        The Application is not tailored to comply with industry-specific\n        regulations (Health Insurance Portability and Accountability Act\n        (HIPAA), Federal Information Security Management Act (FISMA), etc.), so\n        if your interactions would be subjected to such laws, you may not use\n        this Application. You may not use the Application in a way that would\n        violate the Gramm-Leach-Bliley Act (GLBA).\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        2. SCOPE OF LICENSE\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        2.1 You are given a non-transferable, non-exclusive, non-sublicensable\n        license to install and use the Licensed Application on any devices\n        running the Android operating system or any Apple-branded Products that\n        You (End-User) own or control and as permitted by the Usage Rules set\n        forth in this section and both the Google Play Store and App Store Terms\n        of Service, with the exception that such licensed Application may be\n        accessed and used by other accounts associated with You (End-User, The\n        Purchaser) via Family Sharing or volume purchasing.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        2.2 This license will also govern any updates of the Application\n        provided by MAGNET SOFTWARE that replace, repair, and/or supplement the\n        first Application, unless a separate license is provided for such update\n        in which case the terms of that new license will govern.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        2.3 You may not reverse engineer, translate, disassemble, integrate,\n        decompile, integrate, remove, modify, combine, create derivative works\n        or updates of, adapt, or attempt to derive the source code of the\n        Application, or any part thereof (except with MAGNET SOFTWARE&apos;s\n        prior written consent).\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        2.4 You may not copy (excluding when expressly authorized by this\n        license and the Usage Rules) or alter the Application or portions\n        thereof. You may create and store copies only on devices that You own or\n        control for backup keeping under the terms of this license, the App\n        Store Terms of Service, and any other terms and conditions that apply to\n        the device or software used. You may not remove any intellectual\n        property notices. You acknowledge that no unauthorized third parties may\n        gain access to these copies at any time.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        2.5 Violations of the obligations mentioned above, as well as the\n        attempt of such infringement, may be subject to prosecution and damages.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        2.6 MAGNET SOFTWARE reserves the right to modify the terms and\n        conditions of licensing.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        2.7 Nothing in this license should be interpreted to restrict\n        third-party terms. When using the Application, You must ensure that You\n        comply with applicable third-party terms and conditions.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        3. TECHNICAL REQUIREMENTS\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        3.1 The Application requires a firmware version 7.0.0 or higher. MAGNET\n        SOFTWARE recommends using the latest version of the firmware.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        3.2 MAGNET SOFTWARE attempts to keep the Application updated so that it\n        complies with modified/new versions of the firmware and new hardware.\n        You are not granted rights to claim such an update.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        3.3 You acknowledge that it is Your responsibility to confirm and\n        determine that the app end-user device on which You intend to use the\n        Application satisfies the technical specifications mentioned above.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        3.4 MAGNET SOFTWARE reserves the right to modify the technical\n        specifications as it sees appropriate at any time.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        4. MAINTENANCE AND SUPPORT\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        4.1 MAGNET SOFTWARE is solely responsible for providing any maintenance\n        and support services for this licensed Application. You can reach the\n        MAGNET SOFTWARE at the email address listed in the App Store or Google\n        Play Store Overview for this licensed Application.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        4.2 MAGNET SOFTWARE and the End-User acknowledge that neither Google nor\n        Apple have any obligation whatsoever to furnish any maintenance and\n        support services with respect to the licensed Application.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}5. USE OF DATA\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        You acknowledge that MAGNET SOFTWARE will be able to access and adjust\n        Your downloaded licensed Application content and Your personal\n        information, and that MAGNET SOFTWARE&apos;s use of such material and\n        information is subject to Your legal agreements with MAGNET SOFTWARE and\n        MAGNET SOFTWARE&apos;s privacy policy:\n        https://magnetapp.co.uk/#/privacypolicy.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        6. USER GENERATED CONTRIBUTIONS\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        The Application may invite you to chat, contribute to, or participate in\n        blogs, message boards, online forums, and other functionality, and may\n        provide you with the opportunity to create, submit, post, display,\n        transmit, perform, publish, distribute, or broadcast content and\n        materials to us or in the Application, including but not limited to\n        text, writings, video, audio, photographs, graphics, comments,\n        suggestions, or personal information or other material (collectively,\n        &quot;Contributions&quot;). Contributions may be viewable by other users\n        of the Application and through third-party websites or applications. As\n        such, any Contributions you transmit may be treated as non-confidential\n        and non-proprietary. When you create or make available any\n        Contributions, you thereby represent and warrant that:\n      </Text>\n      <View>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          1. The creation, distribution, transmission, public display, or\n          performance, and the accessing, downloading, or copying of your\n          Contributions do not and will not infringe the proprietary rights,\n          including but not limited to the copyright, patent, trademark, trade\n          secret, or moral rights of any third party.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          2. You are the creator and owner of or have the necessary licenses,\n          rights, consents, releases, and permissions to use and to authorize\n          us, the Application, and other users of the Application to use your\n          Contributions in any manner contemplated by the Application and these\n          Terms of Use.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          3. You have the written consent, release, and/or permission of each\n          and every identifiable individual person in your Contributions to use\n          the name or likeness or each and every such identifiable individual\n          person to enable inclusion and use of your Contributions in any manner\n          contemplated by the Application and these Terms of Use.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          4. Your Contributions are not false, inaccurate, or misleading.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          5. Your Contributions are not unsolicited or unauthorized advertising,\n          promotional materials, pyramid schemes, chain letters, spam, mass\n          mailings, or other forms of solicitation.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          6. Your Contributions are not obscene, lewd, lascivious, filthy,\n          violent, harassing, libelous, slanderous, or otherwise objectionable\n          (as determined by us).\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          7. Your Contributions do not ridicule, mock, disparage, intimidate, or\n          abuse anyone.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          8. Your Contributions are not used to harass or threaten (in the legal\n          sense of those terms) any other person and to promote violence against\n          a specific person or class of people.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          9. Your Contributions do not violate any applicable law, regulation,\n          or rule.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          10. Your Contributions do not violate the privacy or publicity rights\n          of any third party.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          11. Your Contributions do not violate any applicable law concerning\n          child pornography, or otherwise intended to protect the health or\n          well-being of minors.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          12. Your Contributions do not include any offensive comments that are\n          connected to race, national origin, gender, sexual preference, or\n          physical handicap.\n        </Text>\n        <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 20 }}>\n          13. Your Contributions do not otherwise violate, or link to material\n          that violates, any provision of these Terms of Use, or any applicable\n          law or regulation.\n        </Text>\n      </View>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        Any use of the Application in violation of the foregoing violates these\n        Terms of Use and may result in, among other things, termination or\n        suspension of your rights to use the Application.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        7. CONTRIBUTION LICENSE\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        By posting your Contributions to any part of the Application or making\n        Contributions accessible to the Application by linking your account from\n        the Application to any of your social networking accounts, you\n        automatically grant, and you represent and warrant that you have the\n        right to grant, to us an unrestricted, unlimited, irrevocable,\n        perpetual, non-exclusive, transferable, royalty-free, fully-paid,\n        worldwide right, and license to host, use copy, reproduce, disclose,\n        sell, resell, publish, broad cast, retitle, archive, store, cache,\n        publicly display, reformat, translate, transmit, excerpt (in whole or in\n        part), and distribute such Contributions (including, without limitation,\n        your image and voice) for any purpose, commercial advertising, or\n        otherwise, and to prepare derivative works of, or incorporate in other\n        works, such as Contributions, and grant and authorize sublicenses of the\n        foregoing. The use and distribution may occur in any media formats and\n        through any media channels.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        This license will apply to any form, media, or technology now known or\n        hereafter developed, and includes our use of your name, company name,\n        and franchise name, as applicable, and any of the trademarks, service\n        marks, trade names, logos, and personal and commercial images you\n        provide. You waive all moral rights in your Contributions, and you\n        warrant that moral rights have not otherwise been asserted in your\n        Contributions.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        We do not assert any ownership over your Contributions. You retain full\n        ownership of all of your Contributions and any intellectual property\n        rights or other proprietary rights associated with your Contributions.\n        We are not liable for any statements or representations in your\n        Contributions provided by you in any area in the Application. You are\n        solely responsible for your Contributions to the Application and you\n        expressly agree to exonerate us from any and all responsibility and to\n        refrain from any legal action against us regarding your Contributions.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        We have the right, in our sole and absolute discretion, (1) to edit,\n        redact, or otherwise change any Contributions; (2) to re-categorize any\n        Contributions to place them in more appropriate locations in the\n        Application; and (3) to pre-screen or delete any Contributions at any\n        time and for any reason, without notice. We have no obligation to\n        monitor your Contributions.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}8. LIABILITY\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        8.1 MAGNET SOFTWARE takes no accountability or responsibility for any\n        damages caused due to a breach of duties according to Section 2 of this\n        Agreement. To avoid data loss, You are required to make use of backup\n        functions of the Application to the extent allowed by applicable\n        third-party terms and conditions of use. You are aware that in case of\n        alterations or manipulations of the Application, You will not have\n        access to licensed Application.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}9. WARRANTY\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        9.1 MAGNET SOFTWARE warrants that the Application is free of spyware,\n        trojan horses, viruses, or any other malware at the time of Your\n        download. MAGNET SOFTWARE warrants that the Application works as\n        described in the user documentation.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        9.2 No warranty is provided for the Application that is not executable\n        on the device, that has been unauthorizedly modified, handled\n        inappropriately or culpably, combined or installed with inappropriate\n        hardware or software, used with inappropriate accessories, regardless if\n        by Yourself or by third parties, or if there are any other reasons\n        outside of MAGNET SOFTWARE&apos;s sphere of influence that affect the\n        executability of the Application.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        9.3 You are required to inspect the Application immediately after\n        installing it and notify MAGNET SOFTWARE about issues discovered without\n        delay by e-mail provided in Product Claims. The defect report will be\n        taken into consideration and further investigated if it has been mailed\n        within a period of fourteen (14) days after discovery.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        9.4 If we confirm that the Application is defective, MAGNET SOFTWARE\n        reserves a choice to remedy the situation either by means of solving the\n        defect or substitute delivery.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        9.5 In the event of any failure of the Application to conform to any\n        applicable warranty, You may notify the App-Store-Operator, and Your\n        Application purchase price will be refunded to You. To the maximum\n        extent permitted by applicable law, the App-Store-Operator will have no\n        other warranty obligation whatsoever with respect to the App, and any\n        other losses, claims, damages, liabilities, expenses and costs\n        attributable to any negligence to adhere to any warranty.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        9.6 If the user is an entrepreneur, any claim based on faults expires\n        after a statutory period of limitation amounting to twelve (12) months\n        after the Application was made available to the user. The statutory\n        periods of limitation given by law apply for users who are consumers.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        10. PRODUCT CLAIMS\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        MAGNET SOFTWARE and the End-User acknowledge that MAGNET SOFTWARE, and\n        not Apple nor Google, is responsible for addressing any claims of the\n        End-User or any third party relating to the licensed Application or the\n        End-User’s possession and/or use of that licensed Application,\n        including, but not limited to:\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        (i) product liability claims;\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        (ii) any claim that the licensed Application fails to conform to any\n        applicable legal or regulatory requirement; and\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        (iii) claims arising under consumer protection, privacy, or similar\n        legislation, including in connection with Your Licensed Application’s\n        use of the HealthKit and HomeKit.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        11. LEGAL COMPLIANCE\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        You represent and warrant that You are not located in a country that is\n        subject to a U.S. Government embargo, or that has been designated by the\n        U.S. Government as a &quot;terrorist supporting&quot; country; and that\n        You are not listed on any U.S. Government list of prohibited or\n        restricted parties.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        12. CONTACT INFORMATION\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        For general inquiries, complaints, questions or claims concerning the\n        licensed Application, please contact us via email at\n        contact@magnetapp.co.uk:\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}13. TERMINATION\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        The license is valid until terminated by MAGNET SOFTWARE or by You. Your\n        rights under this license will terminate automatically and without\n        notice from MAGNET SOFTWARE if You fail to adhere to any term(s) of this\n        license. Upon License termination, You shall stop all use of the\n        Application, and destroy all copies, full or partial, of the\n        Application.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        14. THIRD-PARTY TERMS OF AGREEMENTS AND BENEFICIARY\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        MAGNET SOFTWARE represents and warrants that the Application will comply\n        with applicable third-party terms of agreement when using licensed\n        Application.\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        In Accordance with Section 9 of the &quot;Instructions for Minimum Terms\n        of Developer&apos;s End-User License Agreement,&quot; Google and Apple\n        as well as any of their subsidiaries shall be third-party beneficiaries\n        of this End User License Agreement and - upon Your acceptance of the\n        terms and conditions of this license agreement, Apple and Google will\n        have the right (and will be deemed to have accepted the right) to\n        enforce this End User License Agreement against You as a third-party\n        beneficiary thereof.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        15. INTELLECTUAL PROPERTY RIGHTS\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        MAGNET SOFTWARE and the End-User acknowledge that, in the event of any\n        third-party claim that the licensed Application or the End-User&apos;s\n        possession and use of that licensed Application infringes on the third\n        party&apos;s intellectual property rights, MAGNET SOFTWARE, and not\n        Apple nor Google, will be solely responsible for the investigation,\n        defense, settlement and discharge or any such intellectual property\n        infringement claims.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}\n        16. APPLICABLE LAW\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        This license agreement is governed by the laws of the United Kingdom\n        excluding its conflicts of law rules.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          fontSize: 18,\n          fontWeight: \"700\",\n          marginTop: 20,\n        }}\n      >\n        {\"\\n\"}17. MISCELLANEOUS\n      </Text>\n      <Text style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}>\n        17.1 If any of the terms of this agreement should be or become invalid,\n        the validity of the remaining provisions shall not be affected. Invalid\n        terms will be replaced by valid ones formulated in a way that will\n        achieve the primary purpose.\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          margin: 10,\n          marginBottom: 40,\n        }}\n      >\n        17.2 Collateral agreements, changes and amendments are only valid if\n        laid down in writing. The preceding clause can only be waived in\n        writing.\n      </Text>\n    </ScrollView>\n  );\n};\n\nexport default TermsOfUseScreen;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  RefreshControl,\n  Keyboard,\n  Dimensions,\n  ActivityIndicator,\n  Platform,\n} from \"react-native\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport UserThumbnail from \"../../../components/UserThumbnail\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport UserSearchBar from \"../../../components/UserSearchBar\";\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from \"recyclerlistview\";\nimport { useSelector } from \"react-redux\";\nimport themeStyle from \"../../../theme.style\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\n\nconst OtherUserContactsScreen = (props) => {\n  const { userId, firstName } = props.route.params;\n  const [friends, setFriends] = useState([]);\n  const [searchedFriends, setSearchedFriends] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigation = useNavigation();\n\n  const nativeUserData = useSelector((state) => state.userData)?.state;\n\n  const userData =\n    Platform.OS === \"web\" ? getWebPersistedUserData() : nativeUserData;\n\n  const { width: screenWidth } = Dimensions.get(\"window\");\n  const data =\n    searchedFriends === \"none\"\n      ? []\n      : searchedFriends?.length\n      ? searchedFriends\n      : friends;\n  const getFriends = async () => {\n    const { success, response } = await apiCall(\n      \"GET\",\n      `/user/${userId}/friend/fetch/all/${friends.length}`\n    );\n\n    if (success) {\n      setFriends([...friends, ...response]);\n    }\n  };\n\n  const onRefresh = useCallback(async () => {\n    await getFriends();\n    setRefreshing(false);\n  }, []);\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      () => 0,\n      (_, dim) => {\n        dim.width = screenWidth;\n        dim.height = 70;\n      }\n    )\n  ).current;\n\n  let dataProvider = new DataProvider((r1, r2) => {\n    return r1._id !== r2._id;\n  }).cloneWithRows(data);\n\n  const rowRenderer = useCallback(\n    (_, item) => <UserThumbnail user={item} avatarSize={50} />,\n    []\n  );\n\n  useEffect(() => {\n    navigation.setOptions({\n      title:\n        firstName && userId !== userData?._id\n          ? `${firstName}'s contacts`\n          : \"Contacts\",\n    });\n    (async () => {\n      setLoading(Platform.OS === \"ios\");\n      setRefreshing(Platform.OS === \"android\");\n      await getFriends();\n      setLoading(false);\n      setRefreshing(false);\n    })();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <UserSearchBar\n        setResults={setSearchedFriends}\n        contactName={firstName}\n        customSearch\n        apiRoute={`/user/friends/search/0`}\n        apiConfig={{ userId }}\n        onSubmitEditing={() => Keyboard.dismiss()}\n        placeholder={`Search ${\n          firstName && userId !== userData?._id\n            ? `${firstName}'s contacts`\n            : \"contacts\"\n        }`}\n      />\n      {data?.length ? (\n        <RecyclerListView\n          style={{ minHeight: 1, minWidth: 1 }}\n          rowRenderer={rowRenderer}\n          dataProvider={dataProvider}\n          onEndReached={() => getFriends()}\n          layoutProvider={layoutProvider}\n          onEndReachedThreshold={0.5}\n          scrollViewProps={{\n            refreshControl: (\n              <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n            ),\n          }}\n        />\n      ) : (\n        <ScrollView\n          contentContainerStyle={{ flex: 1 }}\n          refreshControl={\n            <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n          }\n        >\n          <ActivityIndicator\n            size={\"small\"}\n            color={themeStyle.colors.grayscale.low}\n            animating={loading}\n          />\n        </ScrollView>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n  },\n});\n\nexport default OtherUserContactsScreen;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  ActivityIndicator,\n  TouchableOpacity,\n  Platform,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport themeStyle from \"../../../theme.style\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport ImageWithCache from \"../../../components/ImageWithCache\";\nimport RepostCard from \"../../../components/RepostCard\";\nimport VideoPlayer from \"expo-video-player\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { StatusBar } from \"expo-status-bar\";\n\nconst EditPostScreen = (props) => {\n  const [postBody, setPostBody] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState();\n  const [existingPost, setExistingPost] = useState(null);\n  const [removeMedia, setRemoveMedia] = useState(false);\n\n  const navigation = useNavigation();\n\n  const { width: screenWidth } = Dimensions.get(\"window\");\n\n  const { postId } = props.route.params;\n\n  const handlePostUpdate = async () => {\n    const postData = {\n      postBody,\n      removeMedia,\n    };\n    const { success } = await apiCall(\n      \"POST\",\n      `/posts/update/${existingPost?._id}`,\n      postData\n    );\n    setSuccess(success);\n    if (success) {\n      setExistingPost({ ...existingPost, body: postBody });\n      return existingPost;\n    } else {\n      setError({\n        title: \"Error\",\n        message: \"An error occurred updating your post.\",\n      });\n      return;\n    }\n  };\n\n  const updatePost = async () => {\n    setLoading(true);\n    setError(null);\n    await handlePostUpdate();\n    setLoading(false);\n  };\n\n  const validateInfo = () => {\n    // if post body made empty but still have media or gif in post\n    if (postBody) {\n      return false;\n    }\n    if (removeMedia && (postBody || existingPost?.body)) {\n      return false;\n    }\n\n    if ((!postBody || !existingPost?.body) && removeMedia) {\n      return true;\n    }\n  };\n\n  useEffect(() => {\n    if (postId) {\n      (async () => {\n        const { success, response } = await apiCall(\n          \"GET\",\n          `/posts/fetch/${postId}`\n        );\n        if (success) {\n          setExistingPost(response);\n          setPostBody(response.body || \"\");\n        } else {\n          setError({\n            message: \"An error occurred displaying your post.\",\n          });\n        }\n      })();\n    }\n  }, [navigation, postId]);\n  if (loading) {\n    return (\n      <ActivityIndicator\n        animating\n        color={themeStyle.colors.primary.default}\n        size={\"large\"}\n      />\n    );\n  }\n\n  return (\n    <Fragment>\n      <SafeAreaView\n        style={{\n          flex: 0,\n          backgroundColor: themeStyle.colors.grayscale.highest,\n        }}\n      />\n      {Platform.OS === \"ios\" ? <StatusBar translucent={true} /> : null}\n      <SafeAreaView style={styles.container}>\n        <ScrollView\n          contentContainerStyle={{\n            padding: 10,\n            maxWidth: 900,\n            alignSelf: \"center\",\n            width: \"100%\",\n          }}\n        >\n          {postBody.length >= 2000 - 25 ? (\n            <Text style={styles.postLimitMessage}>\n              {2000 - postBody.length} Characters Remaining\n            </Text>\n          ) : existingPost?.hidden ? (\n            <Text\n              style={{\n                color: themeStyle.colors.grayscale.lowest,\n                textAlign: \"center\",\n                fontWeight: \"700\",\n              }}\n            >\n              This post is hidden and under review\n            </Text>\n          ) : null}\n          {success ? (\n            <Text\n              style={{ color: themeStyle.colors.success.default, margin: 10 }}\n            >\n              Post updated\n            </Text>\n          ) : null}\n          <TextInput\n            editable={!existingPost?.hidden}\n            style={{\n              minHeight: 100,\n              textAlignVertical: \"top\",\n              fontSize: 16,\n              color: themeStyle.colors.grayscale.lowest,\n            }}\n            value={postBody}\n            placeholder=\"What's on your mind?\"\n            placeholderTextColor={themeStyle.colors.grayscale.low}\n            multiline\n            maxLength={2000}\n            onChangeText={(v) => setPostBody(v)}\n          />\n\n          {existingPost &&\n          (existingPost?.body !== postBody ||\n            ((existingPost?.mediaUrl || existingPost?.gif) && removeMedia)) ? (\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\", marginVertical: 20 }}\n              onPress={() => {\n                setRemoveMedia(false);\n                setPostBody(existingPost?.body || \"\");\n              }}\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.secondary.default,\n                  fontSize: 16,\n                }}\n              >\n                Undo changes\n              </Text>\n            </TouchableOpacity>\n          ) : null}\n          {!removeMedia &&\n          !existingPost?.repostPostId &&\n          (existingPost?.mediaUrl ||\n            existingPost?.thumbnailUrl ||\n            existingPost?.gif) ? (\n            <View\n              style={{\n                backgroundColor: \"rgba(0,0,0,0.4)\",\n                borderRadius: 10,\n              }}\n            >\n              <TouchableOpacity\n                style={{ alignSelf: \"flex-end\" }}\n                onPress={() => {\n                  setRemoveMedia(true);\n                }}\n              >\n                <AntDesign\n                  name=\"close\"\n                  size={24}\n                  color={themeStyle.colors.grayscale.lowest}\n                />\n              </TouchableOpacity>\n              {existingPost?.gif ? (\n                <View\n                  style={{\n                    height: screenWidth - 40,\n                    alignItems: \"center\",\n                    padding: 5,\n                  }}\n                >\n                  <Image\n                    resizeMode=\"contain\"\n                    style={{ width: \"100%\", height: \"100%\" }}\n                    source={{ uri: existingPost?.gif }}\n                  />\n                </View>\n              ) : existingPost?.mediaType === \"video\" ? (\n                <View\n                  style={{\n                    alignItems: \"center\",\n                    padding: 20,\n                  }}\n                >\n                  {console.log(\n                    \"cdhhcdcdhhcdcdhhcdcdhhcdcdhhcdcdhhcdcdhhcdcdhhcd\"\n                  )}\n                  {existingPost?.ready ? (\n                    <VideoPlayer\n                      autoHidePlayer={false}\n                      fullscreen\n                      mediaIsSelfie\n                      videoProps={{\n                        shouldPlay: false,\n                        resizeMode: \"contain\",\n                        source: {\n                          uri: existingPost?.mediaUrl,\n                        },\n                      }}\n                      style={{ height: screenWidth > 500 ? 500 : screenWidth }}\n                    />\n                  ) : (\n                    <View>\n                      <Text\n                        style={{\n                          position: \"absolute\",\n                          fontSize: 20,\n                          color: themeStyle.colors.white,\n                          zIndex: 1,\n                          textAlign: \"center\",\n                          margin: 10,\n                          textShadowOffset: {\n                            width: 1,\n                            height: 1,\n                          },\n                          textShadowRadius: 8,\n                          textShadowColor: themeStyle.colors.black,\n                        }}\n                      >\n                        {\"Uploading...\"}\n                      </Text>\n\n                      <ImageWithCache\n                        removeBackround\n                        removeBorderRadius\n                        resizeMode=\"contain\"\n                        mediaUrl={existingPost?.thumbnailUrl}\n                        mediaHeaders={existingPost?.thumbnailHeaders}\n                        aspectRatio={1 / 1}\n                        mediaIsSelfie={existingPost?.mediaIsSelfie}\n                        style={{\n                          height: screenWidth > 500 ? 500 : screenWidth,\n                        }}\n                      />\n                    </View>\n                  )}\n                </View>\n              ) : existingPost?.mediaType === \"image\" ? (\n                <View\n                  style={{\n                    alignItems: \"center\",\n                    padding: 20,\n                  }}\n                >\n                  <ImageWithCache\n                    removeBackround\n                    removeBorderRadius\n                    resizeMode=\"contain\"\n                    mediaIsSelfie={existingPost?.isSelfie}\n                    mediaUrl={existingPost?.mediaUrl}\n                    aspectRatio={1 / 1}\n                    mediaHeaders={existingPost?.mediaHeaders}\n                  />\n                </View>\n              ) : null}\n            </View>\n          ) : null}\n          {existingPost?.repostPostId ? (\n            <RepostCard\n              postContent={existingPost?.repostPostObj}\n              mediaIsFullWidth\n              isPreview\n            />\n          ) : null}\n        </ScrollView>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            padding: 10,\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          }}\n        >\n          <View />\n          <View\n            style={{\n              justifyContent: \"center\",\n              flexDirection: \"row\",\n              backgroundColor: themeStyle.colors.primary.default,\n              padding: 5,\n              borderRadius: 20,\n              width: 70,\n              opacity: validateInfo() || existingPost?.hidden ? 0.5 : 1,\n            }}\n          >\n            <TouchableOpacity\n              disabled={validateInfo() || existingPost?.hidden}\n              onPress={() => updatePost()}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: themeStyle.colors.white,\n                }}\n              >\n                Update\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n        {error ? (\n          <View>\n            <Text style={styles.errorMessage}>{error.message}</Text>\n          </View>\n        ) : null}\n      </SafeAreaView>\n    </Fragment>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  postLimitMessage: {\n    alignSelf: \"flex-end\",\n    color: themeStyle.colors.error.default,\n  },\n  errorTitle: {\n    textAlign: \"center\",\n    color: themeStyle.colors.error.default,\n    fontSize: 16,\n  },\n  errorMessage: {\n    textAlign: \"center\",\n    color: themeStyle.colors.error.default,\n    fontSize: 14,\n  },\n});\n\nexport default EditPostScreen;\n","import React, { useState } from \"react\";\nimport {\n  SafeAreaView,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  View,\n  Modal,\n} from \"react-native\";\nimport { setItemAsync } from \"expo-secure-store\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport themeStyle from \"../../../theme.style\";\nimport { Ionicons, FontAwesome5 } from \"@expo/vector-icons\";\nimport apiCall from \"../../../helpers/apiCall\";\n\nconst AccountScreen = () => {\n  const [showDeleteGuard, setShowDeleteGuard] = useState(false);\n\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n\n  const deleteAccount = async () => {\n    const { success } = await apiCall(\"DELETE\", \"/user/delete\");\n    if (success) {\n      await setItemAsync(\"authToken\", \"\");\n      dispatch({ type: \"SET_USER_LOGGED_IN\", payload: false });\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Modal\n        visible={showDeleteGuard}\n        transparent\n        onRequestClose={() => setShowDeleteGuard(false)}\n      >\n        <TouchableOpacity\n          onPress={() => setShowDeleteGuard(false)}\n          style={{ position: \"absolute\", top: 20, left: 20, zIndex: 999 }}\n        >\n          <Ionicons\n            style={styles.searchIcon}\n            name=\"arrow-back\"\n            size={24}\n            color={themeStyle.colors.grayscale.lowest}\n          />\n        </TouchableOpacity>\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: themeStyle.colors.grayscale.highest,\n            alignItems: \"center\",\n            paddingTop: 50,\n          }}\n        >\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              marginVertical: 20,\n              fontSize: 20,\n              textAlign: \"center\",\n              fontWeight: \"700\",\n              padding: 20,\n            }}\n          >\n            Are you sure you want to delete your account?\n          </Text>\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              marginBottom: 20,\n              fontSize: 18,\n            }}\n          >\n            This will be a sad day...{\" \"}\n            <FontAwesome5\n              name=\"sad-tear\"\n              size={20}\n              color={themeStyle.colors.grayscale.lowest}\n            />\n          </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flex: 1,\n              alignItems: \"center\",\n              width: \"100%\",\n              justifyContent: \"space-between\",\n              paddingHorizontal: 40,\n            }}\n          >\n            <TouchableOpacity\n              onPress={async () => {\n                await deleteAccount();\n              }}\n              style={{\n                height: 48,\n              }}\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.error.default,\n                  fontWeight: \"700\",\n                  fontSize: 16,\n                }}\n              >\n                Delete\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{ height: 48 }}\n              onPress={() => setShowDeleteGuard(false)}\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.grayscale.lowest,\n                  textAlign: \"center\",\n                  fontSize: 16,\n                }}\n              >\n                Cancel\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n      <View style={styles.basicOptions}>\n        <View style={styles.option}>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"FollowersModeScreen\")}\n          >\n            <View style={styles.optionContent}>\n              <Text style={styles.basicOptionsText}>Followers Mode</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.option}>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"AccountVisibilityScreen\")}\n          >\n            <View style={styles.optionContent}>\n              <Text style={styles.basicOptionsText}>Profile Visibility</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View style={styles.signoutContainer}>\n        <TouchableOpacity onPress={() => setShowDeleteGuard(true)}>\n          <Text\n            style={{\n              color: themeStyle.colors.error.default,\n              fontWeight: \"700\",\n            }}\n          >\n            Delete Account\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  basicOptions: {\n    width: \"100%\",\n  },\n  basicOptionsText: {\n    color: themeStyle.colors.grayscale.lowest,\n    paddingHorizontal: 5,\n    fontSize: 16,\n    fontWeight: \"700\",\n    textAlign: \"center\",\n    width: \"100%\",\n    paddingRight: 14,\n  },\n  option: {\n    width: \"100%\",\n    borderBottomWidth: 0.5,\n    borderColor: themeStyle.colors.grayscale.high,\n  },\n  optionContent: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingVertical: 20,\n    paddingHorizontal: 40,\n  },\n  signoutContainer: {\n    alignItems: \"center\",\n    padding: 20,\n    borderTopWidth: 1,\n    borderColor: themeStyle.colors.grayscale.lowest,\n    width: \"100%\",\n  },\n});\n\nexport default AccountScreen;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Switch,\n  SafeAreaView,\n  Platform,\n} from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\nimport webPersistUserData from \"../../../helpers/webPersistUserData\";\nimport themeStyle from \"../../../theme.style\";\n\nconst FollowersModeScreen = () => {\n  // only used to prevent unnecessary re-renders in useefect as global userdata will change on toggle\n  const [userData, setUserData] = useState(null);\n\n  const existingNativeUserData = useSelector((state) => state.userData);\n\n  const globalUserData =\n    Platform.OS === \"web\"\n      ? { state: getWebPersistedUserData() }\n      : existingNativeUserData;\n\n  const dispatch = useDispatch();\n  const [enabled, setEnabled] = useState(false);\n  const [error, setError] = useState(\"\");\n  const toggleFollowersMode = async () => {\n    setError(\"\");\n    setEnabled(!enabled);\n    const { success, response } = await apiCall(\n      \"GET\",\n      \"/user/followersmode/toggle\"\n    );\n    if (success) {\n      dispatch({\n        type: \"SET_USER_DATA\",\n        payload: {\n          ...globalUserData.state,\n          followersMode: response.followersMode,\n          private: false,\n        },\n      });\n      webPersistUserData({\n        ...globalUserData.state,\n        followersMode: response.followersMode,\n        private: false,\n      });\n    } else {\n      setEnabled(!enabled);\n      setError(\"Unable to toggle followers mode. Please try again later\");\n    }\n  };\n\n  useEffect(() => {\n    if (!userData && globalUserData?.state) {\n      setUserData(globalUserData?.state);\n      setEnabled(globalUserData?.state?.followersMode);\n    }\n  }, [globalUserData?.state]);\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      {error ? (\n        <Text style={{ color: themeStyle.colors.error.default }}>{error}</Text>\n      ) : null}\n      <Switch\n        style={{ alignSelf: \"flex-start\", marginTop: 20, marginLeft: 5 }}\n        trackColor={{\n          false: themeStyle.colors.grayscale.higher,\n          true: themeStyle.colors.secondary.light,\n        }}\n        thumbColor={\n          enabled\n            ? themeStyle.colors.secondary.default\n            : themeStyle.colors.grayscale.high\n        }\n        onValueChange={toggleFollowersMode}\n        value={enabled}\n      />\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          margin: 10,\n          fontWeight: \"700\",\n        }}\n      >\n        Followers mode is {enabled ? \"enabled\" : \"disabled\"}\n      </Text>\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lower,\n          padding: 10,\n          marginVertical: 20,\n          fontSize: 14,\n        }}\n      >\n        Enabling <Text style={{ fontWeight: \"700\" }}>followers mode</Text> will\n        make your public profile follow-only. Your account will be made public\n        by default and you will only receive the feed for the users you add as\n        contacts, not your followers.\n      </Text>\n    </SafeAreaView>\n  );\n};\n\nexport default FollowersModeScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { Text, Switch, SafeAreaView, View, Platform } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\nimport webPersistUserData from \"../../../helpers/webPersistUserData\";\nimport themeStyle from \"../../../theme.style\";\n\nconst AccountVisibilityScreen = () => {\n  // only used to prevent unnecessary re-renders in useefect as global userdata will change on toggle\n  const [userData, setUserData] = useState(null);\n  const nativeGlobalUserData = useSelector((state) => state.userData);\n\n  const globalUserData =\n    Platform.OS === \"web\"\n      ? { state: getWebPersistedUserData() }\n      : nativeGlobalUserData;\n\n  const dispatch = useDispatch();\n  const [enabled, setEnabled] = useState(false);\n  const [error, setError] = useState(\"\");\n  const togglePrivateMode = async () => {\n    setError(\"\");\n    setEnabled(!enabled);\n    const { success, response } = await apiCall(\n      \"GET\",\n      \"/user/visibility/change\"\n    );\n    if (success) {\n      dispatch({\n        type: \"SET_USER_DATA\",\n        payload: {\n          ...globalUserData.state,\n          ...response.userData,\n        },\n      });\n      webPersistUserData({\n        ...globalUserData.state,\n        ...response.userData,\n      });\n      setUserData({\n        ...globalUserData.state,\n        ...response.userData,\n      });\n    } else {\n      setEnabled(!enabled);\n      setError(\"Unable to toggle private mode. Please try again later\");\n    }\n  };\n\n  useEffect(() => {\n    if (!userData && globalUserData?.state) {\n      setUserData(globalUserData?.state);\n      setEnabled(globalUserData?.state?.private);\n    }\n  }, [globalUserData?.state]);\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      {error ? (\n        <Text style={{ color: themeStyle.colors.error.default }}>{error}</Text>\n      ) : null}\n      {userData?.state?.followersMode ? (\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lower,\n            marginHorizontal: 10,\n            marginTop: 20,\n            fontWeight: \"700\",\n          }}\n        >\n          You cannot toggle private mode because your account is in followers\n          mode.\n        </Text>\n      ) : null}\n      <Switch\n        style={{ alignSelf: \"flex-start\", marginTop: 20, marginLeft: 5 }}\n        disabled={userData?.state?.followersMode}\n        trackColor={{\n          false: themeStyle.colors.grayscale.higher,\n          true: themeStyle.colors.secondary.light,\n        }}\n        thumbColor={\n          enabled\n            ? themeStyle.colors.secondary.default\n            : themeStyle.colors.grayscale.high\n        }\n        onValueChange={togglePrivateMode}\n        value={enabled}\n      />\n      <Text\n        style={{\n          color: themeStyle.colors.grayscale.lowest,\n          margin: 10,\n          fontWeight: \"700\",\n        }}\n      >\n        Private mode is {enabled ? \"enabled\" : \"disabled\"}\n      </Text>\n\n      {!userData?.state?.followersMode ? (\n        <View>\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lower,\n              padding: 10,\n              marginVertical: 20,\n              fontSize: 14,\n            }}\n          >\n            Toggling <Text style={{ fontWeight: \"700\" }}>private mode</Text>{\" \"}\n            will restrict your account activity to contacts only. Users not\n            added as contacts will also need to send you a contact request\n            before adding you or messaging you.\n          </Text>\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lower,\n              paddingHorizontal: 10,\n              fontSize: 14,\n            }}\n          >\n            Your profile will still appear in searches. This will not make your\n            profile information private such as your profile video, username,\n            names etc.\n          </Text>\n        </View>\n      ) : null}\n    </SafeAreaView>\n  );\n};\n\nexport default AccountVisibilityScreen;\n","import { FontAwesome, AntDesign } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { Platform, Text, TextInput, View } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CodeInput from \"../../../components/CodeInput\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\nimport webPersistUserData from \"../../../helpers/webPersistUserData\";\nimport themeStyle from \"../../../theme.style\";\n\nconst EmailVerificationScreen = () => {\n  const [error, setError] = useState(\"\");\n  const [verified, setVerified] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const existingNativeUserData =\n    useSelector((state) => state.userData)?.state || {};\n\n  const userData =\n    Platform.OS === \"web\"\n      ? getWebPersistedUserData() || {}\n      : existingNativeUserData;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async () => {\n      const { success } = await apiCall(\n        \"GET\",\n        \"/user/email/create-email-verification\"\n      );\n      if (!success) {\n        setError(\n          \"There was a problem sending your verification code. Please try again later.\"\n        );\n      }\n    })();\n  }, []);\n\n  const handleVerification = async (code) => {\n    setLoading(true);\n    const { success } = await apiCall(\"GET\", `/user/email/verify/${code}`);\n    if (!success) {\n      setError(\n        \"There was a problem with verifying your account. Please try again later.\"\n      );\n      setLoading(false);\n      return;\n    }\n\n    setVerified(true);\n    dispatch({\n      type: \"SET_USER_DATA\",\n      payload: { ...userData, verified: true },\n    });\n    webPersistUserData({ ...userData, verified: true });\n  };\n  if (error)\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <FontAwesome\n          name=\"envelope-o\"\n          size={100}\n          color={themeStyle.colors.grayscale.low}\n        />\n        <Text\n          style={{\n            color: themeStyle.colors.error.default,\n            textAlign: \"center\",\n            marginTop: 20,\n          }}\n        >\n          {error}\n        </Text>\n      </View>\n    );\n  if (verified) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <AntDesign\n          name=\"checkcircleo\"\n          size={100}\n          color={themeStyle.colors.success.default}\n        />\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            textAlign: \"center\",\n            marginTop: 24,\n          }}\n        >\n          Your email has been verified.\n        </Text>\n      </View>\n    );\n  }\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: 20,\n      }}\n    >\n      <View style={{ maxWidth: 500 }}>\n        <Text\n          style={{\n            textAlign: \"center\",\n            color: themeStyle.colors.grayscale.lowest,\n            fontSize: 24,\n          }}\n        >\n          We sent a code code{\" \"}\n          {userData.email ? `to ${userData.email}` : \"to your email\"}\n        </Text>\n        <Text\n          style={{\n            textAlign: \"center\",\n            color: themeStyle.colors.grayscale.lowest,\n            fontSize: 14,\n            marginTop: 20,\n          }}\n        >\n          Please enter the code we sent to your email.\n        </Text>\n        <CodeInput\n          loading={loading}\n          onSubmit={(code) => handleVerification(code)}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default EmailVerificationScreen;\n","import React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\n\nimport {\n  CodeField,\n  Cursor,\n  useBlurOnFulfill,\n  useClearByFocusCell,\n} from \"react-native-confirmation-code-field\";\nimport themeStyle from \"../theme.style\";\n\nconst CELL_COUNT = 6;\n\nconst CodeInput = ({ onSubmit, loading }) => {\n  const [value, setValue] = useState(\"\");\n  const ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n  const [props, getCellOnLayoutHandler] = useClearByFocusCell({\n    value,\n    setValue,\n  });\n\n  return (\n    <View>\n      <CodeField\n        ref={ref}\n        {...props}\n        value={value}\n        onChangeText={setValue}\n        cellCount={CELL_COUNT}\n        rootStyle={styles.codeFiledRoot}\n        keyboardType=\"number-pad\"\n        textContentType=\"oneTimeCode\"\n        renderCell={({ index, symbol, isFocused }) => (\n          <Text\n            key={index}\n            style={[styles.cell, isFocused && styles.focusCell]}\n            onLayout={getCellOnLayoutHandler(index)}\n          >\n            {symbol || (isFocused ? <Cursor /> : null)}\n          </Text>\n        )}\n      />\n      <View\n        style={{\n          width: \"100%\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginVertical: 20,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => onSubmit(value)}\n          style={{\n            backgroundColor: themeStyle.colors.primary.default,\n            borderRadius: 50,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginVertical: 20,\n            paddingHorizontal: 20,\n            paddingVertical: 10,\n            minWidth: 100,\n          }}\n        >\n          {!loading ? (\n            <Text style={{ color: themeStyle.colors.white }}>Verify</Text>\n          ) : (\n            <ActivityIndicator\n              size=\"small\"\n              color={themeStyle.colors.white}\n              animating\n            />\n          )}\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: { padding: 20, minHeight: 300 },\n  title: { textAlign: \"center\", fontSize: 30 },\n  codeFiledRoot: { marginTop: 20 },\n  cell: {\n    width: 40,\n    height: 40,\n    lineHeight: 38,\n    fontSize: 24,\n    borderWidth: 2,\n    borderColor: themeStyle.colors.grayscale.low,\n    textAlign: \"center\",\n    color: themeStyle.colors.grayscale.lowest,\n    borderRadius: 5,\n  },\n  focusCell: {\n    borderColor: themeStyle.colors.grayscale.lowest,\n  },\n});\n\nexport default CodeInput;\n","import React from \"react\";\nimport { View, TouchableOpacity } from \"react-native\";\nimport { StackActions, useNavigation } from \"@react-navigation/native\";\nimport Thumbnail from \"./Thumbnail\";\nimport themeStyle from \"../../theme.style\";\n\nconst UserThumbnail = ({\n  user,\n  avatarSize,\n  preventClicks,\n  fontSize,\n  isRequest,\n  acceptFriendRequest,\n  rejectFriendRequest,\n  showSeparator,\n  height,\n}) => {\n  const navigation = useNavigation();\n\n  const handleUserProfileNavigation = () => {\n    // pushes a new screen on top of the prev one to create a journey\n    const pushScreen = StackActions.push(\"UserProfileScreen\", {\n      userId: user._id,\n    });\n\n    navigation.dispatch(pushScreen);\n  };\n\n  const handleReject = async () => {\n    await rejectFriendRequest(user);\n  };\n  const handleAccept = async () => {\n    await acceptFriendRequest(user);\n  };\n\n  if (!user) return <View />;\n  return (\n    <View\n      style={{\n        height: height || 80,\n        paddingHorizontal: 10,\n      }}\n    >\n      <View\n        style={{\n          borderBottomWidth: showSeparator ? 1 : 0,\n          height: \"100%\",\n          justifyContent: \"center\",\n          borderColor: themeStyle.colors.grayscale.high,\n        }}\n      >\n        {!preventClicks ? (\n          <TouchableOpacity\n            key={user._id}\n            underlayColor=\"gray\"\n            // style={{ margin: 10 }}\n            onPress={() => handleUserProfileNavigation()}\n          >\n            <Thumbnail\n              avatarSize={avatarSize}\n              user={user}\n              navigation={navigation}\n              fontSize={fontSize}\n              isRequest={isRequest}\n              acceptFriendRequest={acceptFriendRequest}\n              rejectFriendRequest={rejectFriendRequest}\n            />\n          </TouchableOpacity>\n        ) : (\n          <Thumbnail\n            avatarSize={avatarSize}\n            user={user}\n            navigation={navigation}\n            fontSize={fontSize}\n            isRequest={isRequest}\n            acceptFriendRequest={handleAccept}\n            rejectFriendRequest={handleReject}\n          />\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default React.memo(UserThumbnail);\n","import { Appearance } from \"react-native\";\nlet colorScheme = Appearance.getColorScheme();\nconst themeStyle =\n  colorScheme === \"dark\"\n    ? {\n        colors: {\n          primary: {\n            default: \"#138294\",\n            light: \"#00cddb\",\n          },\n          secondary: {\n            default: \"#0085FF\",\n            bright: \"#00ddff\",\n            light: \"#66b5ff\",\n          },\n          warning: {\n            default: \"#FFB000\",\n          },\n          success: {\n            default: \"#009966\",\n          },\n          error: {\n            default: \"#FF0000\",\n          },\n          grayscale: {\n            highest: \"#15171F\",\n            higher: \"#525252\",\n            high: \"#a1a1aa\",\n            low: \"#a3a3a3\",\n            lower: \"#F1F1F1\",\n            lowest: \"#FFFFFF\",\n            cards: \"#15171F\",\n            cardsOuter: \"#020511\",\n          },\n          black: \"#000000\",\n          white: \"#FFFFFF\",\n        },\n      }\n    : {\n        colors: {\n          primary: {\n            default: \"#138294\",\n            light: \"#00cddb\",\n          },\n          secondary: {\n            default: \"#0085FF\",\n            bright: \"#00ddff\",\n            light: \"#66b5ff\",\n          },\n          warning: {\n            default: \"#FFB000\",\n          },\n          success: {\n            default: \"#009966\",\n          },\n          error: {\n            default: \"#FF0000\",\n          },\n          grayscale: {\n            lowest: \"#000000\",\n            lower: \"#6C6C6C\",\n            low: \"#A2A2A2\",\n            high: \"#D2D2D2\",\n            higher: \"#F1F1F1\",\n            highest: \"#FFFFFF\",\n            cards: \"#FFFFFF\",\n            cardsOuter: \"#F1F1F1\",\n          },\n          black: \"#000000\",\n          white: \"#FFFFFF\",\n        },\n      };\nexport default themeStyle;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Dimensions,\n  Platform,\n} from \"react-native\";\nimport { Video } from \"expo-av\";\nimport themeStyle from \"../theme.style\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AnimatedLottieView from \"lottie-react-native\";\nimport useScreenOrientation from \"../helpers/hooks/useScreenOrientation\";\n\nconst PreviewVideo = ({\n  uri,\n  isFullWidth,\n  previewText,\n  flipProfileVideo,\n  disableBlurListener,\n  onLoad,\n  isVisible = true,\n}) => {\n  const { width: screenWidth } = Dimensions.get(\"window\");\n  const [videoStatus, setVideoStatus] = useState({});\n  const [ready, setReady] = useState(false);\n  const profileVideoRef = useRef(null);\n  const navigation = useNavigation();\n  useScreenOrientation(!!uri && ready); // just forces a re render ONLY when screen rotates. Without this, video does not adjust for landscape viewing.\n\n  const handleVideoDuration = (duration) => {\n    if (!duration) {\n      return \"\";\n    }\n    let seconds = Math.floor((duration / 1000) % 60);\n    let minutes = Math.floor((duration / (1000 * 60)) % 60);\n    let hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n    hours = hours < 10 ? `0${hours}` : hours;\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\n    seconds = seconds < 10 ? `0${seconds}` : seconds;\n\n    return `${hours > 0 ? `${hours}:` : \"\"}${minutes}:${seconds}`;\n  };\n\n  const handleOnLoad = (v) => {\n    if (onLoad) {\n      onLoad(v);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (isVisible === false) {\n        await profileVideoRef.current?.pauseAsync();\n      }\n    })();\n  }, [isVisible]);\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener(\"blur\", async () => {\n      if (profileVideoRef && !disableBlurListener) {\n        await profileVideoRef.current?.pauseAsync();\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n  if (!uri) {\n    return (\n      <LinearGradient\n        start={[0, 0.5]}\n        end={[1, 0.5]}\n        style={{\n          padding: 2,\n          width: isFullWidth ? screenWidth : screenWidth / 1.5,\n          height: isFullWidth ? screenWidth : (screenWidth * 1.33) / 1.5,\n        }}\n        colors={[\n          ready\n            ? themeStyle.colors.primary.default\n            : themeStyle.colors.grayscale.highest,\n          ready\n            ? themeStyle.colors.grayscale.highest\n            : themeStyle.colors.grayscale.highest,\n          ready\n            ? themeStyle.colors.primary.light\n            : themeStyle.colors.grayscale.highest,\n        ]}\n      >\n        {Platform.OS !== \"web\" ? (\n          <AnimatedLottieView\n            source={require(\"../../assets/lotties/profileVideo.json\")}\n            autoPlay={false}\n            loop={false}\n            progress={0.8}\n            style={{ width: \"100%\", height: \"100%\", position: \"absolute\" }}\n          />\n        ) : null}\n      </LinearGradient>\n    );\n  }\n  return (\n    <View>\n      <LinearGradient\n        start={[0, 0.5]}\n        end={[1, 0.5]}\n        style={[\n          {\n            padding: 2,\n            width: isFullWidth ? screenWidth : screenWidth / 1.5,\n            height: isFullWidth ? screenWidth : (screenWidth * 1.33) / 1.5,\n          },\n          Platform.OS === \"web\" && { maxWidth: 900, maxHeight: 600 },\n        ]}\n        colors={[\n          ready\n            ? themeStyle.colors.primary.default\n            : themeStyle.colors.grayscale.highest,\n          ready\n            ? themeStyle.colors.grayscale.highest\n            : themeStyle.colors.grayscale.highest,\n          ready\n            ? themeStyle.colors.primary.light\n            : themeStyle.colors.grayscale.highest,\n        ]}\n      >\n        <TouchableOpacity\n          style={[\n            { alignSelf: \"center\" },\n            Platform.OS === \"web\" && {\n              width: isFullWidth ? screenWidth : screenWidth / 1.5,\n              height: isFullWidth ? screenWidth : (screenWidth * 1.33) / 1.5,\n              maxWidth: 900,\n              maxHeight: 600,\n            },\n          ]}\n          onPress={() => {\n            if (profileVideoRef) {\n              videoStatus.isPlaying\n                ? profileVideoRef.current.pauseAsync()\n                : profileVideoRef.current.playAsync();\n            }\n          }}\n        >\n          <Video\n            positionMillis={0} // TODO check this on IOS if we should revert to 100ms\n            style={[\n              {\n                alignSelf: \"center\",\n                width: \"100%\",\n                height: \"100%\",\n                borderColor: themeStyle.colors.primary.default,\n                borderRadius: isFullWidth ? 0 : 10,\n                aspectRatio: 1,\n                transform: [{ scaleX: flipProfileVideo ? -1 : 1 }],\n              },\n              Platform.OS === \"web\" && {\n                width: screenWidth,\n                height: screenWidth,\n                maxWidth: 900,\n                maxHeight: 600,\n                alignItems: \"center\",\n              },\n            ]}\n            onReadyForDisplay={() => setReady(true)}\n            onLoad={(v) => handleOnLoad(v)}\n            onPlaybackStatusUpdate={(status) => setVideoStatus(status)}\n            progressUpdateIntervalMillis={500}\n            ref={profileVideoRef}\n            source={{\n              uri,\n            }}\n            // onError={() => {\n            //   profileVideoRef?.current?.playAsync(uri);\n            //   console.log(\"error\");\n            // }}\n            isLooping\n            resizeMode=\"cover\"\n          />\n          {!videoStatus.isPlaying ? (\n            <View\n              style={{\n                position: \"absolute\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                width: \"100%\", //isFullWidth ? screenWidth : screenWidth / 1.5,\n                height: \"100%\", //isFullWidth ? screenWidth : (screenWidth * 1.33) / 1.5,\n                borderColor: themeStyle.colors.primary.default,\n                borderRadius: isFullWidth ? 0 : 10,\n                backgroundColor: themeStyle.colors.grayscale.lowest,\n                opacity: 0.7,\n                padding: 2,\n              }}\n            >\n              {ready ? (\n                <Text\n                  style={{\n                    flex: 1,\n                    position: \"absolute\",\n                    fontSize: 20,\n                    textAlign: \"center\",\n                    width: screenWidth,\n                    color: themeStyle.colors.secondary.default,\n                    opacity: 0.7,\n                    textShadowOffset: {\n                      width: 1,\n                      height: 1,\n                    },\n                    textShadowRadius: 9,\n                    textShadowColor: themeStyle.colors.secondary.bright,\n                  }}\n                >\n                  {previewText || \"Tap to preview\"}\n                </Text>\n              ) : null}\n            </View>\n          ) : null}\n          {!ready && Platform.OS !== \"web\" ? (\n            <AnimatedLottieView\n              source={require(\"../../assets/lotties/profileVideo.json\")}\n              autoPlay\n              loop\n              speed={2}\n              style={{ width: \"100%\", height: \"100%\", position: \"absolute\" }}\n            />\n          ) : null}\n          {videoStatus?.durationMillis &&\n          videoStatus?.positionMillis &&\n          ready ? (\n            <View\n              style={{\n                position: \"absolute\",\n                bottom: 0,\n                right: 0,\n                backgroundColor: themeStyle.colors.grayscale.higher,\n                paddingVertical: 5,\n                opacity: 0.8,\n                paddingHorizontal: 10,\n                borderRadius: 15,\n                margin: 10,\n              }}\n            >\n              <Text style={{ color: themeStyle.colors.grayscale.lowest }}>\n                {handleVideoDuration(\n                  videoStatus?.durationMillis - videoStatus?.positionMillis\n                )}\n              </Text>\n            </View>\n          ) : null}\n        </TouchableOpacity>\n      </LinearGradient>\n    </View>\n  );\n};\n\nexport default React.memo(\n  PreviewVideo,\n  (prev, next) => prev.uri === next.uri && prev.isVisible === next.isVisible\n);\n","import { Linking, Platform } from \"react-native\";\nimport { startActivityAsync, ActivityAction } from \"expo-intent-launcher\";\nimport Constants from \"expo-constants\";\n\nconst packageName = Constants.manifest.releaseChannel\n  ? Constants.manifest.android.package\n  : \"com.magnetapp.magnet\";\n\nconst openAppSettings = () => {\n  if (Platform.OS === \"ios\") {\n    Linking.openURL(\"app-settings:\");\n  } else {\n    startActivityAsync(ActivityAction.APPLICATION_DETAILS_SETTINGS, {\n      data: `package:${packageName}`,\n    });\n  }\n};\n\nexport default openAppSettings;\n","const formatAge = (age) => {\n  let ageObject = { unit: age?.days > 1 ? \"days\" : \"day\", age: age?.days };\n  if (age?.minutes) {\n    ageObject = {\n      unit: age?.minutes > 1 ? \"minutes\" : \"minute\",\n      age: age?.minutes,\n    };\n  }\n  if (age?.hours) {\n    ageObject = { unit: age?.hours > 1 ? \"hours\" : \"hour\", age: age?.hours };\n  }\n\n  return ageObject;\n};\n\nexport default formatAge;\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Animated, View, StyleSheet } from \"react-native\";\nimport {\n  getInterpolatedColor,\n  startAnimationHelper,\n  commonDefaultProps,\n  paragraphInitialStyles,\n} from \"./helpers\";\n\nconst ContentLoader = ({\n  active,\n  showAvatar,\n  isProfileVideo,\n  isInput,\n  isSquare,\n  pHeight,\n  pWidth,\n  pRows,\n  paragraphStyles,\n  tHeight,\n  tWidth,\n  titleStyles,\n  secondaryTitleStyles,\n  sTWidth,\n  avatarSize,\n  avatarStyles,\n  reverse,\n  containerStyles,\n  loading,\n  listSize,\n  primaryColor,\n  secondaryColor,\n  customBackground,\n  children,\n  hideExtraText,\n  isPost,\n  postHeight,\n  style,\n}) => {\n  const [animation, setAnimation] = useState(new Animated.Value(0));\n  const startAnimation = () => {\n    startAnimationHelper(animation, 700);\n  };\n\n  useEffect(() => {\n    if (active) {\n      startAnimation();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      startAnimation();\n    }\n  }, [loading]);\n\n  const interpolatedBackground = getInterpolatedColor(\n    animation,\n    primaryColor,\n    secondaryColor\n  );\n\n  if (loading === false) {\n    return children || null;\n  }\n\n  const titleInitialStyles = {\n    height: tHeight,\n    width: tWidth,\n  };\n  const secondaryTitleInitialStyles = {\n    height: tHeight,\n    width: sTWidth,\n  };\n  const inputInitialStyles = {\n    height: 48,\n    width: \"100%\",\n    paddingHorizontal: 20,\n  };\n  const avatarInitialStyles = {\n    height: avatarSize,\n    width: avatarSize || avatarSize,\n    borderRadius: avatarSize / 2,\n    marginRight: reverse ? 0 : 10,\n    marginLeft: reverse ? 10 : 0,\n  };\n  const fullWidthStyles = {\n    height: \"100%\",\n    width: \"100%\",\n  };\n\n  if (isInput) {\n    return (\n      <View style={{ margin: 10 }}>\n        <Animated.View\n          style={[\n            styles.label,\n            { backgroundColor: customBackground || interpolatedBackground },\n          ]}\n        />\n        <Animated.View\n          style={[\n            styles.input,\n            inputInitialStyles,\n            secondaryTitleStyles,\n            { backgroundColor: customBackground || interpolatedBackground },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  if (isSquare) {\n    return (\n      <Animated.View\n        style={[\n          fullWidthStyles,\n          { backgroundColor: customBackground || interpolatedBackground },\n          style && style,\n        ]}\n      />\n    );\n  }\n\n  if (isProfileVideo) {\n    return (\n      <Animated.View\n        style={[\n          fullWidthStyles,\n          avatarStyles,\n          { backgroundColor: customBackground || interpolatedBackground },\n        ]}\n      />\n    );\n  }\n  return [...Array(listSize)].map((_, index) => (\n    <View\n      key={index}\n      style={[{ width: \"100%\", marginVertical: 8 }, style && style]}\n    >\n      <View\n        style={[\n          styles.container,\n          { flexDirection: reverse ? \"row-reverse\" : \"row\" },\n          containerStyles,\n        ]}\n      >\n        {showAvatar || isPost ? (\n          <Animated.View\n            style={[\n              styles.avatar,\n              avatarInitialStyles,\n              avatarStyles,\n              {\n                backgroundColor: customBackground || interpolatedBackground,\n              },\n            ]}\n          />\n        ) : null}\n\n        <View style={styles.content}>\n          <Animated.View\n            style={[\n              styles.title,\n              titleInitialStyles,\n              titleStyles,\n              { backgroundColor: customBackground || interpolatedBackground },\n            ]}\n          />\n          <Animated.View\n            style={[\n              styles.secondaryTitle,\n              secondaryTitleInitialStyles,\n              secondaryTitleStyles,\n              { backgroundColor: customBackground || interpolatedBackground },\n            ]}\n          />\n        </View>\n      </View>\n      {isPost ? (\n        <Animated.View\n          style={[\n            fullWidthStyles,\n            {\n              backgroundColor: customBackground || interpolatedBackground,\n              marginVertical: 10,\n              height: postHeight || 400,\n            },\n          ]}\n        />\n      ) : null}\n      {!hideExtraText ? (\n        <View style={styles.paragraphContainer}>\n          {[...Array(pRows)].map((_, index) => (\n            <Animated.View\n              key={index}\n              style={[\n                styles.paragraph,\n                paragraphInitialStyles(index, pHeight, pWidth),\n                paragraphStyles,\n                { backgroundColor: customBackground || interpolatedBackground },\n              ]}\n            />\n          ))}\n        </View>\n      ) : null}\n    </View>\n  ));\n};\n\nContentLoader.defaultProps = {\n  ...commonDefaultProps,\n  pHeight: 7,\n  pWidth: [\"85%\", \"95%\", \"75%\"],\n  pRows: 3,\n  tWidth: \"50%\",\n  tHeight: 7,\n  sTWidth: \"30%\",\n  paragraphStyles: {},\n  secondaryTitleStyles: {},\n};\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    paddingHorizontal: 10,\n    alignItems: \"center\",\n  },\n\n  content: {\n    flex: 1,\n    marginLeft: 0,\n  },\n  avatar: {\n    borderRadius: 2,\n    marginLeft: 10,\n  },\n  title: {\n    marginBottom: 12,\n    borderRadius: 3,\n  },\n  secondaryTitle: {\n    marginBottom: 10,\n    borderRadius: 3,\n  },\n  paragraph: {\n    marginVertical: 7,\n    borderRadius: 3,\n    height: 10,\n  },\n  label: {\n    marginVertical: 7,\n    width: 100,\n    borderRadius: 3,\n    height: 10,\n  },\n  paragraphContainer: {\n    paddingHorizontal: 12,\n    marginTop: 10,\n  },\n});\nexport default ContentLoader;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport themeStyle from \"../theme.style\";\nconst Input = ({\n  label,\n  value,\n  onChangeText,\n  error,\n  onEndEditing,\n  onBlur,\n  placeholder,\n  isOutlined,\n  setValue,\n  onClear,\n  ...rest\n}) => {\n  const handleClear = () => {\n    if (setValue) {\n      setValue(\"\");\n    }\n    if (onClear) {\n      onClear();\n    }\n  };\n  return (\n    <View style={styles.textInputContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <View\n        style={[\n          {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            paddingRight: 10,\n            borderWidth: 2,\n            borderColor: themeStyle.colors.primary.default,\n            borderRadius: 5,\n            paddingLeft: 10,\n          },\n          error &&\n            typeof error === \"string\" && {\n              borderColor: themeStyle.colors.error.default,\n            },\n          isOutlined && {\n            color: themeStyle.colors.grayscale.lowest,\n            borderWidth: 0,\n            borderBottomWidth: 2,\n            borderRadius: 0,\n            paddingLeft: 5,\n            paddingRight: 10,\n          },\n        ]}\n      >\n        <TextInput\n          style={[styles.textInput]}\n          placeholderTextColor={themeStyle.colors.grayscale.low}\n          placeholder={placeholder || \"\"}\n          value={value}\n          onChangeText={onChangeText ? (v) => onChangeText(v) : null}\n          onEndEditing={onEndEditing ? (e) => onEndEditing(e) : null}\n          onBlur={onBlur ? (e) => onBlur(e) : null}\n          {...rest}\n        />\n        {value ? (\n          <TouchableOpacity onPress={() => handleClear()}>\n            <AntDesign\n              name=\"closecircle\"\n              size={16}\n              color={themeStyle.colors.grayscale.high}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n      {error && typeof error === \"string\" ? (\n        <Text style={styles.errorText}>{error}</Text>\n      ) : null}\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  errorText: {\n    fontSize: 12,\n    color: themeStyle.colors.error.default,\n    marginTop: 5,\n  },\n  label: {\n    fontWeight: \"400\",\n    fontSize: 12,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  textInput: {\n    fontSize: 15,\n    height: 45,\n    flex: 1,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  textInputContainer: {\n    alignSelf: \"stretch\",\n    marginBottom: 20,\n  },\n});\nexport default React.memo(Input);\n","const validateEmail = async (email) => {\n  return String(email)\n    .toLowerCase()\n    .match(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n};\nexport default validateEmail;\n","import { useState, useEffect } from \"react\";\nimport {\n  getOrientationAsync,\n  addOrientationChangeListener,\n} from \"expo-screen-orientation\";\n\nconst useScreenOrientation = (active) => {\n  const [orientation, setOrientation] = useState(0);\n\n  useEffect(() => {\n    if (!active) return;\n    getOrientationAsync().then((value) => {\n      setOrientation(value);\n    });\n\n    const subscription = addOrientationChangeListener((event) => {\n      setOrientation(event.orientationInfo.orientation);\n    });\n\n    return () => {\n      subscription.remove();\n    };\n  }, []);\n  if (orientation > 2) {\n    return \"LANDSCAPE\";\n  }\n  return \"PORTRAIT\";\n};\n\nexport default useScreenOrientation;\n","import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  Platform,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport VideoPlayer from \"../VideoPlayer\";\nimport themeStyle from \"../../theme.style\";\n// import apiCall from \"../helpers/apiCall\";\nimport RepostCard from \"../RepostCard\";\n// import AdCard from \"./AdCard\";\nimport CardImage from \"../CardImage\";\nimport PostAuthor from \"./PostAuthor\";\nimport Actions from \"./Actions\";\n\nconst PostCard = ({\n  post,\n  isPreview = false,\n  isVisible,\n  setShowPostOptions,\n  // adsManager,\n  screenWidth,\n  screenHeight,\n  // liked,\n  handleReaction,\n  handleNavigation,\n  disableVideo,\n  setUnMuteVideos,\n}) => {\n  const [bodyCollapsed, setBodyCollapsed] = useState(false);\n  const [isCollapsible, setIsCollapsible] = useState(false);\n  const navigation = useNavigation();\n\n  const onTextLayout = (e) => {\n    setIsCollapsible(e.nativeEvent.lines.length >= 3);\n  };\n\n  return (\n    <View style={{ flex: 1, width: screenWidth, maxWidth: 900 }}>\n      {/* {console.log(isVisible)}\n      <Text style={{ color: \"white\" }}>{post._id}</Text> */}\n      <View style={[styles.container, isPreview && styles.preview]}>\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n          {post.postAuthor ? <PostAuthor author={post.postAuthor} /> : null}\n          <TouchableOpacity\n            style={{\n              alignSelf: \"flex-end\",\n              width: 48,\n              height: 48,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => setShowPostOptions(post)}\n          >\n            <Entypo\n              name=\"dots-three-vertical\"\n              size={16}\n              color={themeStyle.colors.grayscale.lowest}\n            />\n          </TouchableOpacity>\n        </View>\n        {post.repostPostId ? (\n          <View>\n            <RepostCard\n              postContent={post.repostPostObj}\n              isPreview={isPreview}\n            />\n            {post.body ? (\n              <View\n                style={{\n                  padding: 5,\n                  marginHorizontal: 10,\n                }}\n              >\n                <Text\n                  onTextLayout={onTextLayout}\n                  numberOfLines={!bodyCollapsed ? 3 : null}\n                  style={{\n                    textAlign: \"left\",\n                    color: themeStyle.colors.grayscale.lowest,\n                  }}\n                >\n                  {post.body}\n                </Text>\n                {isCollapsible && !bodyCollapsed ? (\n                  <TouchableOpacity onPress={() => setBodyCollapsed(true)}>\n                    <Text\n                      style={{\n                        color: themeStyle.colors.grayscale.low,\n                        marginBottom: 10,\n                        marginTop: 5,\n                      }}\n                    >\n                      Read more\n                    </Text>\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n            ) : null}\n          </View>\n        ) : (\n          <View>\n            <TouchableOpacity\n              onPress={() =>\n                !post.private && !post.gif && handleNavigation(post)\n              }\n              underlayColor={themeStyle.colors.grayscale.high}\n              delayPressIn={150}\n            >\n              <View>\n                {post.gif ? (\n                  <View\n                    style={{\n                      flex: 1,\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                      maxHeight: 500,\n                      backgroundColor: themeStyle.colors.black,\n                    }}\n                  >\n                    <View\n                      style={{\n                        position: \"absolute\",\n                        zIndex: 1,\n                        bottom: 0,\n                        right: 0,\n                      }}\n                    >\n                      <Image\n                        resizeMode={\"contain\"}\n                        style={{\n                          width: 70,\n                          height: 20,\n                        }}\n                        source={require(\"../../../assets/via_tenor_logo_blue.png\")}\n                      />\n                    </View>\n                    <Image\n                      resizeMode={\"contain\"}\n                      style={{\n                        aspectRatio: 1 / 1,\n                        width: screenWidth || 300,\n                        height: screenWidth,\n                        backgroundColor: themeStyle.colors.black,\n                        maxWidth: 900,\n                        maxHeight: 500,\n                      }}\n                      source={{\n                        uri: post.gif,\n                      }}\n                    />\n                  </View>\n                ) : post.mediaType === \"video\" ? (\n                  <View\n                    style={{\n                      flex: 1,\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <VideoPlayer\n                      disableVideo={disableVideo || Platform.OS === \"web\"}\n                      shouldPlay={isVisible}\n                      mediaIsSelfie={post.mediaIsSelfie}\n                      url={post.mediaUrl}\n                      thumbnailUrl={post.thumbnailUrl}\n                      thumbnailHeaders={post.thumbnailHeaders}\n                      isUploading={post.ready === false}\n                      isCancelled={post.cancelled}\n                      screenHeight={screenHeight}\n                      screenWidth={screenWidth}\n                      height={post.height}\n                      width={post.width}\n                      unMute={!!post.unMute}\n                      setUnMuteVideos={setUnMuteVideos}\n                    />\n                  </View>\n                ) : post.mediaType === \"image\" ? (\n                  <View\n                    style={{\n                      flex: 1,\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                      height: \"100%\",\n                    }}\n                  >\n                    <CardImage\n                      mediaHeaders={post.mediaHeaders}\n                      mediaUrl={post.mediaUrl}\n                      screenWidth={screenWidth}\n                      screenHeight={screenHeight}\n                      height={post.height}\n                      width={post.width}\n                    />\n                    {/* {index && Math.abs(currentVisible - index) <= 3 ? (\n                      <CardImage\n                        mediaHeaders={post.mediaHeaders}\n                        mediaUrl={post.mediaUrl}\n                        screenWidth={screenWidth}\n                        screenHeight={screenHeight}\n                        height={post.height}\n                        width={post.width}\n                      />\n                    ) : (\n                      // <CardImage\n                      //   // mediaHeaders={post.mediaHeaders}\n                      //   // mediaUrl={post.mediaUrl}\n                      //   screenWidth={screenWidth}\n                      //   screenHeight={screenHeight}\n                      //   height={post.height}\n                      //   width={post.width}\n                      //   style={{\n                      //     backgroundColor:\n                      //       themeStyle.colors.grayscale.cardsOuter,\n                      //   }}\n                      // />\n                      <View\n                        style={{\n                          backgroundColor: themeStyle.colors.grayscale.low,\n                          height: screenWidth,\n                          width: screenWidth,\n                        }}\n                      />\n                    )} */}\n                  </View>\n                ) : null}\n              </View>\n            </TouchableOpacity>\n            {post.body ? (\n              <View\n                style={{\n                  paddingHorizontal: 10,\n                  paddingVertical: 20,\n                }}\n              >\n                <Text\n                  onTextLayout={onTextLayout}\n                  numberOfLines={!bodyCollapsed ? 3 : null}\n                  style={{\n                    textAlign: \"left\",\n                    color: themeStyle.colors.grayscale.lowest,\n                  }}\n                >\n                  {post.body}\n                </Text>\n                {isCollapsible && !bodyCollapsed ? (\n                  <TouchableOpacity onPress={() => setBodyCollapsed(true)}>\n                    <Text\n                      style={{\n                        color: themeStyle.colors.grayscale.low,\n                        marginBottom: 10,\n                        marginTop: 5,\n                      }}\n                    >\n                      Read more\n                    </Text>\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n            ) : null}\n          </View>\n        )}\n        <Actions\n          navigation={navigation}\n          post={post}\n          handleReaction={handleReaction}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRightWidth: 0,\n    borderLeftWidth: 0,\n    borderColor: themeStyle.colors.grayscale.low,\n    borderBottomColor: themeStyle.colors.grayscale.cardsOuter,\n    borderBottomWidth: 4,\n    backgroundColor: themeStyle.colors.grayscale.cards,\n  },\n  preview: {\n    margin: 20,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderTopWidth: 1,\n    borderRadius: 10,\n  },\n});\n\nexport default React.memo(\n  PostCard,\n  (prevProps, nextProps) =>\n    prevProps.isVisible === nextProps.isVisible &&\n    prevProps.post === nextProps.post &&\n    prevProps.deleted === nextProps.deleted\n);\n","import React, { useRef, useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Video } from \"expo-av\";\nimport themeStyle from \"../theme.style\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport CardImage from \"./CardImage\";\nimport { useSelector } from \"react-redux\";\nconst VideoPlayer = ({\n  url,\n  shouldPlay,\n  showToggle,\n  thumbnailUrl,\n  thumbnailHeaders,\n  isUploading,\n  isCancelled,\n  preventPlay,\n  screenWidth = 400,\n  screenHeight = 600,\n  height,\n  width,\n  disableVideo,\n  setUnMuteVideos,\n}) => {\n  const calculatedVideoHeight =\n    height && width && (Number(height) / Number(width)) * screenWidth;\n  const globalUnMuteVideos = useSelector(\n    (state) => state.globalUnMuteVideos\n  )?.state;\n  const decidedHeight =\n    calculatedVideoHeight < screenHeight / 1.4\n      ? calculatedVideoHeight\n      : screenHeight / 1.4;\n\n  const video = useRef(null);\n  const [videoStatus, setVideoStatus] = useState({});\n  // const [videoDimensions, setVideoDimensions] = useState({});\n  const [readyForDisplay, setReadyForDisplay] = useState(false);\n\n  // const navigation = useNavigation();\n  const handleVideoDuration = (duration) => {\n    if (!duration) {\n      return \"\";\n    }\n    let seconds = Math.floor(duration % 60);\n    let minutes = Math.floor((duration / 60) % 60);\n    let hours = Math.floor((duration / (60 * 60)) % 24);\n\n    hours = hours < 10 ? `0${hours}` : hours;\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\n    seconds = seconds < 10 ? `0${seconds}` : seconds;\n\n    return `${hours > 0 ? `${hours}:` : \"\"}${minutes}:${seconds}`;\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <View\n        style={[\n          {\n            // aspectRatio: aspectRatio || 1,\n            height: decidedHeight,\n            width: screenWidth, // math.min needed for when user switches back from landscape\n            maxWidth: 900,\n          },\n          (!height || !width) && {\n            width: screenWidth,\n            height: \"100%\",\n            aspectRatio: 1 / 1,\n          },\n        ]}\n      >\n        {isUploading || isCancelled ? (\n          <Text\n            style={{\n              position: \"absolute\",\n              fontSize: 20,\n              color: themeStyle.colors.white,\n              zIndex: 1,\n              textAlign: \"center\",\n              margin: 10,\n              textShadowOffset: {\n                width: 1,\n                height: 1,\n              },\n              textShadowRadius: 8,\n              textShadowColor: themeStyle.colors.black,\n            }}\n          >\n            {isCancelled ? \"Upload Cancelled\" : \"Uploading...\"}\n          </Text>\n        ) : null}\n        <View\n          style={{\n            backgroundColor: themeStyle.colors.black,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          {/* <View\n            style={{\n              position: !preventPlay || shouldPlay ? \"absolute\" : \"relative\",\n              top: 0,\n              width: \"100%\",\n              height: \"100%\",\n              opacity:\n                !readyForDisplay || isUploading || isCancelled || preventPlay\n                  ? 0.7\n                  : 0,\n            }}\n          >\n            <CardImage\n              mediaHeaders={thumbnailHeaders}\n              mediaUrl={thumbnailUrl}\n              screenWidth={screenWidth}\n              screenHeight={screenHeight}\n              height={height}\n              width={width}\n            />\n          </View> */}\n          {!readyForDisplay ||\n          isUploading ||\n          isCancelled ||\n          preventPlay ||\n          disableVideo ? (\n            <CardImage\n              mediaHeaders={thumbnailHeaders}\n              mediaUrl={thumbnailUrl}\n              screenWidth={screenWidth}\n              screenHeight={screenHeight}\n              height={height}\n              width={width}\n            />\n          ) : null}\n          {/* {!preventPlay || shouldPlay ? ( */}\n          {!isUploading && !isCancelled && !preventPlay && !disableVideo ? (\n            <Video\n              onReadyForDisplay={() => {\n                setReadyForDisplay(true);\n              }}\n              repeat={true}\n              // isMuted={(!showToggle || isMuted) && !unMute}\n              muted={!globalUnMuteVideos}\n              shouldPlay={shouldPlay || !preventPlay}\n              ref={video}\n              playInBackground={false}\n              isl\n              style={[\n                {\n                  // aspectRatio: aspectRatio || 1,\n                  height: !readyForDisplay ? 0 : decidedHeight,\n                  width: Math.min(screenWidth, screenHeight), // math.min needed for when user switches back from landscape\n                },\n                (!height || !width) && {\n                  width: screenWidth,\n                  height: !readyForDisplay ? 0 : \"100%\",\n                  aspectRatio: 1 / 1,\n                },\n              ]}\n              source={{\n                uri: url,\n              }}\n              useNativeControls={false}\n              resizeMode=\"contain\"\n              onProgress={(status) => setVideoStatus(status)}\n              // onPlaybackStatusUpdate={(status) => setVideoStatus(status)}\n            />\n          ) : null}\n          {/* ) : null} */}\n\n          {(!showToggle && !readyForDisplay) || disableVideo || !shouldPlay ? (\n            <View\n              style={{\n                position: \"absolute\",\n                right: \"0%\",\n                top: \"0%\",\n                left: \"0%\",\n                bottom: \"0%\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <View\n                style={{\n                  padding: 10,\n                  paddingLeft: 14,\n                  paddingRight: 6,\n                  borderWidth: 3,\n                  borderColor: themeStyle.colors.white,\n                  borderRadius: 50,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Feather\n                  name={shouldPlay && readyForDisplay ? \"pause\" : \"play\"}\n                  size={48}\n                  color={themeStyle.colors.white}\n                  style={{\n                    color: themeStyle.colors.white,\n                    textShadowOffset: {\n                      width: 1,\n                      height: 1,\n                    },\n                    textShadowRadius: 20,\n                    textShadowColor: themeStyle.colors.black,\n                  }}\n                />\n              </View>\n            </View>\n          ) : null}\n\n          <View\n            style={{\n              position: \"absolute\",\n              display: disableVideo ? \"none\" : \"flex\",\n              right: 0,\n              bottom: 0,\n            }}\n          >\n            <TouchableOpacity\n              onPress={() => setUnMuteVideos(!globalUnMuteVideos)}\n              style={{\n                height: 48,\n                width: 48,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Ionicons\n                name={\n                  !globalUnMuteVideos ? \"ios-volume-mute\" : \"ios-volume-medium\"\n                }\n                style={{\n                  color: themeStyle.colors.white,\n                  textShadowOffset: {\n                    width: 1,\n                    height: 1,\n                  },\n                  textShadowRadius: 8,\n                  textShadowColor: themeStyle.colors.black,\n                }}\n                size={24}\n                color={themeStyle.colors.white}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n      {videoStatus?.playableDuration && videoStatus?.currentTime ? (\n        <Text\n          style={{\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            backgroundColor: themeStyle.colors.grayscale.higher,\n            paddingVertical: 5,\n            opacity: 0.8,\n            paddingHorizontal: 10,\n            borderRadius: 15,\n            margin: 10,\n            color: themeStyle.colors.grayscale.lowest,\n          }}\n        >\n          {handleVideoDuration(\n            videoStatus?.playableDuration - videoStatus?.currentTime\n          )}\n        </Text>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  buttons: {\n    marginTop: 200,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  controls: {\n    height: 48,\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    position: \"absolute\",\n    bottom: 0,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    paddingHorizontal: 10,\n    width: \"100%\",\n  },\n  durationStyles: {\n    fontWeight: \"500\",\n    color: themeStyle.colors.grayscale.lowest,\n  },\n});\n\nexport default React.memo(\n  VideoPlayer,\n  (prevProps, nextProps) =>\n    prevProps.url === nextProps.url &&\n    prevProps.shouldPlay === nextProps.shouldPlay &&\n    prevProps.unMute === nextProps.unMute\n);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport themeStyle from \"../theme.style\";\nimport { Image } from \"react-native\";\n\nconst CardImage = ({\n  screenWidth,\n  screenHeight,\n  mediaUrl,\n  mediaHeaders,\n  width = 0,\n  height = 0,\n  isFull = false,\n  style = {},\n}) => {\n  const [ready, setReady] = useState(false);\n  const calculatedImage =\n    height && width && (Number(height) / Number(width)) * screenWidth;\n\n  const decidedHeight =\n    calculatedImage < screenHeight / 1.4 ? calculatedImage : screenHeight / 1.4;\n\n  const imageRef = useRef({});\n\n  const src = mediaUrl;\n  const options = {\n    headers: mediaHeaders,\n  };\n  useEffect(() => {\n    fetch(src, options)\n      .then((res) => res.blob())\n      .then((blob) => {\n        setReady(true);\n        if (imageRef?.current) {\n          imageRef.current.src = URL.createObjectURL(blob);\n        }\n      })\n      .catch((err) => console.log({ err }));\n  }, []);\n\n  return (\n    <div\n      style={{\n        width: screenWidth,\n        maxWidth: 900,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <img\n        ref={imageRef}\n        style={{\n          flex: 1,\n          width: screenWidth,\n          height: isFull ? screenHeight / 1.2 : decidedHeight,\n          maxWidth: 900,\n          backgroundColor: themeStyle.colors.black,\n          objectFit: \"contain\",\n          ...(!height || !width\n            ? {\n                width: screenWidth,\n                height: screenWidth,\n                aspectRatio: 1 / 1,\n              }\n            : {}),\n          ...style,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CardImage;\n","import axios from \"axios\";\nimport { getItemAsync } from \"expo-secure-store\";\nimport Constants from \"expo-constants\";\nimport { Platform } from \"react-native\";\n\nconst apiCall = async (method, route, payload = null) => {\n  const apiUrl = Constants.manifest.extra.apiUrl;\n\n  if (!route) return;\n  const callConfig = {\n    method,\n    // url: `${\"http://localhost:5001\"}${route}`,\n    url: `${apiUrl}${route}`,\n    data: payload,\n    headers: {},\n  };\n\n  try {\n    const token =\n      Platform.OS === \"web\"\n        ? localStorage.getItem(\"authToken\")\n        : await getItemAsync(\"authToken\");\n    if (token) {\n      callConfig.headers.Authorization = `Bearer ${token}`;\n    }\n  } catch (error) {\n    callConfig.headers.Authorization = `Bearer ${null}`;\n  }\n\n  if (payload !== null) {\n    callConfig.headers[\"Content-Type\"] = \"application/json\";\n  }\n\n  if (payload instanceof FormData) {\n    callConfig.headers[\"Content-Type\"] = \"multipart/form-data\";\n    callConfig.transformRequest = () => {\n      return payload;\n    };\n  }\n  try {\n    const { data: response } = await axios(callConfig);\n    const { message, error, success, data, other } = response;\n    return {\n      success,\n      message,\n      response: data || null,\n      error: error || null,\n      other: other || null,\n    };\n  } catch (e) {\n    if (e.response) {\n      const { status, data: response } = e.response;\n      const { message, success } = response;\n\n      return {\n        success,\n        message,\n        response: message ?? \"\",\n        error: message ?? \"\",\n      };\n    }\n    return {\n      success: false,\n      message: \"Couldn't connect to server\",\n      response: \"\",\n      error: \"CONNECTION_FAILED\",\n    };\n  }\n};\n\nexport default apiCall;\n","import React from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  Platform,\n  Dimensions,\n} from \"react-native\";\nimport { StackActions, useNavigation } from \"@react-navigation/native\";\nimport Avatar from \"./Avatar\";\nimport themeStyle from \"../theme.style\";\nimport ImageWithCache from \"./ImageWithCache\";\nimport { Feather } from \"@expo/vector-icons\";\n\nconst RepostCard = ({ postContent, isPreview, mediaIsFullWidth = false }) => {\n  const navigation = useNavigation();\n  const { width: screenWidth } = Dimensions.get(\"window\");\n\n  const handleNavigation = () => {\n    const pushScreen = StackActions.push(\"PostScreen\", { post: postContent });\n\n    navigation.dispatch(pushScreen);\n  };\n\n  if (!postContent) {\n    return (\n      <View\n        style={{\n          borderColor: themeStyle.colors.grayscale.low,\n          borderWidth: 0.5,\n          padding: 20,\n          margin: 20,\n        }}\n      >\n        <Text style={{ color: themeStyle.colors.grayscale.lowest }}>\n          The post you&apos;re looking for could not be found.\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <TouchableOpacity\n      style={styles.repostedPostContent}\n      onPress={() => handleNavigation()}\n      underlayColor={themeStyle.colors.grayscale.high}\n      disabled={isPreview}\n      delayPressIn={200}\n    >\n      <View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            padding: 7,\n            borderBottomWidth: isPreview ? 0.5 : 0,\n            borderColor: themeStyle.colors.grayscale.low,\n          }}\n        >\n          <Avatar\n            navigation={navigation}\n            userId={postContent.postAuthor._id}\n            size={50}\n            avatarUrl={postContent.postAuthor.profileGifUrl}\n            profileGifHeaders={postContent.postAuthor.profileGifHeaders}\n            flipProfileVideo={postContent.postAuthor?.flipProfileVideo}\n          />\n          <View\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginLeft: 20,\n            }}\n          >\n            <Text\n              numberOfLines={1}\n              style={{\n                fontWeight: \"700\",\n                maxWidth: 200,\n                color: themeStyle.colors.grayscale.lowest,\n              }}\n            >\n              {postContent.postAuthor.username}\n            </Text>\n            <Text\n              style={{ maxWidth: 200, color: themeStyle.colors.grayscale.low }}\n              numberOfLines={1}\n            >\n              {postContent.postAuthor.firstName}{\" \"}\n              {postContent.postAuthor.lastName}\n            </Text>\n          </View>\n        </View>\n        {postContent.gif ? (\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"column\",\n            }}\n          >\n            <Image\n              resizeMode={\"contain\"}\n              style={{\n                aspectRatio: 1 / 1,\n                width: \"100%\",\n                height: \"100%\",\n                maxHeight: 500,\n                maxWidth: 878,\n              }}\n              source={{ uri: postContent.gif }}\n            />\n          </View>\n        ) : postContent.mediaType === \"video\" ? (\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"column\",\n            }}\n          >\n            <ImageWithCache\n              removeBorderRadius\n              mediaHeaders={postContent.thumbnailHeaders}\n              mediaIsSelfie={postContent.mediaIsSelfie}\n              resizeMode=\"cover\"\n              mediaUrl={postContent.thumbnailUrl}\n              aspectRatio={1 / 1}\n              style={\n                Platform.OS === \"web\"\n                  ? {\n                      aspectRatio: 1,\n                      height: screenWidth - 22,\n                      width: mediaIsFullWidth ? \"100%\" : screenWidth - 22,\n                      maxWidth: 900 - 22,\n                      maxHeight: 500,\n                    }\n                  : {}\n              }\n            />\n            <View\n              style={{\n                position: \"absolute\",\n                top: 10,\n                right: 10,\n              }}\n            >\n              <Feather\n                name={\"play\"}\n                size={48}\n                color={themeStyle.colors.grayscale.lowest}\n              />\n            </View>\n          </View>\n        ) : postContent.mediaType === \"image\" ? (\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"column\",\n            }}\n          >\n            <ImageWithCache\n              removeBorderRadius\n              mediaHeaders={postContent.mediaHeaders}\n              mediaIsSelfie={postContent.mediaIsSelfie}\n              resizeMode=\"cover\"\n              mediaUrl={postContent.mediaUrl}\n              aspectRatio={1 / 1}\n              style={\n                Platform.OS === \"web\"\n                  ? {\n                      aspectRatio: 1,\n                      height: screenWidth - 22,\n                      width: mediaIsFullWidth ? \"100%\" : screenWidth - 22,\n                      maxWidth: 900 - 22,\n                      maxHeight: 500,\n                    }\n                  : {}\n              }\n            />\n          </View>\n        ) : null}\n        {postContent.body ? (\n          <View\n            style={{\n              margin: 10,\n              maxHeight: 200,\n            }}\n          >\n            <View>\n              <Text\n                numberOfLines={6}\n                style={{\n                  textAlign: \"left\",\n                  color: themeStyle.colors.grayscale.lowest,\n                }}\n              >\n                {postContent.body}\n              </Text>\n            </View>\n          </View>\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  repostedPostContent: {\n    borderWidth: 1,\n    borderColor: themeStyle.colors.grayscale.low,\n    margin: 10,\n  },\n});\n\nexport default React.memo(\n  RepostCard,\n  (prevProps, nextProps) => prevProps.postContent === nextProps.postContent\n);\n","import { useEffect, useState } from \"react\";\n\nconst Image = ({ source = {}, webProps = {}, style = {}, ...rest }) => {\n  const [srcBlob, setSrcBlob] = useState(false);\n\n  const options = {\n    headers: source.headers,\n  };\n\n  useEffect(() => {\n    fetch(source.uri, options)\n      .then((res) => res.blob())\n      .then((blob) => {\n        setSrcBlob(URL.createObjectURL(blob));\n      })\n      .catch((err) => console.log({ err }));\n\n    return () => setSrcBlob(false);\n  }, []);\n\n  return (\n    <img\n      src={srcBlob}\n      {...webProps}\n      style={{\n        ...style,\n        ...(webProps.style || {}),\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default Image;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  Modal,\n  TouchableWithoutFeedback,\n  Dimensions,\n  ActivityIndicator,\n  TextInput,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n} from \"react-native\";\nimport themeStyle from \"../theme.style\";\n\nconst PostOptionsModal = ({\n  showOptions,\n  setShowPostOptions,\n  reportPost,\n  deletePost,\n  editPost,\n  belongsToUser,\n  error,\n}) => {\n  const [showReportOptions, setShowReportOptions] = useState(false);\n  const [showDeleteGuard, setShowDeleteGuard] = useState(false);\n\n  const reportOptions = [\n    \"It's spam\",\n    \"It does not belong on Magnet\",\n    \"It's inappropriate\",\n  ];\n  return (\n    <Modal visible={showOptions} transparent>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" && \"padding\"}\n        keyboardVerticalOffset={0}\n        style={{ flex: 1 }}\n      >\n        <TouchableWithoutFeedback\n          onPress={() => {\n            setShowPostOptions(null);\n            setShowReportOptions(false);\n            setShowDeleteGuard(false);\n          }}\n        >\n          <View\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              flex: 1,\n              backgroundColor: \"rgba(0,0,0,0.5)\",\n            }}\n          >\n            <View\n              style={{\n                width: \"100%\",\n                padding: 20,\n                backgroundColor: themeStyle.colors.grayscale.cards,\n                paddingBottom: 40,\n              }}\n            >\n              {error ? (\n                <Text\n                  style={{\n                    alignSelf: \"flex-end\",\n                    fontSize: 12,\n                    color: themeStyle.colors.error.default,\n                    fontWeight: \"700\",\n                  }}\n                >\n                  {error}\n                </Text>\n              ) : null}\n              {!showReportOptions && !showDeleteGuard ? (\n                <View style={{ alignItems: \"center\" }}>\n                  {!belongsToUser ? (\n                    <TouchableOpacity\n                      onPress={() => setShowReportOptions(true)}\n                    >\n                      <Text\n                        style={{\n                          color: themeStyle.colors.grayscale.lowest,\n                          textAlign: \"center\",\n                          marginBottom: 20,\n                          fontWeight: \"700\",\n                        }}\n                      >\n                        Report\n                      </Text>\n                    </TouchableOpacity>\n                  ) : null}\n                  {belongsToUser ? (\n                    <View style={{ width: \"100%\" }}>\n                      <TouchableOpacity\n                        style={{\n                          height: 48,\n                          justifyContent: \"center\",\n                          borderBottomWidth: 0.5,\n                          borderColor: themeStyle.colors.grayscale.low,\n                          alignItems: \"center\",\n                        }}\n                        onPress={() => editPost()}\n                      >\n                        <Text\n                          style={{\n                            color: themeStyle.colors.grayscale.lowest,\n                            textAlign: \"center\",\n                            marginBottom: 20,\n                            paddingHorizontal: 40,\n                          }}\n                        >\n                          Edit\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        onPress={() => setShowDeleteGuard(true)}\n                        style={{\n                          height: 48,\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Text\n                          style={{\n                            color: themeStyle.colors.error.default,\n                            textAlign: \"center\",\n                          }}\n                        >\n                          Delete\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  ) : null}\n                </View>\n              ) : showDeleteGuard ? (\n                <View>\n                  <Text\n                    style={{\n                      color: themeStyle.colors.grayscale.lowest,\n                      marginBottom: 20,\n                      marginLeft: 20,\n                    }}\n                  >\n                    Are you sure?\n                  </Text>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <TouchableOpacity\n                      onPress={async () => {\n                        await deletePost();\n                        setShowDeleteGuard(false);\n                      }}\n                      style={{ height: 48, justifyContent: \"center\" }}\n                    >\n                      <Text\n                        style={{\n                          color: themeStyle.colors.error.default,\n                          paddingHorizontal: 20,\n                        }}\n                      >\n                        Delete\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      onPress={() => setShowDeleteGuard(false)}\n                      style={{ height: 48, justifyContent: \"center\" }}\n                    >\n                      <Text\n                        style={{\n                          color: themeStyle.colors.grayscale.lowest,\n                          textAlign: \"center\",\n                          paddingHorizontal: 40,\n                        }}\n                      >\n                        Cancel\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              ) : (\n                <View>\n                  {reportOptions.map((option, i) => (\n                    <TouchableOpacity\n                      key={`report-option-${i}`}\n                      onPress={() => reportPost(i)}\n                    >\n                      <View\n                        style={{\n                          padding: 20,\n                          borderBottomWidth: 0.5,\n                          borderColor: themeStyle.colors.grayscale.low,\n                        }}\n                      >\n                        <Text\n                          style={{\n                            textAlign: \"center\",\n                            color: themeStyle.colors.grayscale.lowest,\n                            fontWeight: \"700\",\n                          }}\n                        >\n                          {option}\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n              )}\n            </View>\n          </View>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </Modal>\n  );\n};\n\nexport default PostOptionsModal;\n","import { Ionicons, Feather } from \"@expo/vector-icons\";\nimport React, { useCallback, useState } from \"react\";\nimport {\n  View,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n  Text,\n  FlatList,\n  TouchableWithoutFeedback,\n  Keyboard,\n} from \"react-native\";\nimport themeStyle from \"../theme.style\";\nimport apiCall from \"../helpers/apiCall\";\n\nconst UserSearchBar = ({\n  onFocus,\n  onSubmitEditing,\n  setResults,\n  customSearch = false, // basically a search with custom configs e.g. api route\n  apiRoute,\n  apiConfig,\n  contactName,\n  onEndEditing = () => null,\n  userSearchHistory = [],\n  onReset,\n  resultsVisible,\n  feedIsVisible = false,\n  setShowAllResults,\n  showAllResults,\n  onClear,\n  publicUsers = false,\n  avoidSameUser = false,\n  ...rest\n}) => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [showHistory, setShowHistory] = useState(false);\n  const [typingStatus, setTypingStatus] = useState({\n    name: \"\",\n    typing: false,\n    typingTimeout: 0,\n  });\n  const searchUsers = (searchTerm) => {\n    setShowHistory(true);\n    if (showAllResults && setShowAllResults) {\n      setShowAllResults(false);\n    }\n    if (typingStatus.typingTimeout) {\n      clearTimeout(typingStatus.typingTimeout);\n    }\n    setSearchInput(searchTerm);\n    if (!searchTerm) {\n      handleSearch(searchTerm);\n      return;\n    }\n    setTypingStatus({\n      name: searchTerm,\n      typing: false,\n      typingTimeout: setTimeout(() => {\n        handleSearch(searchTerm);\n      }, 250),\n    });\n  };\n\n  const handleSearch = async (searchTerm) => {\n    const { response } = await apiCall(\"POST\", apiRoute || \"/user/search/0\", {\n      ...(apiConfig || {}),\n      searchTerm,\n      publicUsers,\n      avoidSameUser,\n    });\n    if (\n      customSearch &&\n      searchTerm &&\n      !response?.length &&\n      !response?.users?.length\n    ) {\n      setResults(\"none\");\n      return;\n    }\n    if (response?.users?.length) {\n      setResults(response.users);\n      return;\n    } else if (response.length) {\n      setResults(response);\n    } else {\n      setResults([]);\n    }\n  };\n\n  const renderItem = useCallback(\n    ({ item: search }) => {\n      return (\n        <TouchableOpacity onPress={() => searchUsers(search.searchQuery)}>\n          <View\n            style={{\n              padding: 10,\n              flexDirection: \"row\",\n              marginVertical: 5,\n            }}\n          >\n            <Feather\n              name=\"clock\"\n              size={16}\n              color={themeStyle.colors.grayscale.lowest}\n            />\n            <Text\n              style={{\n                color: themeStyle.colors.grayscale.lowest,\n                marginLeft: 20,\n              }}\n            >\n              {search.searchQuery}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      );\n    },\n    [resultsVisible, showHistory]\n  );\n\n  const keyExtractor = useCallback((item, i) => `${item.userId}-${i}`, []);\n\n  const resetSearch = () => {\n    Keyboard.dismiss();\n    setResults([]);\n    setShowHistory(false);\n    setSearchInput(\"\");\n    if (onReset) {\n      onReset();\n    }\n  };\n\n  return (\n    <View>\n      <View\n        style={\n          customSearch\n            ? styles.customSearchStyles\n            : styles.defaultContainerStyles\n        }\n      >\n        {showHistory && !customSearch ? (\n          <TouchableOpacity onPress={() => resetSearch()}>\n            <Ionicons\n              style={styles.searchIcon}\n              name=\"arrow-back\"\n              size={24}\n              color={\n                searchInput\n                  ? themeStyle.colors.grayscale.lowest\n                  : themeStyle.colors.grayscale.low\n              }\n            />\n          </TouchableOpacity>\n        ) : null}\n        <Ionicons\n          style={styles.searchIcon}\n          name=\"search\"\n          size={16}\n          color={\n            searchInput\n              ? themeStyle.colors.grayscale.lowest\n              : themeStyle.colors.grayscale.low\n          }\n        />\n        <TouchableWithoutFeedback onPress={onFocus ? () => onFocus() : null}>\n          <TextInput\n            onEndEditing={() => onEndEditing && onEndEditing()}\n            value={searchInput}\n            style={styles.searchBar}\n            placeholderTextColor={themeStyle.colors.grayscale.low}\n            autoCorrect={false}\n            placeholder={\n              customSearch\n                ? `Search ${\n                    contactName ? `${contactName}'s contacts` : \"contacts\"\n                  }`\n                : \"name, username or job title\"\n            }\n            onChangeText={(v) => searchUsers(v)}\n            returnKeyType=\"search\"\n            onFocus={\n              onFocus\n                ? () => {\n                    onFocus();\n                    setShowHistory(true);\n                  }\n                : () => setShowHistory(true)\n            }\n            blurOnSubmit={false}\n            onSubmitEditing={\n              onSubmitEditing ? () => onSubmitEditing(searchInput) : null\n            }\n            {...rest}\n          />\n        </TouchableWithoutFeedback>\n        {searchInput ? (\n          <TouchableOpacity\n            onPress={() => {\n              onEndEditing();\n              setSearchInput(\"\");\n              setResults([]);\n              // resetSearch();\n              // setShowHistory(false);\n            }}\n          >\n            <Ionicons\n              style={styles.searchIcon}\n              name=\"close\"\n              size={20}\n              color={themeStyle.colors.grayscale.lowest}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n      {showHistory && !resultsVisible && !feedIsVisible && !customSearch ? (\n        <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n          <Text\n            style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n          >\n            Search History\n          </Text>\n          <TouchableOpacity\n            onPress={async () => {\n              if (onClear) {\n                onClear();\n              }\n            }}\n          >\n            <Text\n              style={{ color: themeStyle.colors.grayscale.lowest, margin: 10 }}\n            >\n              Clear\n            </Text>\n          </TouchableOpacity>\n        </View>\n      ) : null}\n      {!customSearch ? (\n        <FlatList\n          data={\n            showHistory && !resultsVisible && !feedIsVisible\n              ? userSearchHistory\n              : []\n          }\n          renderItem={renderItem}\n          keyExtractor={keyExtractor}\n          keyboardShouldPersistTaps={\"always\"}\n        />\n      ) : null}\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  searchBar: {\n    flex: 1,\n    color: themeStyle.colors.grayscale.lowest,\n    height: \"100%\",\n  },\n  defaultContainerStyles: {\n    flexDirection: \"row\",\n    height: 48,\n    alignItems: \"center\",\n    backgroundColor: themeStyle.colors.grayscale.highest,\n    borderBottomWidth: 1,\n    borderBottomColor: themeStyle.colors.grayscale.low,\n  },\n  customSearchStyles: {\n    flexDirection: \"row\",\n    height: 48,\n    alignItems: \"center\",\n    backgroundColor: themeStyle.colors.grayscale.higher,\n    borderRadius: 48,\n    marginHorizontal: 5,\n    marginVertical: 10,\n  },\n  searchIcon: {\n    padding: 10,\n  },\n});\nexport default React.memo(UserSearchBar);\n","import React from \"react\";\nimport Svg, { Path } from \"react-native-svg\";\n\nconst Logo = ({ fill }) => (\n  <Svg\n    width=\"144\"\n    height=\"27\"\n    viewBox=\"0 0 144 27\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <Path\n      d=\"M3.09961 0.40625L12.5391 22.9941L22.0137 0.40625H24.8965V26H22.7344V14.8555L22.9102 3.42969L13.3828 26H11.7129L2.2207 3.51758L2.39648 14.7852V26H0.234375V0.40625H3.09961ZM45.5156 18.8281H33.8965L31.2598 26H28.9922L38.6777 0.40625H40.7344L50.4199 26H48.1699L45.5156 18.8281ZM34.5645 16.9824H44.8301L39.6973 3.04297L34.5645 16.9824ZM72.4629 22.959C71.7129 24.0254 70.5352 24.8574 68.9297 25.4551C67.3359 26.0527 65.5488 26.3516 63.5684 26.3516C61.5645 26.3516 59.7832 25.8711 58.2246 24.9102C56.666 23.9492 55.459 22.5898 54.6035 20.832C53.748 19.0742 53.3145 17.0586 53.3027 14.7852V11.5508C53.3027 8 54.1992 5.19922 55.9922 3.14844C57.7852 1.08594 60.1934 0.0546875 63.2168 0.0546875C65.8535 0.0546875 67.9746 0.728516 69.5801 2.07617C71.1855 3.41211 72.1406 5.25781 72.4453 7.61328H70.2832C69.9668 5.73828 69.1992 4.32031 67.9805 3.35938C66.7734 2.38672 65.1914 1.90039 63.2344 1.90039C60.8438 1.90039 58.9512 2.75 57.5566 4.44922C56.1621 6.14844 55.4648 8.54492 55.4648 11.6387V14.6621C55.4648 16.6074 55.793 18.3301 56.4492 19.8301C57.1172 21.3184 58.0664 22.4727 59.2969 23.293C60.5391 24.1133 61.9629 24.5234 63.5684 24.5234C65.4316 24.5234 67.0312 24.2305 68.3672 23.6445C69.2344 23.2578 69.8789 22.8066 70.3008 22.291V15.6816H63.4277V13.8535H72.4629V22.959ZM118.992 13.7305H107.021V24.1719H120.785V26H104.859V0.40625H120.697V2.25195H107.021V11.9023H118.992V13.7305ZM143.074 2.25195H134.303V26H132.141V2.25195H123.387V0.40625H143.074V2.25195Z\"\n      fill={fill}\n    />\n    <Path d=\"M78 26V1H100V25.5\" stroke=\"#138294\" strokeWidth=\"2\" />\n    <Path d=\"M78 16V26\" stroke={fill} strokeWidth=\"2\" />\n    <Path d=\"M100 16V26\" stroke={fill} strokeWidth=\"2\" />\n  </Svg>\n);\n\nexport default Logo;\n","const validatePassword = async (password) => {\n  return String(password).match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/);\n};\n\nexport default validatePassword;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nconst ProfileVideoCamera = () => {\n  return <View />;\n};\n\nexport default ProfileVideoCamera;\n","import React from \"react\";\nimport { Text, StyleSheet } from \"react-native\";\nimport formatAge from \"../helpers/formatAge\";\nimport themeStyle from \"../theme.style\";\n\nconst PostAge = ({ age }) => {\n  const ageObject = formatAge(age);\n  if (!age) return null;\n  return (\n    <Text style={styles.postAge}>\n      {ageObject.age} {ageObject.unit} ago\n    </Text>\n  );\n};\n\nconst styles = StyleSheet.create({\n  postAge: {\n    color: themeStyle.colors.grayscale.low,\n    marginHorizontal: 10,\n    marginVertical: 5,\n    fontSize: 12,\n  },\n});\n\nexport default PostAge;\n","import { View } from \"react-native\";\nconst CameraStandard = () => {\n  //#endregion\n  return <View />;\n};\n\nexport default CameraStandard;\n","import Upload from \"react-native-background-upload\";\nimport apiCall from \"./apiCall\";\n\nconst backgroundUpload = async ({\n  filePath,\n  url,\n  parameters,\n  failureRoute,\n  onComplete,\n  disableLogs,\n}) => {\n  const options = {\n    url,\n    path: filePath, // path to file\n    method: \"PUT\",\n    type: \"raw\",\n    maxRetries: 2, // set retry count (Android only). Default 2\n    parameters,\n    field: \"file\",\n    // Below are options only supported on Android\n    notification: {\n      enabled: false,\n    },\n    useUtf8Charset: true,\n    // customUploadId: post?._id,\n  };\n  // compress in background and .then (()=>startupload)\n  Upload.startUpload(options)\n    .then((uploadId) => {\n      console.log(\"Upload started\");\n      Upload.addListener(\"progress\", uploadId, (data) => {\n        if (!disableLogs) {\n          console.log(`Progress: ${data.progress}%`);\n          console.log(data);\n        }\n      });\n      Upload.addListener(\"error\", uploadId, async (data) => {\n        if (!disableLogs) {\n          console.log({ data });\n          console.log(`Error: ${data.error}%`);\n        }\n        await apiCall(\"GET\", failureRoute);\n      });\n      Upload.addListener(\"cancelled\", uploadId, async (data) => {\n        if (!disableLogs) {\n          console.log(`Cancelled!`);\n        }\n        await apiCall(\"GET\", failureRoute);\n      });\n      Upload.addListener(\"completed\", uploadId, (data) => {\n        if (onComplete) {\n          onComplete();\n        }\n        if (!disableLogs) {\n          console.log(data);\n          console.log(\"Completed!\");\n        }\n      });\n    })\n    .catch(async (err) => {\n      if (!disableLogs) {\n        console.log(\"Upload error!\", err);\n      }\n      await apiCall(\"GET\", failureRoute);\n    });\n};\n\nexport default backgroundUpload;\n","export { default as createUserSearchHistoryTable } from \"./createUserSearchHistoryTable\";\nexport { default as deleteUserSearchHistoryTable } from \"./deleteUserSearchHistoryTable\";\nexport { default as getUserSearchHistory } from \"./getUserSearchHistory\";\nexport { default as insertUserSearchHistory } from \"./insertUserSearchHistory\";\n","import { Dimensions, Platform, View } from \"react-native\";\nimport React, { useCallback, useRef } from \"react\";\nimport VideoPlayer from \"expo-video-player\";\nimport useScreenOrientation from \"../helpers/hooks/useScreenOrientation\";\nimport { useFocusEffect } from \"@react-navigation/native\";\n\nconst ExpoVideoPlayer = ({ uri, isSelfie }) => {\n  useScreenOrientation(true); // just forces a re render ONLY when screen rotates. Without this, video does not adjust for landscape viewing.\n  const { height: screenHeight, width: screenWidth } = Dimensions.get(\"window\");\n\n  const videoRef = useRef();\n\n  useFocusEffect(\n    useCallback(() => {\n      return async () => {\n        await videoRef.current?.setStatusAsync({\n          shouldPlay: false,\n        });\n      };\n    }, [])\n  );\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\" }}>\n      <VideoPlayer\n        autoHidePlayer={false}\n        timeVisible\n        style={{\n          height: Platform.OS === \"android\" ? screenHeight : screenHeight - 100,\n        }}\n        slider={{ height: Platform.OS === \"android\" ? 100 : 0 }}\n        videoProps={{\n          ref: videoRef,\n          shouldPlay: true,\n          resizeMode: \"contain\",\n          source: {\n            uri: uri,\n          },\n          style: {\n            transform: [{ scaleX: isSelfie ? -1 : 1 }],\n            height: \"100%\",\n          },\n        }}\n        fullscreen\n      />\n    </View>\n  );\n};\n\nexport default React.memo(ExpoVideoPlayer);\n","import { useNavigation } from \"@react-navigation/native\";\nimport React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Dimensions,\n} from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport themeStyle from \"../theme.style\";\nimport Avatar from \"./Avatar\";\nimport apiCall from \"../helpers/apiCall\";\nimport formatAge from \"../helpers/formatAge\";\nimport { Entypo } from \"@expo/vector-icons\";\n\nconst PostCommentCard = ({\n  comment,\n  isNestedInList = true,\n  setShowOptionsForComment,\n  handleReaction,\n}) => {\n  const { width: screenWidth } = Dimensions.get(\"window\");\n  const navigation = useNavigation();\n\n  const CommentAge = () => {\n    const { age } = comment;\n    const ageObject = formatAge(age);\n\n    return (\n      <Text style={styles.commentAge}>\n        {ageObject.age} {ageObject.unit} ago\n      </Text>\n    );\n  };\n\n  const handleReplyToComment = async () => {\n    navigation.navigate(\"CommentRepliesScreen\", {\n      comment: comment,\n    });\n  };\n\n  if (!comment.deleted) {\n    return (\n      <View style={[styles.container, { width: screenWidth, maxWidth: 900 }]}>\n        <View\n          style={{\n            flexDirection: \"row\",\n          }}\n        >\n          <View style={styles.headerContainer}>\n            <Avatar\n              userId={comment.userId}\n              navigation={navigation}\n              avatarUrl={comment.commentAuthor?.profileGifUrl}\n              profileGifHeaders={comment.commentAuthor?.profileGifHeaders}\n              size={40}\n              flipProfileVideo={comment.commentAuthor?.flipProfileVideo}\n            />\n            <TouchableOpacity\n              onPress={() =>\n                navigation.navigate(\"UserProfileScreen\", {\n                  userId: comment.userId,\n                })\n              }\n            >\n              <Text style={styles.commentAuthorName} numberOfLines={1}>\n                {comment.commentAuthor?.firstName}{\" \"}\n                {comment.commentAuthor?.lastName}\n              </Text>\n            </TouchableOpacity>\n            {comment.edited ? (\n              <Text\n                style={{\n                  fontSize: 12,\n                  marginHorizontal: 10,\n                  color: themeStyle.colors.grayscale.low,\n                }}\n              >\n                (edited)\n              </Text>\n            ) : null}\n          </View>\n          <TouchableOpacity\n            style={{\n              alignSelf: \"center\",\n              width: 48,\n              height: 48,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => setShowOptionsForComment(comment)}\n          >\n            <Entypo\n              name=\"dots-three-vertical\"\n              size={16}\n              color={themeStyle.colors.grayscale.lowest}\n            />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.commentBodyContainer}>\n          <Text style={{ color: themeStyle.colors.grayscale.lowest }}>\n            {comment.body}\n          </Text>\n        </View>\n        <View style={styles.actionsContainer}>\n          <View style={styles.actions}>\n            {isNestedInList ? (\n              <TouchableOpacity\n                onPress={() => handleReplyToComment()}\n                style={styles.replyTrigger}\n              >\n                <Text\n                  style={{\n                    color: themeStyle.colors.grayscale.lower,\n                    fontWeight: \"700\",\n                  }}\n                >\n                  Reply\n                </Text>\n              </TouchableOpacity>\n            ) : null}\n            <View style={{ flexDirection: \"row\" }}>\n              {!comment.belongsToUser ? (\n                <TouchableOpacity\n                  onPress={() => handleReaction(comment)}\n                  style={{\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginHorizontal: 5,\n                  }}\n                >\n                  <MaterialCommunityIcons\n                    name={comment.liked ? \"thumb-up\" : \"thumb-up-outline\"}\n                    size={20}\n                    color={\n                      comment.liked\n                        ? themeStyle.colors.secondary.default\n                        : themeStyle.colors.grayscale.low\n                    }\n                  />\n                </TouchableOpacity>\n              ) : null}\n              {comment.likes > 0 ? (\n                <Text\n                  style={{\n                    color: themeStyle.colors.grayscale.lowest,\n                    marginHorizontal: 10,\n                  }}\n                >\n                  {comment.likes} {comment.likes > 1 ? \"likes\" : \"like\"}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <CommentAge />\n        </View>\n        {comment.replyCount && isNestedInList ? (\n          <View style={{ flex: 1, alignItems: \"center\", padding: 10 }}>\n            <TouchableOpacity\n              style={{\n                height: 48,\n                justifyContent: \"center\",\n              }}\n              onPress={() =>\n                navigation.navigate(\"CommentRepliesScreen\", {\n                  comment: comment,\n                })\n              }\n            >\n              <Text style={{ color: themeStyle.colors.grayscale.low }}>\n                View {comment.replyCount}{\" \"}\n                {comment.replyCount > 1 ? \"replies\" : \"reply\"}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : null}\n      </View>\n    );\n  }\n  return <View />;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderBottomWidth: 0.5,\n    borderColor: themeStyle.colors.grayscale.high,\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  replyContainer: {\n    marginLeft: 70,\n    padding: 20,\n  },\n  headerContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 5,\n    flex: 1,\n  },\n  commentBodyContainer: {\n    padding: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  commentAuthorName: {\n    maxWidth: 170,\n    marginLeft: 10,\n    color: themeStyle.colors.primary.default,\n    fontWeight: \"700\",\n  },\n  actionsContainer: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  actions: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  replyTrigger: {\n    marginRight: 10,\n  },\n  likeTrigger: {\n    marginRight: 10,\n  },\n  commentAge: {\n    color: themeStyle.colors.grayscale.low,\n    marginHorizontal: 10,\n    marginVertical: 5,\n    fontSize: 12,\n  },\n});\nexport default React.memo(PostCommentCard);\n","import React, { useState, forwardRef } from \"react\";\nimport {\n  TextInput,\n  Text,\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  ActivityIndicator,\n  ScrollView,\n  TouchableWithoutFeedback,\n  Platform,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport getWebPersistedUserData from \"../helpers/getWebPersistedData\";\nimport themeStyle from \"../theme.style\";\n\nconst CommentTextInput = forwardRef(\n  (\n    {\n      setReplyingTo,\n      submitAction,\n      replyingTo,\n      hasBorderRadius,\n      initialCommentBody = \"\",\n      isFullWidth = true,\n    },\n    ref\n  ) => {\n    const [commentBody, setCommentBody] = useState(initialCommentBody);\n    const [loading, setLoading] = useState(false);\n    const [height, setHeight] = useState(1);\n\n    const nativeUserData = useSelector((state) => state.userData);\n\n    const userData =\n      Platform.OS === \"web\"\n        ? { state: getWebPersistedUserData() }\n        : nativeUserData;\n\n    const undoReply = () => {\n      setReplyingTo(null);\n      setCommentBody(\"\");\n    };\n    const handleSubmit = async () => {\n      setLoading(true);\n      const success = await submitAction(commentBody);\n      setLoading(false);\n      if (success) {\n        if (setReplyingTo) {\n          setReplyingTo(null);\n        }\n        setCommentBody(\"\");\n        setHeight(0);\n      }\n    };\n    const replyingToFieldsExists =\n      replyingTo && replyingTo.firstName && replyingTo.lastName;\n    return (\n      <View>\n        {!userData.state?.profileVideoUrl ? (\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              textAlign: \"center\",\n              marginBottom: 5,\n            }}\n          >\n            Complete your profile to comment on posts\n          </Text>\n        ) : null}\n        {replyingToFieldsExists ? (\n          <View style={styles.replyingToBanner}>\n            <Text style={styles.replyingToBannerText}>\n              Replying to {replyingTo.firstName} {replyingTo.lastName}\n            </Text>\n            <TouchableOpacity\n              style={{ height: 48, justifyContent: \"center\" }}\n              onPress={() => undoReply()}\n            >\n              <Text\n                style={{\n                  fontWeight: \"700\",\n                  color: themeStyle.colors.secondary.default,\n                }}\n              >\n                Undo\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : null}\n        <TouchableWithoutFeedback onPress={() => ref?.current?.focus()}>\n          <View\n            style={[\n              styles.inputBoxContainer,\n              hasBorderRadius && { borderRadius: 5 },\n              !userData.state?.profileVideoUrl && { opacity: 0.5 },\n            ]}\n          >\n            <ScrollView scrollEnabled={height > 48}>\n              <TextInput\n                editable={!!userData.state?.profileVideoUrl}\n                maxLength={2000}\n                ref={ref}\n                multiline\n                placeholderTextColor={themeStyle.colors.grayscale.low}\n                style={[\n                  styles.inputBox,\n                  {\n                    height: height < 48 ? \"100%\" : height,\n                    paddingTop: height < 48 ? 0 : 10,\n                    paddingBottom: height < 48 ? 0 : 10,\n                  },\n                  isFullWidth && { flex: 1 },\n                ]}\n                placeholder={\n                  replyingToFieldsExists\n                    ? \"Type a reply here...\"\n                    : \"Type a comment here...\"\n                }\n                returnKeyType=\"default\"\n                value={commentBody}\n                onChangeText={(v) => setCommentBody(v)}\n                onContentSizeChange={(event) => {\n                  setHeight(\n                    event.nativeEvent.contentSize.height < 150\n                      ? event.nativeEvent.contentSize.height\n                      : 150\n                  );\n                }}\n              />\n            </ScrollView>\n            <View\n              style={{\n                alignSelf: \"flex-end\",\n                // marginVertical: 16,\n                height: 48,\n                marginLeft: 5,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {!loading ? (\n                <TouchableOpacity\n                  disabled={!commentBody || !userData.state?.profileVideoUrl}\n                  onPress={() => handleSubmit()}\n                  style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Text\n                    style={[\n                      styles.postTrigger,\n                      (!commentBody || !userData.state?.profileVideoUrl) && {\n                        opacity: 0.5,\n                      },\n                    ]}\n                  >\n                    Post\n                  </Text>\n                </TouchableOpacity>\n              ) : (\n                <ActivityIndicator\n                  animating\n                  size=\"small\"\n                  color={themeStyle.colors.secondary.default}\n                />\n              )}\n            </View>\n          </View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  }\n);\n\nCommentTextInput.displayName = \"CommentTextInput\";\nconst styles = StyleSheet.create({\n  inputBox: {\n    paddingVertical: 10,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  inputBoxContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 10,\n    backgroundColor: themeStyle.colors.grayscale.higher,\n    marginHorizontal: 2,\n    marginBottom: 5,\n    borderWidth: 0.5,\n    borderColor: themeStyle.colors.grayscale.low,\n    borderRadius: 5,\n  },\n  postTrigger: {\n    color: themeStyle.colors.secondary.default,\n    fontWeight: \"700\",\n  },\n  replyingToBanner: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.2)\",\n    paddingHorizontal: 10,\n    marginHorizontal: 5,\n    marginBottom: 5,\n    borderRadius: 10,\n  },\n  replyingToBannerText: {\n    color: themeStyle.colors.grayscale.lowest,\n  },\n});\nexport default React.memo(CommentTextInput);\n","import React, { useRef, useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  Modal,\n  TouchableWithoutFeedback,\n  Dimensions,\n  ActivityIndicator,\n  TextInput,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n} from \"react-native\";\nimport themeStyle from \"../theme.style\";\n\nconst CommentOptionsModal = ({\n  comment,\n  updateComment,\n  deleteComment,\n  showOptions = false,\n  setShowOptionsForComment,\n  loading: parentLoading,\n  error,\n  reportComment,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [commentBody, setCommentBody] = useState(comment.body);\n  const [height, setHeight] = useState(0);\n  const [showReportOptions, setShowReportOptions] = useState(false);\n  const { width: screenWidth } = Dimensions.get(\"window\");\n  const inputRef = useRef(null);\n\n  const reportOptions = [\n    \"It's spam\",\n    \"It does not belong on Magnet\",\n    \"It's inappropriate\",\n  ];\n\n  const resetOptions = () => {\n    setShowOptionsForComment(null);\n    setIsEditing(false);\n    setShowReportOptions(false);\n  };\n\n  return (\n    <Modal\n      visible={showOptions}\n      transparent\n      onRequestClose={() => resetOptions()}\n    >\n      <SafeAreaView style={{ flex: 1 }}>\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" && \"padding\"}\n          keyboardVerticalOffset={0}\n          style={{ flex: 1 }}\n        >\n          <TouchableWithoutFeedback onPress={() => resetOptions()}>\n            <View\n              style={{\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n                flex: 1,\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n              }}\n            >\n              <TouchableWithoutFeedback>\n                {parentLoading ? (\n                  <View\n                    style={{\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      width: \"100%\",\n                      backgroundColor: themeStyle.colors.grayscale.highest,\n                      borderWidth: 1,\n                      borderColor: themeStyle.colors.grayscale.low,\n                      padding: 20,\n                    }}\n                  >\n                    <ActivityIndicator\n                      animating\n                      color={themeStyle.colors.primary.default}\n                      size={\"large\"}\n                    />\n                  </View>\n                ) : (\n                  <View\n                    style={{\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      width: \"100%\",\n                      backgroundColor: themeStyle.colors.grayscale.highest,\n                      padding: 5,\n                      paddingHorizontal: 20,\n                      paddingBottom: Platform.OS === \"ios\" ? 40 : 20,\n                    }}\n                  >\n                    {!comment.belongsToUser && !showReportOptions ? (\n                      <View style={{ marginTop: 10 }}>\n                        <TouchableOpacity\n                          onPress={() => setShowReportOptions(true)}\n                          style={{ height: 48, justifyContent: \"center\" }}\n                        >\n                          <Text\n                            style={{\n                              color: themeStyle.colors.secondary.default,\n                              marginHorizontal: 10,\n                              textAlign: \"center\",\n                            }}\n                          >\n                            Report Comment\n                          </Text>\n                        </TouchableOpacity>\n                      </View>\n                    ) : showReportOptions ? (\n                      <View>\n                        {reportOptions.map((option, i) => (\n                          <TouchableOpacity\n                            key={`report-option-${i}`}\n                            onPress={() => reportComment(i)}\n                          >\n                            <View\n                              style={{\n                                padding: 20,\n                                borderBottomWidth: 0.5,\n                                borderColor: themeStyle.colors.grayscale.low,\n                              }}\n                            >\n                              <Text\n                                style={{\n                                  textAlign: \"center\",\n                                  color: themeStyle.colors.secondary.default,\n                                }}\n                              >\n                                {option}\n                              </Text>\n                            </View>\n                          </TouchableOpacity>\n                        ))}\n                      </View>\n                    ) : null}\n                    {comment.belongsToUser && !isEditing ? (\n                      <View style={{ width: \"100%\" }}>\n                        <View\n                          style={{\n                            borderBottomWidth: 1,\n                            borderBottomColor: themeStyle.colors.grayscale.low,\n                          }}\n                        >\n                          <TouchableOpacity\n                            onPress={() => setIsEditing(true)}\n                            style={{\n                              width: \"100%\",\n                              height: 48,\n                              justifyContent: \"center\",\n                              marginVertical: 10,\n                            }}\n                          >\n                            <Text\n                              style={{\n                                color: themeStyle.colors.secondary.default,\n                                marginHorizontal: 10,\n                                textAlign: \"center\",\n                              }}\n                            >\n                              Edit\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                        <View>\n                          <TouchableOpacity\n                            onPress={() => deleteComment()}\n                            style={{\n                              width: \"100%\",\n                              height: 48,\n                              justifyContent: \"center\",\n                              marginVertical: 10,\n                            }}\n                          >\n                            <Text\n                              style={{\n                                color: themeStyle.colors.error.default,\n                                marginHorizontal: 10,\n                                textAlign: \"center\",\n                              }}\n                            >\n                              Delete\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                    ) : isEditing ? (\n                      <View\n                        style={{\n                          marginVertical: 40,\n                          height: 200,\n                          width: screenWidth / 1.2,\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {error ? (\n                          <Text\n                            style={{\n                              alignSelf: \"flex-end\",\n                              fontSize: 12,\n                              color: themeStyle.colors.grayscale.high,\n                            }}\n                          >\n                            {error}\n                          </Text>\n                        ) : null}\n                        <View\n                          style={[\n                            {\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              justifyContent: \"space-between\",\n                              paddingHorizontal: 10,\n                              borderWidth: 0.5,\n                              borderColor: themeStyle.colors.grayscale.low,\n                              borderRadius: 5,\n                            },\n                          ]}\n                        >\n                          <ScrollView>\n                            <TextInput\n                              ref={inputRef}\n                              maxLength={2000}\n                              multiline\n                              style={[\n                                {\n                                  paddingVertical: 10,\n                                  height: Math.max(48, height),\n                                  color: themeStyle.colors.grayscale.lowest,\n                                },\n                              ]}\n                              returnKeyType=\"go\"\n                              value={commentBody}\n                              onChangeText={(v) => setCommentBody(v)}\n                              onContentSizeChange={(event) => {\n                                setHeight(\n                                  event.nativeEvent.contentSize.height < 150\n                                    ? event.nativeEvent.contentSize.height\n                                    : 150\n                                );\n                              }}\n                            />\n                          </ScrollView>\n                          <View\n                            style={{\n                              alignSelf: \"flex-end\",\n                              marginVertical: 16,\n                              marginLeft: 5,\n                            }}\n                          >\n                            <TouchableOpacity\n                              disabled={!commentBody}\n                              onPress={() => updateComment(commentBody)}\n                            >\n                              <View\n                                style={{\n                                  height: 48,\n                                  alignItems: \"center\",\n                                  justifyContent: \"center\",\n                                }}\n                              >\n                                <Text\n                                  style={[\n                                    {\n                                      color:\n                                        themeStyle.colors.secondary.default,\n                                      fontWeight: \"700\",\n                                    },\n                                    !commentBody && { opacity: 0.5 },\n                                  ]}\n                                >\n                                  Post\n                                </Text>\n                              </View>\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                        <TouchableOpacity\n                          style={{\n                            alignSelf: \"flex-end\",\n                            marginVertical: 10,\n                            marginHorizontal: 5,\n                          }}\n                          onPress={() => setIsEditing(false)}\n                        >\n                          <Text\n                            style={{\n                              color: themeStyle.colors.grayscale.low,\n                            }}\n                          >\n                            Cancel\n                          </Text>\n                        </TouchableOpacity>\n                      </View>\n                    ) : null}\n                  </View>\n                )}\n              </TouchableWithoutFeedback>\n            </View>\n          </TouchableWithoutFeedback>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    </Modal>\n  );\n};\n\nexport default React.memo(CommentOptionsModal);\n","import { Platform } from \"react-native\";\n\nconst getWebPersistedUserData = () => {\n  if (Platform.OS === \"web\") {\n    const data = localStorage.getItem(\"userData\");\n\n    return JSON.parse(data);\n  }\n};\n\nexport default getWebPersistedUserData;\n","import React, { useEffect } from \"react\";\nimport { LogBox } from \"react-native\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./src/reducers/rootReducer\";\n\nimport Screens from \"./src/screens\";\nimport { enableScreens } from \"react-native-screens\";\n// import PerformanceStats from \"react-native-performance-stats\";\nimport { Platform } from \"react-native\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nconst store = createStore(rootReducer);\nconst ignoreWarns = [\n  \"Setting a timer for a long period of time\",\n  \"VirtualizedLists should never be nested inside plain ScrollViews with the same orientation\",\n  \"ViewPropTypes will be removed\",\n  \"AsyncStorage has been extracted from react-native\",\n  \"EventEmitter.removeListener\",\n];\n\nconst warn = console.warn;\nconsole.warn = (...arg) => {\n  for (let i = 0; i < ignoreWarns.length; i++) {\n    if (arg[0].startsWith(ignoreWarns[i])) return;\n  }\n  warn(...arg);\n};\n\nLogBox.ignoreLogs(ignoreWarns);\n\nconst createApp = Platform.select({\n  web: (config) => createBrowserApp(config, { history: \"hash\" }),\n  default: (config) => createAppContainer(config),\n});\n\nconst ScreenNav = createApp(\n  createSwitchNavigator({\n    Main: Screens,\n  })\n);\n\nconst App = () => {\n  enableScreens();\n  useEffect(() => {\n    // const listener = PerformanceStats.addListener((stats) => {\n    //   // console.log(stats); // STATS\n    // });\n    // // you must call .start(true) to get CPU as well\n    // PerformanceStats.start();\n    // // ... at some later point you could call:\n    // // PerformanceStats.stop();\n    // return () => listener.remove();\n  }, []);\n  return (\n    <Provider store={store}>\n      <ScreenNav />\n    </Provider>\n  );\n};\n\nexport default App;\n\n// export default App;\n","import { combineReducers } from \"redux\";\nimport { loggedInReducer, userDataReducer } from \"./userReducer\";\nimport {\n  postCreatedReducer,\n  updatedPostReducer,\n  globalUnMuteVideosReducer,\n} from \"./postsReducer\";\nimport cameraActivatedReducer from \"./cameraReducer\";\nimport canPlayFeedVideosReducer from \"./deviceReducer\";\n\nexport default combineReducers({\n  loggedIn: loggedInReducer,\n  userData: userDataReducer,\n  postCreated: postCreatedReducer,\n  cameraActivated: cameraActivatedReducer,\n  updatedPost: updatedPostReducer,\n  globalUnMuteVideos: globalUnMuteVideosReducer,\n  canPlayFeedVideos: canPlayFeedVideosReducer,\n});\n","export const loggedInReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"SET_USER_LOGGED_IN\":\n      return {\n        ...state,\n        state: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const userDataReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"SET_USER_DATA\":\n      return {\n        ...state,\n        state: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","export const postCreatedReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"SET_POST_CREATED\":\n      return {\n        ...state,\n        state: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const updatedPostReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_UPDATED_POST\":\n      return {\n        ...state,\n        state: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const globalUnMuteVideosReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_GLOBAL_UNMUTE_VIDEOS\":\n      return {\n        ...state,\n        state: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","const cameraActivatedReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"SET_CAMERA_ACTIVATED\":\n      return {\n        ...state,\n        state: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cameraActivatedReducer;\n","const canPlayFeedVideosReducer = (state = true, action) => {\n  switch (action.type) {\n    case \"SET_CAN_PLAY_FEED_VIDEOS\":\n      return {\n        ...state,\n        state: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default canPlayFeedVideosReducer;\n","import { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { View, Platform, Linking } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Constants from \"expo-constants\";\nimport * as Notifications from \"expo-notifications\";\nimport { getItemAsync, setItemAsync } from \"expo-secure-store\";\nimport apiCall from \"../helpers/apiCall\";\nimport AuthScreens from \"./Auth\";\nimport UtilityScreens from \"./Utility\";\nimport MainScreens from \"./Main\";\nimport themeStyle from \"../theme.style\";\nimport { hideAsync, preventAutoHideAsync } from \"expo-splash-screen\";\nimport { useColorScheme } from \"react-native\";\nimport { deleteUserSearchHistoryTable } from \"../helpers/sqlite/userSearchHistory\";\nimport { openDatabase } from \"expo-sqlite\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport { getTotalMemory } from \"react-native-device-info\";\n\nconst Screens = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [notificationToken, setNotificationToken] = useState(\"\");\n  const [connectionFailed, setConnectionFailed] = useState(false);\n\n  const dispatch = useDispatch();\n  const loginAttemptStatus = useSelector((state) => state.loggedIn);\n\n  const colorScheme = useColorScheme();\n  const Theme = {\n    ...DefaultTheme,\n    colors: {\n      ...DefaultTheme.colors,\n      background:\n        colorScheme === \"dark\"\n          ? themeStyle.colors.grayscale.highest\n          : themeStyle.colors.grayscale.higher,\n    },\n  };\n  const navigationContainerRef = useRef();\n  const checkUserConnected = async () => {\n    const { isConnected } = await NetInfo.fetch();\n    if (!isConnected) {\n      setConnectionFailed(true);\n    }\n\n    setLoaded(true);\n  };\n\n  const registerForPushNotificationsAsync = async () => {\n    let token;\n    if (Constants.isDevice) {\n      const { status: existingStatus } =\n        await Notifications.getPermissionsAsync();\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Notifications.requestPermissionsAsync();\n        finalStatus = status;\n      }\n      Notifications.setNotificationHandler({\n        handleNotification: async () => ({\n          shouldShowAlert: true,\n          shouldPlaySound: true,\n          shouldSetBadge: false,\n        }),\n      });\n      if (finalStatus !== \"granted\") {\n        console.log(\"Failed to get push token for push notifications\");\n        return;\n      }\n      token = (\n        await Notifications.getExpoPushTokenAsync({\n          experienceId: Constants.manifest.extra.experienceId, // TODO: Move into environment variable\n        })\n      ).data;\n    } else {\n      alert(\"Must use physical device for Push Notifications\");\n    }\n    if (Platform === \"android\") {\n      Notifications.setNotificationChannelAsync(\"default\", {\n        name: \"default\",\n        importance: Notifications.AndroidImportance.HIGH,\n        vibrationPattern: [0, 250, 250, 250],\n        lightColor: themeStyle.colors.primary.light,\n      });\n    }\n\n    return token;\n  };\n\n  useEffect(() => {\n    (async () => {\n      await preventAutoHideAsync();\n      if (!loggedIn) {\n        try {\n          const token =\n            Platform.OS === \"web\"\n              ? localStorage.getItem(\"authToken\")\n              : await getItemAsync(\"authToken\");\n          if (token) {\n            setLoggedIn(true);\n            await hideAsync();\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n\n      // if not loaded, but authenticated\n      if (!loaded || loginAttemptStatus.state) {\n        await checkUserConnected();\n        await hideAsync();\n      }\n      // if loaded, but not authenticated. This is used for logging out a user.\n      if (loaded && !loginAttemptStatus.state) {\n        setLoggedIn(false);\n        await apiCall(\"GET\", \"/user/notifications/token/delete\");\n        Platform.OS === \"web\"\n          ? localStorage.setItem(\"authToken\", \"\")\n          : await setItemAsync(\"authToken\", \"\");\n        const db = openDatabase(\"localdb\");\n        await deleteUserSearchHistoryTable(db);\n      }\n    })();\n  }, [loginAttemptStatus]);\n\n  useEffect(() => {\n    const subscription = Notifications.addNotificationResponseReceivedListener(\n      async (notificationRes) => {\n        const chatId = notificationRes.notification.request.content.data.chatId;\n        if (!chatId) return;\n        const { response, success } = await apiCall(\n          \"GET\",\n          `/user/chat/${chatId}`\n        );\n        if (success) {\n          navigationContainerRef.current?.navigate(\"ChatScreen\", {\n            existingChat: response,\n          });\n        }\n      }\n    );\n\n    if (!notificationToken && loaded && Platform.OS !== \"web\") {\n      registerForPushNotificationsAsync().then(async (token) => {\n        try {\n          if (token) {\n            const { success } = await apiCall(\n              \"POST\",\n              \"/user/notifications/token/update\",\n              { notificationToken: token }\n            );\n            if (success) {\n              await setItemAsync(\"notificationToken\", token);\n            }\n            setNotificationToken(token || \"none\");\n          } else {\n            setNotificationToken(\"none\");\n          }\n        } catch (error) {\n          setNotificationToken(\"none\");\n          return;\n        }\n      });\n    }\n    return () => subscription.remove();\n  }, [loaded, notificationToken]);\n\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS === \"android\") {\n        const ram = await getTotalMemory();\n        if (!ram) return;\n        // if android phone has less than 6gb ram, don't play feed videos\n        if (ram / 1000000 < 6000) {\n          dispatch({ type: \"SET_CAN_PLAY_FEED_VIDEOS\", payload: false });\n        }\n      }\n    })();\n  }, []);\n  return (\n    <NavigationContainer\n      linking={{}}\n      theme={Theme}\n      ref={navigationContainerRef}\n    >\n      {connectionFailed ? (\n        <UtilityScreens />\n      ) : loggedIn ? (\n        <MainScreens />\n      ) : loaded ? (\n        <AuthScreens />\n      ) : (\n        <View />\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default Screens;\n","import React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LoginScreen from \"./Login\";\nimport RegisterStack from \"./Register\";\nimport ForgotPasswordScreen from \"./ForgotPasswordScreen\";\nimport themeStyle from \"../../theme.style\";\n\nconst Stack = createNativeStackNavigator();\nconst AuthScreens = () => (\n  <Stack.Navigator\n    screenOptions={{\n      headerStyle: {\n        elevation: 0,\n        backgroundColor: themeStyle.colors.grayscale.highest,\n      },\n      cardStyle: { backgroundColor: themeStyle.colors.grayscale.highest },\n    }}\n  >\n    <Stack.Screen\n      name=\"Login\"\n      options={{ headerShown: false }}\n      component={LoginScreen}\n    />\n    <Stack.Screen\n      name=\"Register\"\n      options={{ headerShown: false }}\n      component={RegisterStack}\n    />\n    <Stack.Screen\n      options={{\n        title: \"Forgot Password\",\n        headerShown: true,\n        headerTintColor: themeStyle.colors.primary.default,\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      }}\n      name=\"ForgotPasswordScreen\"\n      component={ForgotPasswordScreen}\n    />\n  </Stack.Navigator>\n);\nexport default AuthScreens;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n  ActivityIndicator,\n  Keyboard,\n  Platform,\n  ScrollView,\n} from \"react-native\";\nimport { setItemAsync } from \"expo-secure-store\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useDispatch } from \"react-redux\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport themeStyle from \"../../theme.style\";\nimport apiCall from \"../../helpers/apiCall\";\nimport Logo from \"../../Logo\";\nimport { getExpoPushTokenAsync } from \"expo-notifications\";\nimport Constants from \"expo-constants\";\nimport webPersistUserData from \"../../helpers/webPersistUserData\";\nimport { openURL } from \"expo-linking\";\nimport IosBadge from \"../../components/AppStoreBadges/AppStoreBadge\";\nimport PlayStoreBadge from \"../../components/AppStoreBadges/PlayStoreBadge\";\n\nconst LoginScreen = () => {\n  const [identifier, setIdentifier] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [loginError, setLoginError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const navigation = useNavigation();\n\n  const authenticateUser = async () => {\n    setLoading(true);\n    setLoginError(\"\");\n    const { response, success, error } = await apiCall(\"POST\", \"/user/login\", {\n      identifier,\n      password,\n    });\n\n    if (success && response.token) {\n      if (Platform.OS === \"web\") {\n        localStorage.setItem(\"userId\", response.userId);\n        localStorage.setItem(\"authToken\", response.token);\n      } else {\n        await setItemAsync(\"userId\", response.userId);\n        await setItemAsync(\"authToken\", response.token);\n      }\n\n      dispatch({ type: \"SET_USER_DATA\", payload: response.userData });\n      webPersistUserData(response.userData);\n      Object.keys(response.apiKeys)?.forEach(async (key) => {\n        if (Platform.OS === \"web\") {\n          localStorage.setItem(key, response.apiKeys[key]);\n        } else {\n          await setItemAsync(key, response.apiKeys[key]);\n        }\n      });\n      const token =\n        Platform.OS !== \"web\" &&\n        (\n          await getExpoPushTokenAsync({\n            experienceId: Constants.manifest.extra.experienceId, // TODO: Change experience id in production\n          })\n        )?.data;\n      if (token) {\n        const { success, message } = await apiCall(\n          \"POST\",\n          \"/user/notifications/token/update\",\n          { notificationToken: token }\n        );\n        if (success) {\n          if (Platform.OS === \"web\") {\n            localStorage.setItem(\"notificationToken\", token);\n          } else {\n            await setItemAsync(\"notificationToken\", token);\n          }\n        }\n      }\n      dispatch({ type: \"SET_USER_LOGGED_IN\", payload: true });\n    }\n    if (!success) {\n      if (Platform.OS === \"ios\") {\n        Keyboard.dismiss();\n      }\n      setLoginError(\n        error === \"CONNECTION_FAILED\"\n          ? \"Cannot connect to server. Please try again later.\"\n          : \"Unable to sign in. Please check your login details and try again.\"\n      );\n    }\n    setLoading(false);\n  };\n\n  const goToSignUpScreen = () => {\n    dispatch({ type: \"SET_USER_DATA\", payload: {} });\n    webPersistUserData({});\n\n    navigation.navigate(\"Register\");\n  };\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener(\"blur\", () => {\n      setLoginError(\"\");\n      setShowPassword(false);\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <View style={styles.formContainer}>\n        <View style={styles.logoContainer}>\n          <Logo fill={themeStyle.colors.grayscale.lowest} />\n        </View>\n        <TextInput\n          style={styles.usernameInput}\n          placeholderTextColor={themeStyle.colors.grayscale.low}\n          value={identifier}\n          placeholder=\"Username or Email\"\n          onChangeText={(v) => setIdentifier(v)}\n        />\n        <View style={styles.passwordInputContainer}>\n          <TextInput\n            style={styles.passwordInput}\n            placeholderTextColor={themeStyle.colors.grayscale.low}\n            secureTextEntry={!showPassword}\n            value={password}\n            autoCorrect={false}\n            onChangeText={(v) => setPassword(v)}\n            placeholder=\"Password\"\n          />\n          <TouchableOpacity\n            style={styles.eyeIcon}\n            onPress={() => setShowPassword(!showPassword)}\n          >\n            <Ionicons\n              name={showPassword ? \"eye-outline\" : \"eye-off-outline\"}\n              size={19}\n              color={themeStyle.colors.grayscale.lowest}\n            />\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity\n          style={styles.forgotPassword}\n          onPress={() => navigation.navigate(\"ForgotPasswordScreen\")}\n        >\n          <Text style={{ color: themeStyle.colors.grayscale.lowest }}>\n            Forgot Password\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.loginButton,\n            { opacity: !(identifier && password) ? 0.5 : 1 },\n          ]}\n          onPress={() => authenticateUser()}\n          disabled={!(identifier && password)}\n        >\n          {loading ? (\n            <ActivityIndicator size={\"small\"} color={themeStyle.colors.white} />\n          ) : (\n            <Text style={styles.loginButtonText}>Log me in!</Text>\n          )}\n        </TouchableOpacity>\n        {loginError ? (\n          <Text style={styles.loginError}>{loginError}</Text>\n        ) : null}\n      </View>\n      {Platform.OS !== \"web\" ? (\n        <View style={styles.signupSection}>\n          <Text style={styles.signupText}>\n            Haven&apos;t signed up yet?{\" \"}\n            <Text\n              onPress={() => goToSignUpScreen()}\n              style={{\n                fontWeight: \"700\",\n                color: themeStyle.colors.secondary.default,\n              }}\n            >\n              Sign Up\n            </Text>\n          </Text>\n        </View>\n      ) : (\n        <View style={styles.signupSection}>\n          <Text style={styles.signupText}>\n            Haven&apos;t signed up yet?{\" \"}\n            <Text\n              style={{\n                fontWeight: \"700\",\n              }}\n            >\n              Download the Magnet App below.\n            </Text>\n          </Text>\n          <View\n            style={{\n              width: \"100%\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"space-evenly\",\n              marginTop: 50,\n            }}\n          >\n            <TouchableOpacity\n              onPress={() =>\n                openURL(\n                  `https://apps.apple.com/gb/app/magnet-connect-socialise/${Constants.manifest.extra.appStoreId}`\n                )\n              }\n            >\n              <View>\n                <IosBadge />\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() =>\n                openURL(\n                  `https://play.google.com/store/apps/details?id=${Constants.manifest.extra.packageName}`\n                )\n              }\n            >\n              <View>\n                <PlayStoreBadge />\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n      )}\n    </ScrollView>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: themeStyle.colors.grayscale.highest,\n  },\n  formContainer: {\n    padding: 20,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    maxWidth: 900,\n    alignSelf: \"center\",\n    width: \"100%\",\n  },\n  logoContainer: {\n    marginBottom: 20,\n  },\n  loginError: {\n    textAlign: \"center\",\n    color: themeStyle.colors.error.default,\n    fontWeight: \"500\",\n  },\n  loginButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    margin: 20,\n    borderRadius: 50,\n    backgroundColor: themeStyle.colors.primary.default,\n    width: 100,\n  },\n  loginButtonText: {\n    color: themeStyle.colors.white,\n  },\n  forgotPassword: {\n    alignSelf: \"flex-end\",\n    marginRight: 20,\n  },\n  registerButton: {},\n  usernameInput: {\n    fontSize: 15,\n    height: 45,\n    borderRadius: 5,\n    alignSelf: \"stretch\",\n    marginVertical: 20,\n    paddingHorizontal: 10,\n    borderWidth: 2,\n    borderColor: themeStyle.colors.primary.default,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  signupText: {\n    textAlign: \"center\",\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  passwordInput: {\n    flex: 1,\n    fontSize: 15,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  passwordInputContainer: {\n    flexDirection: \"row\",\n    height: 45,\n    borderRadius: 5,\n    alignSelf: \"stretch\",\n    marginVertical: 20,\n    paddingVertical: 5,\n    paddingHorizontal: 8,\n    borderWidth: 2,\n    borderColor: themeStyle.colors.primary.default,\n  },\n  eyeIcon: {\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n  },\n  signupSection: {\n    position: \"relative\",\n    bottom: 10,\n    maxWidth: 900,\n    alignSelf: \"center\",\n  },\n});\n\nexport default LoginScreen;\n","import { Platform } from \"react-native\";\n\nconst webPersistUserData = (userData = {}) => {\n  if (Platform.OS === \"web\") {\n    localStorage.setItem(\"userData\", JSON.stringify(userData));\n  }\n};\n\nexport default webPersistUserData;\n","import React from \"react\";\nimport Svg, { Path, G } from \"react-native-svg\";\n\nconst IosBadge = () => (\n  <Svg\n    xmlns=\"http://www.w3.org/2000/Svg\"\n    width=\"135\"\n    height=\"40\"\n    x=\"0\"\n    y=\"0\"\n    version=\"1.1\"\n    viewBox=\"0 0 135 40\"\n    xmlSpace=\"preserve\"\n  >\n    <Path\n      fill=\"#A6A6A6\"\n      d=\"M130.197 40H4.729A4.74 4.74 0 010 35.267V4.726A4.733 4.733 0 014.729 0h125.468C132.803 0 135 2.12 135 4.726v30.541c0 2.605-2.197 4.733-4.803 4.733z\"\n    ></Path>\n    <Path d=\"M134.032 35.268a3.83 3.83 0 01-3.834 3.83H4.729a3.835 3.835 0 01-3.839-3.83V4.725A3.84 3.84 0 014.729.89h125.468a3.834 3.834 0 013.834 3.835l.001 30.543z\"></Path>\n    <G fill=\"#FFF\">\n      <Path d=\"M30.128 19.784c-.029-3.223 2.639-4.791 2.761-4.864-1.511-2.203-3.853-2.504-4.676-2.528-1.967-.207-3.875 1.177-4.877 1.177-1.022 0-2.565-1.157-4.228-1.123-2.14.033-4.142 1.272-5.24 3.196-2.266 3.923-.576 9.688 1.595 12.859 1.086 1.553 2.355 3.287 4.016 3.226 1.625-.067 2.232-1.036 4.193-1.036 1.943 0 2.513 1.036 4.207.997 1.744-.028 2.842-1.56 3.89-3.127 1.255-1.78 1.759-3.533 1.779-3.623-.041-.014-3.387-1.291-3.42-5.154zM26.928 10.306c.874-1.093 1.472-2.58 1.306-4.089-1.265.056-2.847.875-3.758 1.944-.806.942-1.526 2.486-1.34 3.938 1.421.106 2.88-.717 3.792-1.793z\"></Path>\n    </G>\n    <G fill=\"#FFF\">\n      <Path d=\"M53.645 31.504h-2.271l-1.244-3.909h-4.324l-1.185 3.909H42.41l4.284-13.308h2.646l4.305 13.308zm-3.89-5.549L48.63 22.48c-.119-.355-.342-1.191-.671-2.507h-.04a96.75 96.75 0 01-.632 2.507l-1.105 3.475h3.573zM64.662 26.588c0 1.632-.441 2.922-1.323 3.869-.79.843-1.771 1.264-2.942 1.264-1.264 0-2.172-.454-2.725-1.362h-.04v5.055H55.5V25.067c0-1.026-.027-2.079-.079-3.159h1.875l.119 1.521h.04c.711-1.146 1.79-1.718 3.238-1.718 1.132 0 2.077.447 2.833 1.342.758.896 1.136 2.074 1.136 3.535zm-2.172.078c0-.934-.21-1.704-.632-2.31-.461-.632-1.08-.948-1.856-.948-.526 0-1.004.176-1.431.523-.428.35-.708.807-.839 1.373-.066.264-.099.48-.099.65v1.6c0 .698.214 1.287.642 1.768s.984.721 1.668.721c.803 0 1.428-.31 1.875-.928.448-.619.672-1.435.672-2.449zM75.699 26.588c0 1.632-.441 2.922-1.324 3.869-.789.843-1.77 1.264-2.941 1.264-1.264 0-2.172-.454-2.724-1.362h-.04v5.055h-2.132V25.067c0-1.026-.027-2.079-.079-3.159h1.875l.119 1.521h.04c.71-1.146 1.789-1.718 3.238-1.718 1.131 0 2.076.447 2.834 1.342.755.896 1.134 2.074 1.134 3.535zm-2.172.078c0-.934-.211-1.704-.633-2.31-.461-.632-1.078-.948-1.855-.948a2.22 2.22 0 00-1.432.523c-.428.35-.707.807-.838 1.373-.065.264-.099.48-.099.65v1.6c0 .698.214 1.287.64 1.768.428.48.984.721 1.67.721.803 0 1.428-.31 1.875-.928.448-.619.672-1.435.672-2.449zM88.039 27.772c0 1.132-.393 2.053-1.182 2.764-.867.777-2.074 1.165-3.625 1.165-1.432 0-2.58-.276-3.449-.829l.494-1.777c.936.566 1.963.85 3.082.85.803 0 1.428-.182 1.877-.544.447-.362.67-.848.67-1.454 0-.54-.184-.995-.553-1.364-.367-.369-.98-.712-1.836-1.029-2.33-.869-3.494-2.142-3.494-3.816 0-1.094.408-1.991 1.225-2.689.814-.699 1.9-1.048 3.258-1.048 1.211 0 2.217.211 3.02.632l-.533 1.738c-.75-.408-1.598-.612-2.547-.612-.75 0-1.336.185-1.756.553a1.58 1.58 0 00-.533 1.205c0 .526.203.961.611 1.303.355.316 1 .658 1.936 1.027 1.145.461 1.986 1 2.527 1.618.539.616.808 1.387.808 2.307zM95.088 23.508h-2.35v4.659c0 1.185.414 1.777 1.244 1.777.381 0 .697-.033.947-.099l.059 1.619c-.42.157-.973.236-1.658.236-.842 0-1.5-.257-1.975-.77-.473-.514-.711-1.376-.711-2.587v-4.837h-1.4v-1.6h1.4v-1.757l2.094-.632v2.389h2.35v1.602zM105.691 26.627c0 1.475-.422 2.686-1.264 3.633-.883.975-2.055 1.461-3.516 1.461-1.408 0-2.529-.467-3.365-1.401s-1.254-2.113-1.254-3.534c0-1.487.43-2.705 1.293-3.652.861-.948 2.023-1.422 3.484-1.422 1.408 0 2.541.467 3.396 1.402.818.907 1.226 2.078 1.226 3.513zm-2.212.069c0-.885-.189-1.644-.572-2.277-.447-.766-1.086-1.148-1.914-1.148-.857 0-1.508.383-1.955 1.148-.383.634-.572 1.405-.572 2.317 0 .885.189 1.644.572 2.276.461.766 1.105 1.148 1.936 1.148.814 0 1.453-.39 1.914-1.168.393-.645.591-1.412.591-2.296zM112.621 23.783a3.702 3.702 0 00-.672-.059c-.75 0-1.33.283-1.738.85-.355.5-.533 1.132-.533 1.895v5.035h-2.131l.02-6.574c0-1.106-.027-2.113-.08-3.021h1.857l.078 1.836h.059c.225-.631.58-1.139 1.066-1.52a2.578 2.578 0 011.541-.514c.197 0 .375.014.533.039v2.033zM122.156 26.252a5 5 0 01-.078.967h-6.396c.025.948.334 1.673.928 2.173.539.447 1.236.671 2.092.671.947 0 1.811-.151 2.588-.454l.334 1.48c-.908.396-1.98.593-3.217.593-1.488 0-2.656-.438-3.506-1.313-.848-.875-1.273-2.05-1.273-3.524 0-1.447.395-2.652 1.186-3.613.828-1.026 1.947-1.539 3.355-1.539 1.383 0 2.43.513 3.141 1.539.563.815.846 1.823.846 3.02zm-2.033-.553c.014-.632-.125-1.178-.414-1.639-.369-.593-.936-.889-1.699-.889-.697 0-1.264.289-1.697.869-.355.461-.566 1.014-.631 1.658h4.441z\"></Path>\n    </G>\n    <G fill=\"#FFF\">\n      <Path d=\"M49.05 10.009c0 1.177-.353 2.063-1.058 2.658-.653.549-1.581.824-2.783.824-.596 0-1.106-.026-1.533-.078V6.982c.557-.09 1.157-.136 1.805-.136 1.145 0 2.008.249 2.59.747.652.563.979 1.368.979 2.416zm-1.105.029c0-.763-.202-1.348-.606-1.756-.404-.407-.994-.611-1.771-.611-.33 0-.611.022-.844.068v4.889c.129.02.365.029.708.029.802 0 1.421-.223 1.857-.669s.656-1.096.656-1.95zM54.909 11.037c0 .725-.207 1.319-.621 1.785-.434.479-1.009.718-1.727.718-.692 0-1.243-.229-1.654-.689-.41-.459-.615-1.038-.615-1.736 0-.73.211-1.329.635-1.794s.994-.698 1.712-.698c.692 0 1.248.229 1.669.688.4.446.601 1.022.601 1.726zm-1.087.034c0-.435-.094-.808-.281-1.119-.22-.376-.533-.564-.94-.564-.421 0-.741.188-.961.564-.188.311-.281.69-.281 1.138 0 .435.094.808.281 1.119.227.376.543.564.951.564.4 0 .714-.191.94-.574.194-.317.291-.693.291-1.128zM62.765 8.719l-1.475 4.714h-.96l-.611-2.047a15.32 15.32 0 01-.379-1.523h-.019a11.15 11.15 0 01-.379 1.523l-.649 2.047h-.971l-1.387-4.714h1.077l.533 2.241c.129.53.235 1.035.32 1.513h.019c.078-.394.207-.896.389-1.503l.669-2.25h.854l.641 2.202c.155.537.281 1.054.378 1.552h.029c.071-.485.178-1.002.32-1.552l.572-2.202h1.029zM68.198 13.433H67.15v-2.7c0-.832-.316-1.248-.95-1.248a.946.946 0 00-.757.343 1.217 1.217 0 00-.291.808v2.796h-1.048v-3.366c0-.414-.013-.863-.038-1.349h.921l.049.737h.029c.122-.229.304-.418.543-.569.284-.176.602-.265.95-.265.44 0 .806.142 1.097.427.362.349.543.87.543 1.562v2.824zM71.088 13.433h-1.047V6.556h1.047v6.877zM77.258 11.037c0 .725-.207 1.319-.621 1.785-.434.479-1.01.718-1.727.718-.693 0-1.244-.229-1.654-.689-.41-.459-.615-1.038-.615-1.736 0-.73.211-1.329.635-1.794s.994-.698 1.711-.698c.693 0 1.248.229 1.67.688.4.446.601 1.022.601 1.726zm-1.088.034c0-.435-.094-.808-.281-1.119-.219-.376-.533-.564-.939-.564-.422 0-.742.188-.961.564-.188.311-.281.69-.281 1.138 0 .435.094.808.281 1.119.227.376.543.564.951.564.4 0 .713-.191.939-.574.195-.317.291-.693.291-1.128zM82.33 13.433h-.941l-.078-.543h-.029c-.322.433-.781.65-1.377.65-.445 0-.805-.143-1.076-.427a1.339 1.339 0 01-.369-.96c0-.576.24-1.015.723-1.319.482-.304 1.16-.453 2.033-.446V10.3c0-.621-.326-.931-.979-.931-.465 0-.875.117-1.229.349l-.213-.688c.438-.271.979-.407 1.617-.407 1.232 0 1.85.65 1.85 1.95v1.736c0 .471.023.846.068 1.124zm-1.088-1.62v-.727c-1.156-.02-1.734.297-1.734.95 0 .246.066.43.201.553a.733.733 0 00.512.184c.23 0 .445-.073.641-.218a.893.893 0 00.38-.742zM88.285 13.433h-.93l-.049-.757h-.029c-.297.576-.803.864-1.514.864-.568 0-1.041-.223-1.416-.669s-.562-1.025-.562-1.736c0-.763.203-1.381.611-1.853.395-.44.879-.66 1.455-.66.633 0 1.076.213 1.328.64h.02V6.556h1.049v5.607c0 .459.012.882.037 1.27zm-1.086-1.988v-.786a1.194 1.194 0 00-.408-.965 1.03 1.03 0 00-.701-.257c-.391 0-.697.155-.922.466-.223.311-.336.708-.336 1.193 0 .466.107.844.322 1.135.227.31.533.465.916.465.344 0 .619-.129.828-.388.202-.239.301-.527.301-.863zM97.248 11.037c0 .725-.207 1.319-.621 1.785-.434.479-1.008.718-1.727.718-.691 0-1.242-.229-1.654-.689-.41-.459-.615-1.038-.615-1.736 0-.73.211-1.329.635-1.794s.994-.698 1.713-.698c.691 0 1.248.229 1.668.688.4.446.601 1.022.601 1.726zm-1.086.034c0-.435-.094-.808-.281-1.119-.221-.376-.533-.564-.941-.564-.42 0-.74.188-.961.564-.188.311-.281.69-.281 1.138 0 .435.094.808.281 1.119.227.376.543.564.951.564.4 0 .715-.191.941-.574.193-.317.291-.693.291-1.128zM102.883 13.433h-1.047v-2.7c0-.832-.316-1.248-.951-1.248-.311 0-.562.114-.756.343s-.291.499-.291.808v2.796h-1.049v-3.366c0-.414-.012-.863-.037-1.349h.92l.049.737h.029a1.53 1.53 0 01.543-.569c.285-.176.602-.265.951-.265.439 0 .805.142 1.096.427.363.349.543.87.543 1.562v2.824zM109.936 9.504h-1.154v2.29c0 .582.205.873.611.873.188 0 .344-.016.467-.049l.027.795c-.207.078-.479.117-.814.117-.414 0-.736-.126-.969-.378-.234-.252-.35-.676-.35-1.271V9.504h-.689v-.785h.689v-.864l1.027-.31v1.173h1.154v.786zM115.484 13.433h-1.049v-2.68c0-.845-.316-1.268-.949-1.268-.486 0-.818.245-1 .735a1.317 1.317 0 00-.049.377v2.835h-1.047V6.556h1.047v2.841h.02c.33-.517.803-.775 1.416-.775.434 0 .793.142 1.078.427.355.355.533.883.533 1.581v2.803zM121.207 10.853c0 .188-.014.346-.039.475h-3.143c.014.466.164.821.455 1.067.266.22.609.33 1.029.33.465 0 .889-.074 1.271-.223l.164.728c-.447.194-.973.291-1.582.291-.73 0-1.305-.215-1.721-.645-.418-.43-.625-1.007-.625-1.731 0-.711.193-1.303.582-1.775.406-.504.955-.756 1.648-.756.678 0 1.193.252 1.541.756.281.4.42.895.42 1.483zm-1-.271a1.411 1.411 0 00-.203-.805c-.182-.291-.459-.437-.834-.437a.995.995 0 00-.834.427 1.586 1.586 0 00-.311.815h2.182z\"></Path>\n    </G>\n  </Svg>\n);\n\nexport default IosBadge;\n","import { Image } from \"react-native\";\n\nconst PlayStoreBadge = () => (\n  <Image\n    source={require(\"../../../assets/google-play-badge.png\")}\n    style={{ width: 136, height: 40 }}\n  />\n);\n\nexport default PlayStoreBadge;\n","module.exports = __webpack_public_path__ + \"static/media/google-play-badge.41a50270.png\";","import React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport Step3 from \"./Step3\";\nimport themeStyle from \"../../../theme.style\";\n\nconst Stack = createNativeStackNavigator();\n\nconst RegisterStack = () => (\n  <Stack.Navigator\n    initialRouteName=\"Step1\"\n    screenOptions={{\n      headerStyle: {\n        elevation: 0,\n        backgroundColor: themeStyle.colors.grayscale.highest,\n      },\n    }}\n  >\n    <Stack.Screen\n      options={{\n        headerShown: false,\n      }}\n      name=\"Step1\"\n      component={Step1}\n    />\n    <Stack.Screen\n      options={{\n        headerShown: true,\n        title: \"Login info\",\n        headerTintColor: themeStyle.colors.primary.default,\n      }}\n      name=\"Step2\"\n      component={Step2}\n    />\n    <Stack.Screen\n      options={{\n        headerShown: true,\n        title: \"Profile Video\",\n        headerTintColor: themeStyle.colors.primary.default,\n      }}\n      name=\"Step3\"\n      component={Step3}\n    />\n  </Stack.Navigator>\n);\nexport default RegisterStack;\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  StyleSheet,\n  SafeAreaView,\n  FlatList,\n  Platform,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport themeStyle from \"../../../theme.style\";\nimport Input from \"../../../components/Input\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Entypo, Feather } from \"@expo/vector-icons\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport webPersistUserData from \"../../../helpers/webPersistUserData\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\n\nconst Step1Screen = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobTitleOptions, setJobTitleOptions] = useState([]);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [typingStatus, setTypingStatus] = useState({\n    name: \"\",\n    typing: false,\n    typingTimeout: 0,\n  });\n\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n\n  const checkAllDetailsProvided = () => {\n    if (firstName && lastName && jobTitle) {\n      return true;\n    }\n    return false;\n  };\n\n  const existingNativeUserData = useSelector((state) => state.userData);\n\n  const existingInfo =\n    Platform.OS === \"web\"\n      ? { state: getWebPersistedUserData() }\n      : existingNativeUserData;\n\n  const handleNext = () => {\n    dispatch({\n      type: \"SET_USER_DATA\",\n      payload: { ...existingInfo.state, firstName, lastName, jobTitle },\n    });\n    webPersistUserData({\n      ...existingInfo.state,\n      firstName,\n      lastName,\n      jobTitle,\n    });\n\n    navigation.navigate(\"Step2\");\n  };\n\n  const getJobTitles = async (query) => {\n    if (typingStatus.typingTimeout) {\n      clearTimeout(typingStatus.typingTimeout);\n    }\n    setTypingStatus({\n      name: query,\n      typing: false,\n      typingTimeout: setTimeout(async () => {\n        const { response } = await apiCall(\"GET\", `/jobs/search/${query}`);\n        if (response?.length) {\n          response.map((jobTitle) => {\n            jobTitle.title = jobTitle?.title.replace(\n              /(^\\w{1})|(\\s+\\w{1})/g,\n              (letter) => letter.toUpperCase()\n            );\n          });\n          setJobTitleOptions(response.length <= 5 ? response : []);\n        }\n      }, 200),\n    });\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          paddingBottom: 5,\n          height: 60,\n          paddingHorizontal: 10,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            flex: 1,\n          }}\n        >\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Feather\n                name=\"chevron-left\"\n                size={32}\n                color={themeStyle.colors.primary.default}\n              />\n              <Text\n                style={{\n                  color: themeStyle.colors.primary.default,\n                  fontSize: 20,\n                  marginLeft: 30,\n                  fontWeight: \"700\",\n                }}\n              >\n                Back to login\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={{ flex: 1 }} />\n      </View>\n      <View style={{ height: \"100%\" }}>\n        <ScrollView\n          style={{ marginBottom: 48 }}\n          keyboardShouldPersistTaps=\"handled\"\n        >\n          <View style={styles.formContainer}>\n            <Text style={styles.titleText}>A bit about you</Text>\n            <Input\n              isOutlined\n              error={validationErrors?.firstName}\n              label=\"First Name\"\n              value={firstName}\n              setValue={setFirstName}\n              onChangeText={(v) => {\n                setFirstName(v);\n                if (validationErrors.firstName) {\n                  setValidationErrors({\n                    ...validationErrors,\n                    firstName: null,\n                  });\n                }\n              }}\n            />\n            <Input\n              isOutlined\n              error={validationErrors?.lastName}\n              label=\"Last Name\"\n              value={lastName}\n              setValue={setLastName}\n              onChangeText={(v) => {\n                setLastName(v);\n                if (validationErrors.lastName) {\n                  setValidationErrors({\n                    ...validationErrors,\n                    lastName: null,\n                  });\n                }\n              }}\n            />\n            {jobTitleOptions?.length ? (\n              <ScrollView\n                style={{\n                  // alignSelf: \"flex-start\",\n                  position: \"absolute\",\n                  bottom: 185,\n                  zIndex: 111,\n                  // left: 20,\n                  backgroundColor: themeStyle.colors.grayscale.higher,\n                  paddingHorizontal: 10,\n                  width: \"100%\",\n                }}\n                keyboardShouldPersistTaps=\"handled\"\n              >\n                <View>\n                  {jobTitleOptions.map((item, i) => (\n                    <TouchableOpacity\n                      style={{\n                        // marginVertical: 10,\n                        height: 48,\n                        justifyContent: \"center\",\n                        borderTopColor: themeStyle.colors.grayscale.highest,\n                        borderTopWidth: i > 0 ? 1 : 0,\n                        zIndex: 999,\n                      }}\n                      key={`${item._id}-${i}`}\n                      onPress={() => {\n                        setJobTitle(item.title);\n                        setJobTitleOptions([]);\n                      }}\n                    >\n                      <Text\n                        style={{\n                          color: themeStyle.colors.grayscale.lowest,\n                        }}\n                      >\n                        {item.title}\n                      </Text>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n              </ScrollView>\n            ) : null}\n            <Input\n              isOutlined\n              error={validationErrors?.jobTitle}\n              label=\"Job Title/Education\"\n              value={jobTitle}\n              setValue={setJobTitle}\n              onBlur={() => setJobTitleOptions([])}\n              onEndEditing={() => setJobTitleOptions([])}\n              onClear={() => setJobTitleOptions([])}\n              onFocus={() => console.log(\"hey\")}\n              onChangeText={(v) => {\n                if (!v) {\n                  setJobTitleOptions([]);\n                }\n                setJobTitle(v);\n                getJobTitles(v);\n                if (validationErrors.jobTitle) {\n                  setValidationErrors({\n                    ...validationErrors,\n                    jobTitle: null,\n                  });\n                }\n              }}\n            />\n            <TouchableOpacity\n              style={[\n                styles.registerationButton,\n                {\n                  opacity: !checkAllDetailsProvided() ? 0.5 : 1,\n                },\n              ]}\n              onPress={() => handleNext()}\n              disabled={!checkAllDetailsProvided()}\n            >\n              <Text style={styles.nextButtonText}>Next</Text>\n            </TouchableOpacity>\n          </View>\n        </ScrollView>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n  },\n  formContainer: {\n    paddingHorizontal: 10,\n    paddingVertical: 20,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  registerationButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    margin: 20,\n    borderRadius: 5,\n    backgroundColor: themeStyle.colors.primary.default,\n    width: 100,\n  },\n  nextButtonText: {\n    color: themeStyle.colors.white,\n    textAlign: \"center\",\n  },\n  label: {\n    fontWeight: \"700\",\n  },\n  titleText: {\n    padding: 20,\n    fontSize: 20,\n    color: themeStyle.colors.primary.default,\n    fontWeight: \"700\",\n  },\n});\nexport default React.memo(Step1Screen);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  StyleSheet,\n  Platform,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport themeStyle from \"../../../theme.style\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport Input from \"../../../components/Input\";\nimport validateEmail from \"../../../helpers/validateEmail\";\nimport validatePassword from \"../../../helpers/validatePassword\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PasswordInput from \"../../../components/PasswordInput\";\nimport webPersistUserData from \"../../../helpers/webPersistUserData\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\n\nconst Step2Screen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [validationErrors, setValidationErrors] = useState({});\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n\n  const existingNativeUserData = useSelector((state) => state.userData);\n\n  const existingInfo =\n    Platform.OS === \"web\"\n      ? { state: getWebPersistedUserData() }\n      : existingNativeUserData;\n\n  const checkAllDetailsProvided = () => {\n    if (\n      (email && username && password) ||\n      (existingInfo.state?.email &&\n        existingInfo.state?.password &&\n        existingInfo.state?.username)\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const checkUserExists = async (type, identifier) => {\n    const { response, success } = await apiCall(\"POST\", \"/user/check/exists\", {\n      type,\n      identifier,\n    });\n    if (success && response[type]) {\n      setValidationErrors({\n        ...validationErrors,\n        [type]: { exists: response[type].exists },\n      });\n      return { exists: response[type].exists };\n    }\n  };\n\n  const validateInfo = async () => {\n    const emailValid = await validateEmail(email || existingInfo.state?.email);\n    const passwordValid = await validatePassword(\n      password || existingInfo.state?.password\n    );\n    const emailMessage =\n      !email && !existingInfo.state?.email\n        ? \"Please enter your email\"\n        : !emailValid\n        ? \"This email is not valid\"\n        : null;\n    const passwordMessage =\n      !password && !existingInfo.state?.password\n        ? \"Please choose a password\"\n        : !passwordValid\n        ? \"Password is not secure enough.\"\n        : null;\n\n    const validationResult = Object.assign(\n      {},\n      !username &&\n        !existingInfo.state?.username && {\n          username: \"Please choose a username\",\n        },\n      username.length < 3 && {\n        username: \"Username must be at least 3 characters\",\n      },\n      /\\s/.test(username) && {\n        username: \"Username cannot have spaces\",\n      },\n      emailMessage && { email: emailMessage },\n      passwordMessage && { password: passwordMessage }\n    );\n\n    setValidationErrors(validationResult);\n    return validationResult;\n  };\n\n  const handleNext = async () => {\n    const validationResult = await validateInfo();\n    if (!Object.keys(validationResult).length) {\n      const usernameCheck = await checkUserExists(\"username\", username);\n      const emailCheck = usernameCheck?.exists\n        ? null\n        : await checkUserExists(\"email\", email);\n      if (usernameCheck?.exists === false && emailCheck?.exists === false) {\n        dispatch({\n          type: \"SET_USER_DATA\",\n          payload: {\n            ...existingInfo.state,\n            username: username,\n            email: email,\n            password: password,\n          },\n        });\n        webPersistUserData({\n          ...existingInfo.state,\n          username: username,\n          email: email,\n          password: password,\n        });\n        navigation.navigate(\"Step3\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (existingInfo) {\n      setUsername(existingInfo?.state?.username || \"\");\n      setEmail(existingInfo?.state?.email || \"\");\n    }\n  }, [existingInfo]);\n\n  return (\n    <View style={styles.container}>\n      <ScrollView style={{ marginBottom: 48 }}>\n        <View style={styles.formContainer}>\n          <Text style={styles.titleText}>Your login info</Text>\n          <Input\n            isOutlined\n            error={\n              validationErrors.username?.exists\n                ? \"A user with this username already exists.\"\n                : validationErrors?.username\n            }\n            label=\"Username\"\n            value={username}\n            setValue={setUsername}\n            onChangeText={(v) => {\n              setUsername(v);\n              if (validationErrors.username) {\n                setValidationErrors({\n                  ...validationErrors,\n                  username: null,\n                });\n              }\n            }}\n            onEndEditing={(e) =>\n              checkUserExists(\"username\", e.nativeEvent.text)\n            }\n          />\n          <Input\n            isOutlined\n            error={\n              validationErrors.email?.exists\n                ? \"A user with this email already exists.\"\n                : validationErrors?.email\n            }\n            label=\"Email\"\n            value={email}\n            setValue={setEmail}\n            onChangeText={(v) => {\n              setEmail(v);\n              if (validationErrors.email) {\n                setValidationErrors({\n                  ...validationErrors,\n                  email: null,\n                });\n              }\n            }}\n            onEndEditing={(e) => checkUserExists(\"email\", e.nativeEvent.text)}\n          />\n          <View style={styles.textInputContainer}>\n            <PasswordInput\n              isOutlined\n              label={\"Password\"}\n              error={validationErrors?.password}\n              setValue={setPassword}\n              onChangeText={(v) => {\n                setPassword(v);\n                if (validationErrors.password) {\n                  setValidationErrors({\n                    ...validationErrors,\n                    password: null,\n                  });\n                }\n              }}\n            />\n            {validationErrors?.password && password ? (\n              <View style={styles.passwordGuide}>\n                <Text style={styles.errorText}>\n                  - Must be at least 8 characters\n                </Text>\n                <Text style={styles.errorText}>\n                  - Must container an uppercase character\n                </Text>\n                <Text style={styles.errorText}>\n                  - Must container an lowercase character\n                </Text>\n                <Text style={styles.errorText}>- Must container a number</Text>\n              </View>\n            ) : null}\n          </View>\n          <TouchableOpacity\n            style={[\n              styles.registerationButton,\n              {\n                opacity: !checkAllDetailsProvided() ? 0.5 : 1,\n              },\n            ]}\n            onPress={() => handleNext()}\n            disabled={!checkAllDetailsProvided()}\n          >\n            <Text style={styles.nextButtonText}>Next</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n  },\n  formContainer: {\n    padding: 20,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  registerationButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    margin: 20,\n    borderRadius: 5,\n    backgroundColor: themeStyle.colors.primary.default,\n    width: 100,\n  },\n  nextButtonText: {\n    color: themeStyle.colors.white,\n    textAlign: \"center\",\n  },\n  errorText: {\n    fontSize: 12,\n    color: themeStyle.colors.error.default,\n  },\n  label: {\n    fontWeight: \"700\",\n  },\n  textInputContainer: {\n    alignSelf: \"stretch\",\n    marginBottom: 20,\n  },\n  passwordGuide: {\n    marginTop: 10,\n  },\n  titleText: {\n    padding: 20,\n    fontSize: 20,\n    color: themeStyle.colors.primary.default,\n    fontWeight: \"700\",\n  },\n});\nexport default React.memo(Step2Screen);\n","import {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport themeStyle from \"../theme.style\";\nimport React, { useState } from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst PasswordInput = ({\n  label,\n  value,\n  onChangeText,\n  error,\n  onEndEditing,\n  placeholder,\n  isOutlined,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <View style={styles.textInputContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <View\n        style={[\n          styles.passwordInputContainer,\n          isOutlined && {\n            borderWidth: 0,\n            borderBottomWidth: 2,\n            borderRadius: 0,\n            paddingLeft: 5,\n          },\n          error && {\n            borderColor: themeStyle.colors.error.default,\n          },\n        ]}\n      >\n        <TextInput\n          style={styles.passwordInput}\n          placeholderTextColor={themeStyle.colors.grayscale.low}\n          secureTextEntry={!showPassword}\n          autoCorrect={false}\n          placeholder={placeholder || \"\"}\n          value={value}\n          onChangeText={onChangeText ? (v) => onChangeText(v) : null}\n          onEndEditing={onEndEditing ? (e) => onEndEditing(e) : null}\n        />\n        <TouchableOpacity\n          style={styles.eyeIcon}\n          onPress={() => setShowPassword(!showPassword)}\n        >\n          <Ionicons\n            color={themeStyle.colors.grayscale.lowest}\n            name={showPassword ? \"eye-outline\" : \"eye-off-outline\"}\n            size={19}\n          />\n        </TouchableOpacity>\n      </View>\n      {error && typeof error === \"string\" ? (\n        <Text style={styles.errorText}>{error}</Text>\n      ) : null}\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  errorText: {\n    fontSize: 12,\n    color: themeStyle.colors.error.default,\n  },\n  label: {\n    fontWeight: \"400\",\n    fontSize: 12,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  textInput: {\n    fontSize: 15,\n    height: 45,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderWidth: 2,\n    borderColor: themeStyle.colors.primary.default,\n  },\n  textInputContainer: {\n    alignSelf: \"stretch\",\n    marginBottom: 20,\n  },\n  passwordInput: {\n    flex: 1,\n    fontSize: 15,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  passwordInputContainer: {\n    flexDirection: \"row\",\n    height: 45,\n    borderRadius: 5,\n    padding: 5,\n    paddingHorizontal: 8,\n    borderWidth: 2,\n    borderColor: themeStyle.colors.primary.default,\n  },\n  eyeIcon: {\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n  },\n});\nexport default React.memo(PasswordInput);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Dimensions,\n  ScrollView,\n  ActivityIndicator,\n  StyleSheet,\n  Modal,\n  SafeAreaView,\n  Platform,\n  Alert,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Camera } from \"expo-camera\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { getExpoPushTokenAsync } from \"expo-notifications\";\nimport themeStyle from \"../../../theme.style\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport ProfileVideoCamera from \"../../../components/ProfileVideoCamera\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PreviewVideo from \"../../../components/PreviewVideo\";\nimport { detectFacesAsync } from \"expo-face-detector\";\nimport { getThumbnailAsync } from \"expo-video-thumbnails\";\nimport AnimatedLottieView from \"lottie-react-native\";\nimport Upload from \"react-native-background-upload\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport openAppSettings from \"../../../helpers/openAppSettings\";\nimport { getInfoAsync } from \"expo-file-system\";\nimport Constants from \"expo-constants\";\nimport webPersistUserData from \"../../../helpers/webPersistUserData\";\nimport getWebPersistedUserData from \"../../../helpers/getWebPersistedData\";\n\nconst Step1Screen = () => {\n  const [loading, setLoading] = useState(false);\n  const [verifying, setVerifying] = useState(false);\n\n  const [hasCameraPermission, setHasCameraPermission] = useState(null);\n  const [hasAudioPermission, setHasAudioPermission] = useState(null);\n\n  const [cameraActivated, setCameraActivated] = useState(false);\n\n  const [showVideoSizeError, setShowVideoSizeError] = useState(false);\n  const [tooShort, setTooShort] = useState(false);\n  const [tooLong, setTooLong] = useState(false);\n\n  const [recording, setRecording] = useState(false);\n  const [recordingLength, setRecordingLength] = useState(20);\n  const [showHelpModal, setShowHelpModal] = useState(false);\n\n  const { width: screenWidth } = Dimensions.get(\"window\");\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [detectingFaces, setDetectingFaces] = useState(false);\n\n  const [profileVideo, setProfileVideo] = useState(\"\");\n  const [prevProfileVideo, setPrevProfileVideo] = useState(\"\");\n\n  const [loadingVideo, setLoadingVideo] = useState(false);\n\n  const [skipProfileVideo, setSkipProfileVideo] = useState(false);\n\n  const [pickedFromCameraRoll, setPickedFromCameraRoll] = useState(false);\n\n  const [registerationError, setRegisterationError] = useState(\"\");\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n\n  const existingNativeUserData = useSelector((state) => state.userData);\n\n  const existingInfo =\n    Platform.OS === \"web\"\n      ? { state: getWebPersistedUserData() }\n      : existingNativeUserData;\n\n  const profileVideoIsValid = () => {\n    if (tooShort || tooLong) return false;\n    if (profileVideo && faceDetected) {\n      return true;\n    }\n    if (skipProfileVideo) {\n      return true;\n    }\n    return false;\n  };\n\n  const sendUserData = async (notificationToken) => {\n    setVerifying(true);\n    const { response, success } = await apiCall(\n      \"POST\",\n      \"/user/verify-registeration-details\",\n      {\n        ...existingInfo.state,\n        notificationToken,\n        profileVideoFileName: profileVideo.replace(/^.*[\\\\\\/]/, \"\"),\n        flipProfileVideo: (\n          Platform.OS === \"android\" && !pickedFromCameraRoll\n        ).toString(), //TODO check if we still need to convert to string\n      }\n    );\n    setVerifying(false);\n    if (!success) {\n      setRegisterationError(\n        \"We could not verify your registeration details. Please try again later.\"\n      );\n      return;\n    }\n    setLoading(true);\n\n    const filePath =\n      Platform.OS == \"android\"\n        ? profileVideo.replace(\"file://\", \"\")\n        : profileVideo;\n    if (notificationToken) {\n      const options = {\n        url: response.signedProfileVideoUploadUrl,\n        path: filePath, // path to file\n        method: \"PUT\",\n        type: \"raw\",\n        maxRetries: 2, // set retry count (Android only). Default 2\n        // Below are options only supported on Android\n        notification: {\n          enabled: false,\n        },\n        useUtf8Charset: true,\n      };\n      Upload.startUpload(options)\n        .then((uploadId) => {\n          Upload.addListener(\"progress\", uploadId, () => {});\n          Upload.addListener(\"error\", uploadId, async (error) => {\n            setLoading(false);\n            console.log({ error });\n            setRegisterationError(\n              \"We could not upload your profile video. Please try again later.\"\n            );\n          });\n          Upload.addListener(\"cancelled\", uploadId, async (cancelled) => {\n            console.log({ cancelled });\n            setLoading(false);\n            setRegisterationError(\n              \"We could not upload your profile video. Please try again later.\"\n            );\n          });\n          Upload.addListener(\"completed\", uploadId, async (data) => {\n            setLoading(false);\n            if (data.responseCode === 200) {\n              const { success } = await apiCall(\"POST\", `/user/register`, {\n                ...existingInfo.state,\n                notificationToken,\n                flipProfileVideo:\n                  Platform.OS === \"android\" && !pickedFromCameraRoll,\n                profileVideoKey: response.profileVideoKey,\n              });\n              if (success) {\n                dispatch({\n                  type: \"SET_USER_DATA\",\n                  payload: {},\n                });\n                webPersistUserData({});\n                setTimeout(() => navigation.navigate(\"Login\"), 500);\n              } else {\n                setRegisterationError(\n                  \"We could not create your account. Please try again later.\"\n                );\n              }\n            } else {\n              setRegisterationError(\n                \"We could not upload your profile video. Please try again later.\"\n              );\n            }\n          });\n        })\n        .catch(async (err) => {\n          console.log(err);\n          setLoading(false);\n          setRegisterationError(\n            \"We could not upload your profile video. Please try again later.\"\n          );\n        });\n    }\n  };\n\n  const registerUser = async () => {\n    const { data: notificationToken } = await getExpoPushTokenAsync({\n      experienceId: Constants.manifest.extra.experienceId,\n    });\n    const apiUrl = Constants.manifest.extra.apiUrl;\n\n    setRegisterationError(\"\");\n    if (profileVideo && !skipProfileVideo) {\n      await sendUserData(apiUrl, notificationToken);\n    } else {\n      setVerifying(true);\n      const { response, success, message } = await apiCall(\n        \"POST\",\n        `/user/register`,\n        {\n          ...existingInfo.state,\n          notificationToken,\n          flipProfileVideo: Platform.OS === \"android\" && !pickedFromCameraRoll,\n        }\n      );\n      setVerifying(false);\n\n      if (success) {\n        dispatch({\n          type: \"SET_USER_DATA\",\n          payload: {},\n        });\n        webPersistUserData({});\n        setTimeout(() => navigation.navigate(\"Login\"), 500);\n      } else {\n        setRegisterationError(\"An error occurred. Please try again.\");\n      }\n    }\n  };\n\n  const handleFaceDetection = async (duration) => {\n    setLoadingVideo(true);\n    setTooShort(false);\n    setTooLong(false);\n    setDetectingFaces(true);\n    if (Number(duration) < 3000) {\n      setDetectingFaces(false);\n      setLoadingVideo(false);\n      setTooShort(true);\n      return;\n    }\n    if (Number(duration) > 30000) {\n      setDetectingFaces(false);\n      setLoadingVideo(false);\n      setTooLong(true);\n      return;\n    }\n    setDetectingFaces(true);\n    const { uri } = await getThumbnailAsync(profileVideo, {\n      time: 3000,\n    });\n    const { faces } = await detectFacesAsync(uri);\n\n    if (faces?.length) {\n      setFaceDetected(true);\n      setPrevProfileVideo(profileVideo);\n    } else {\n      setFaceDetected(false);\n    }\n    setDetectingFaces(false);\n    setLoadingVideo(false);\n  };\n\n  const pickProfileVideo = async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      Alert.alert(\n        \"Unable access camera roll\",\n        \"Please enable storage permissions to upload a profile video from your local files.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Settings\",\n            onPress: () => openAppSettings(),\n          },\n        ]\n      );\n    }\n\n    if (status === \"granted\") {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Videos,\n        quality: 0.3,\n        allowsMultipleSelection: false,\n        videoMaxDuration: 30,\n        allowsEditing: false,\n      });\n      if (!result.cancelled) {\n        const mediaInfo = await getInfoAsync(result.uri);\n        const mediaSizeInMb = mediaInfo.size / 1000000;\n        if (mediaSizeInMb > 50) {\n          setShowVideoSizeError(true);\n          Alert.alert(\n            \"Unable to process this video\",\n            \"This video is too large. Please choose a video that is 50MB or smaller in size.\",\n            [\n              {\n                text: \"Cancel\",\n              },\n              {\n                text: \"Select Another Video\",\n                onPress: () => pickProfileVideo(),\n              },\n            ]\n          );\n          setLoading(false);\n          return;\n        }\n        setFaceDetected(false);\n        setDetectingFaces(false);\n        setPickedFromCameraRoll(true);\n        setShowVideoSizeError(false);\n        setProfileVideo(result.uri);\n      }\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const cameraStatus = await Camera.requestCameraPermissionsAsync();\n      setHasCameraPermission(cameraStatus.status === \"granted\");\n      const audioStatus = await Camera.requestMicrophonePermissionsAsync();\n      setHasAudioPermission(audioStatus.status === \"granted\");\n    })();\n    return () => {\n      setHasCameraPermission(null);\n      setHasAudioPermission(null);\n    };\n  }, [cameraActivated]);\n\n  useEffect(() => {\n    if (cameraActivated || loading) {\n      navigation.setOptions({ headerShown: false });\n    } else {\n      navigation.setOptions({ headerShown: true });\n    }\n  }, [cameraActivated, loading]);\n\n  if (loading) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            fontSize: 20,\n            fontWeight: \"700\",\n          }}\n        >\n          Creating your account\n        </Text>\n        <Text\n          style={{\n            textAlign: \"center\",\n            fontSize: 12,\n            color: themeStyle.colors.grayscale.lowest,\n          }}\n        >\n          This usually takes less than 15 seconds...\n        </Text>\n        <View style={{ width: 200, height: 200 }}>\n          <AnimatedLottieView\n            source={require(\"../../../../assets/lotties/loadingBlocks.json\")}\n            autoPlay\n            loop\n            speed={1}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  if (cameraActivated) {\n    return (\n      <ProfileVideoCamera\n        setRecording={setRecording}\n        setProfileVideo={(video) => {\n          setPickedFromCameraRoll(false);\n          setProfileVideo(video);\n        }}\n        setCameraActivated={setCameraActivated}\n        setRecordingLength={setRecordingLength}\n        recording={recording}\n        recordingLength={recordingLength}\n        hasCameraPermission={hasCameraPermission}\n        hasAudioPermission={hasAudioPermission}\n      />\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={{ marginBottom: 0 }}>\n        <View style={styles.formContainer}>\n          <Text\n            style={[styles.signupText, skipProfileVideo && { opacity: 0.1 }]}\n          >\n            Your Profile Video\n          </Text>\n          <Text\n            style={{\n              textAlign: \"center\",\n              fontSize: 16,\n              marginBottom: 20,\n              color: themeStyle.colors.grayscale.lowest,\n              opacity: skipProfileVideo ? 0.1 : 1,\n            }}\n          >\n            Build quality connections with profile videos.\n          </Text>\n          <Modal\n            visible={showHelpModal}\n            onRequestClose={() => setShowHelpModal(false)}\n          >\n            <SafeAreaView\n              style={{\n                backgroundColor: themeStyle.colors.grayscale.highest,\n                flex: 1,\n              }}\n            >\n              <View style={{ alignSelf: \"flex-end\", margin: 20 }}>\n                <TouchableOpacity\n                  disabled={skipProfileVideo}\n                  onPress={() => setShowHelpModal(false)}\n                  style={{ opacity: skipProfileVideo ? 0.1 : 1 }}\n                >\n                  <Ionicons\n                    name=\"close\"\n                    size={24}\n                    color={themeStyle.colors.grayscale.lowest}\n                  />\n                </TouchableOpacity>\n              </View>\n              <View style={{ padding: 20, justifyContent: \"center\" }}>\n                <Text\n                  style={{\n                    fontWeight: \"700\",\n                    fontSize: 16,\n                    alignSelf: \"flex-start\",\n                    marginBottom: 10,\n                    color: themeStyle.colors.grayscale.lowest,\n                  }}\n                >\n                  Some things you could mention about yourself:\n                </Text>\n                <Text style={styles.helpModalListItem}>\n                  - Your job title and role\n                </Text>\n                <Text style={styles.helpModalListItem}>\n                  - Your current or past education\n                </Text>\n                <Text style={styles.helpModalListItem}>\n                  - The company you work for\n                </Text>\n                <Text style={styles.helpModalListItem}>\n                  - The university you attend/attended\n                </Text>\n                <Text style={styles.helpModalListItem}>\n                  - Your accomplishments\n                </Text>\n                <Text style={styles.helpModalListItem}>- Your goals</Text>\n                <Text style={styles.helpModalListItem}>- Your hobbies</Text>\n              </View>\n            </SafeAreaView>\n          </Modal>\n          {profileVideo && faceDetected && !skipProfileVideo ? (\n            <View>\n              <PreviewVideo\n                uri={profileVideo}\n                isFullWidth\n                flipProfileVideo={\n                  Platform.OS === \"android\" && !pickedFromCameraRoll\n                }\n                onLoad={(info) => handleFaceDetection(info?.durationMillis)}\n              />\n              {(tooShort || tooLong) && !loadingVideo && !detectingFaces ? (\n                <Text style={styles.faceDetectionError}>\n                  {tooShort\n                    ? \"Profile video must be at least 3 seconds long.\"\n                    : tooLong\n                    ? \"Profile video must be no longer than 30 seconds.\"\n                    : \"\"}\n                </Text>\n              ) : null}\n            </View>\n          ) : profileVideo && !skipProfileVideo ? (\n            <View>\n              <PreviewVideo\n                uri={profileVideo}\n                isFullWidth\n                flipProfileVideo={\n                  Platform.OS === \"android\" && !pickedFromCameraRoll\n                }\n                onLoad={(info) => handleFaceDetection(info?.durationMillis)}\n              />\n              {!detectingFaces && !loadingVideo ? (\n                <Text style={styles.faceDetectionError}>\n                  {tooShort\n                    ? \"Profile video must be at least 3 seconds long.\"\n                    : tooLong\n                    ? \"Profile video must be no longer than 30 seconds.\"\n                    : !faceDetected\n                    ? \"Face was not fully detected. Please make sure your face is shown at the start and end of your profile video when introducing yourself.\"\n                    : \"\"}\n                </Text>\n              ) : null}\n            </View>\n          ) : null}\n          <View style={{ opacity: skipProfileVideo ? 0.1 : 1 }}>\n            <TouchableOpacity\n              disabled={skipProfileVideo}\n              style={[styles.takeVideoButton]}\n              onPress={() => {\n                setFaceDetected(false);\n                setCameraActivated(true);\n              }}\n            >\n              <Text style={[styles.takeVideoButtonText]}>\n                <Ionicons\n                  name=\"videocam\"\n                  size={14}\n                  color={themeStyle.colors.grayscale.lowest}\n                />{\" \"}\n                Take profile video\n              </Text>\n            </TouchableOpacity>\n            <Text\n              style={{\n                textAlign: \"center\",\n                color: themeStyle.colors.grayscale.lowest,\n                fontWeight: \"700\",\n              }}\n            >\n              or\n            </Text>\n            <TouchableOpacity\n              onPress={() => pickProfileVideo()}\n              style={[styles.uploadVideoButton]}\n              disabled={skipProfileVideo}\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.grayscale.lowest,\n                  fontWeight: \"900\",\n                }}\n              >\n                <FontAwesome5\n                  name=\"images\"\n                  size={14}\n                  color={themeStyle.colors.grayscale.lowest}\n                />{\" \"}\n                Upload profile video\n              </Text>\n            </TouchableOpacity>\n          </View>\n          {!skipProfileVideo ? (\n            <TouchableOpacity\n              disabled={skipProfileVideo}\n              style={{ opacity: skipProfileVideo ? 0.1 : 1, marginTop: 20 }}\n              onPress={() => setSkipProfileVideo(true)}\n            >\n              <Text\n                style={{\n                  color: themeStyle.colors.secondary.default,\n                  fontWeight: \"700\",\n                  marginVertical: 20,\n                }}\n              >\n                Skip for now\n              </Text>\n            </TouchableOpacity>\n          ) : null}\n          <TouchableOpacity\n            style={[\n              styles.registerationButton,\n              {\n                opacity: !profileVideoIsValid() || loadingVideo ? 0.5 : 1,\n                minWidth: 100,\n                alignItems: \"center\",\n              },\n            ]}\n            onPress={() => registerUser()}\n            disabled={!profileVideoIsValid() || loadingVideo || verifying}\n          >\n            {!verifying ? (\n              <Text style={styles.registerationButtonText}>\n                Sign Up <Ionicons name=\"paper-plane-outline\" size={14} />\n              </Text>\n            ) : (\n              <ActivityIndicator\n                size={\"small\"}\n                animating\n                color={themeStyle.colors.white}\n              />\n            )}\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              marginVertical: 20,\n              width: \"100%\",\n              opacity: skipProfileVideo ? 0.1 : 1,\n            }}\n            onPress={() => setShowHelpModal(true)}\n            disabled={skipProfileVideo}\n          >\n            <Text\n              style={{\n                color: themeStyle.colors.secondary.default,\n                fontWeight: \"700\",\n              }}\n            >\n              Need ideas?\n            </Text>\n          </TouchableOpacity>\n          {registerationError ? (\n            <Text style={styles.registerationError}>{registerationError}</Text>\n          ) : null}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n  },\n  formContainer: {\n    padding: 20,\n    backgroundColor: themeStyle.colors.grayscale.highest,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  registerationError: {\n    textAlign: \"center\",\n    color: themeStyle.colors.error.default,\n    fontWeight: \"500\",\n  },\n  faceDetectionError: {\n    color: themeStyle.colors.error.default,\n    textAlign: \"center\",\n    fontWeight: \"700\",\n    marginVertical: 20,\n    marginHorizontal: 10,\n  },\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: \"transparent\",\n    flexDirection: \"row\",\n    margin: 20,\n  },\n  button: {\n    flex: 0.1,\n    alignSelf: \"flex-end\",\n    alignItems: \"center\",\n  },\n  registerationButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    margin: 20,\n    borderRadius: 50,\n    backgroundColor: themeStyle.colors.primary.default,\n  },\n  registerationButtonText: {\n    color: themeStyle.colors.white,\n  },\n  takeVideoButton: {\n    margin: 10,\n    padding: 10,\n    borderWidth: 3,\n    borderColor: themeStyle.colors.primary.default,\n    borderRadius: 5,\n  },\n  uploadVideoButton: {\n    margin: 10,\n    padding: 10,\n    borderWidth: 3,\n    borderColor: themeStyle.colors.primary.default,\n    borderRadius: 5,\n  },\n  takeVideoButtonText: {\n    color: themeStyle.colors.grayscale.lowest,\n    fontWeight: \"900\",\n  },\n  text: {\n    fontSize: 18,\n    color: themeStyle.colors.highest,\n  },\n  errorText: {\n    fontSize: 12,\n    color: themeStyle.colors.error.default,\n  },\n  label: {\n    fontWeight: \"700\",\n  },\n  visibleTextInputs: {\n    fontSize: 15,\n    height: 45,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    borderWidth: 2,\n    borderColor: themeStyle.colors.primary.default,\n  },\n  textInputContainer: {\n    alignSelf: \"stretch\",\n    marginBottom: 20,\n  },\n  passwordInput: {\n    flex: 1,\n    fontSize: 15,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n  passwordInputContainer: {\n    flexDirection: \"row\",\n    height: 45,\n    borderRadius: 5,\n    padding: 5,\n    paddingHorizontal: 8,\n    borderWidth: 2,\n    borderColor: themeStyle.colors.primary.default,\n  },\n  passwordGuide: {\n    marginTop: 10,\n  },\n  eyeIcon: {\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n  },\n  signupText: {\n    padding: 20,\n    fontSize: 30,\n    color: themeStyle.colors.primary.default,\n    fontWeight: \"700\",\n  },\n  helpModalListItem: {\n    fontWeight: \"700\",\n    fontSize: 14,\n    color: themeStyle.colors.grayscale.lowest,\n  },\n});\nexport default React.memo(Step1Screen);\n","import React, { useState } from \"react\";\nimport { View, TouchableHighlight, Platform } from \"react-native\";\nimport themeStyle from \"../theme.style\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Image from \"./Image\";\n\nconst Avatar = ({\n  navigation,\n  userId,\n  size,\n  avatarUrl,\n  preventClicks,\n  hasBorder,\n  profileGifHeaders,\n  flipProfileVideo,\n  style,\n}) => {\n  const [loaded, setLoaded] = useState(false);\n\n  return (\n    <View\n      style={[\n        {\n          transform: [{ scaleX: flipProfileVideo ? -1 : 1 }],\n          alignSelf: \"flex-start\",\n          width: size,\n          height: size,\n          borderRadius: 50,\n          overflow: \"hidden\",\n          borderWidth: hasBorder ? 2 : 0,\n          borderColor: themeStyle.colors.primary.default,\n          backgroundColor: themeStyle.colors.grayscale.higher,\n        },\n        style && style,\n      ]}\n    >\n      {avatarUrl && !loaded ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            position: \"absolute\",\n            zIndex: 9,\n            backgroundColor: themeStyle.colors.grayscale.higher,\n          }}\n        >\n          <Ionicons\n            name=\"person-outline\"\n            size={36}\n            color={themeStyle.colors.grayscale.high}\n          />\n        </View>\n      ) : null}\n      {!preventClicks ? (\n        <TouchableHighlight\n          onPress={() => navigation.navigate(\"UserProfileScreen\", { userId })}\n          underlayColor={themeStyle.colors.grayscale.high}\n        >\n          {avatarUrl ? (\n            <Image\n              {...(Platform.OS === \"web\"\n                ? {\n                    webProps: {\n                      style: {\n                        borderRadius: 10,\n                        alignSelf: \"center\",\n                        width: size,\n                        height: size,\n                        objectFit: \"cover\",\n                      },\n                    },\n                  }\n                : {\n                    mobileProps: {\n                      style: {\n                        borderRadius: 10,\n                        alignSelf: \"center\",\n                        width: size,\n                        height: size,\n                      },\n                      resizeMode: \"cover\",\n                    },\n                  })}\n              source={{ uri: avatarUrl, headers: profileGifHeaders || {} }}\n              onLoad={() => setLoaded(true)}\n            />\n          ) : (\n            <View\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Ionicons\n                name=\"person-outline\"\n                size={36}\n                color={themeStyle.colors.grayscale.high}\n              />\n            </View>\n          )}\n        </TouchableHighlight>\n      ) : (\n        <View>\n          {avatarUrl ? (\n            <Image\n              source={{ uri: avatarUrl, headers: profileGifHeaders || {} }}\n              onLoad={() => setLoaded(true)}\n              {...(Platform.OS === \"web\"\n                ? {\n                    webProps: {\n                      style: {\n                        borderRadius: 10,\n                        alignSelf: \"center\",\n                        width: size || 50,\n                        height: size || 50,\n                        objectFit: \"cover\",\n                      },\n                    },\n                  }\n                : {\n                    mobileProps: {\n                      style: {\n                        borderRadius: 10,\n                        alignSelf: \"center\",\n                        width: size || 50,\n                        height: size || 50,\n                      },\n                      resizeMode: \"cover\",\n                    },\n                  })}\n            />\n          ) : (\n            <View\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Ionicons\n                name=\"person-outline\"\n                size={36}\n                color={themeStyle.colors.grayscale.high}\n              />\n            </View>\n          )}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default React.memo(Avatar);\n","import React from \"react\";\nimport { useState } from \"react\";\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  StyleSheet,\n  ActivityIndicator,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport Input from \"../../components/Input\";\nimport apiCall from \"../../helpers/apiCall\";\nimport themeStyle from \"../../theme.style\";\nimport validateEmail from \"../../helpers/validateEmail\";\n\nconst ForgotPasswordScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailSent, setEmailSent] = useState(false);\n  const [emailError, setEmailError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const createPasswordReset = async () => {\n    setEmailError(\"\");\n\n    if (!email) {\n      setEmailError(\"Please enter an email address\");\n    }\n\n    const emailValid = await validateEmail(email);\n\n    if (!emailValid) {\n      setEmailError(\"Please enter a valid email address\");\n    }\n    if (emailValid) {\n      setLoading(true);\n      const { success, response, message } = await apiCall(\n        \"POST\",\n        \"/user/password/reset\",\n        { email }\n      );\n      console.log(response, message);\n      setLoading(false);\n      if (success) {\n        setEmailSent(true);\n      }\n      if (!success && response?.found === false) {\n        setEmailError(\"A user does not exist with that email.\");\n        return;\n      }\n      if (!success) {\n        setEmailError(\n          \"An error occurred resetting your password. Please try again later.\"\n        );\n      }\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {!emailSent ? (\n        <ScrollView\n          contentContainerStyle={{\n            alignItems: \"center\",\n            padding: 20,\n            width: \"100%\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Text\n            style={{\n              textAlign: \"center\",\n              marginBottom: 20,\n              fontWeight: \"700\",\n              fontSize: 24,\n              color: themeStyle.colors.grayscale.lowest,\n            }}\n          >\n            Reset Password\n          </Text>\n          <Text\n            style={{\n              textAlign: \"center\",\n              fontWeight: \"700\",\n              fontSize: 16,\n              color: themeStyle.colors.grayscale.lowest,\n              marginHorizontal: 40,\n              marginBottom: 50,\n            }}\n          >\n            Enter the email address you used to register.\n          </Text>\n          <Input\n            setValue={setEmail}\n            value={email}\n            error={emailError}\n            placeholder=\"Email Address\"\n            onChangeText={(v) => setEmail(v)}\n          />\n          <View\n            style={{\n              alignItems: \"center\",\n              marginTop: 20,\n            }}\n          >\n            <TouchableOpacity onPress={() => createPasswordReset()}>\n              {loading ? (\n                <ActivityIndicator\n                  animating\n                  size=\"small\"\n                  color={themeStyle.colors.secondary.default}\n                />\n              ) : (\n                <Text\n                  style={{\n                    color: themeStyle.colors.secondary.default,\n                    fontSize: 16,\n                  }}\n                >\n                  Send Email\n                </Text>\n              )}\n            </TouchableOpacity>\n          </View>\n        </ScrollView>\n      ) : (\n        <View\n          style={{\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            padding: 20,\n            height: \"100%\",\n          }}\n        >\n          <View\n            style={{\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginBottom: 50,\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 20,\n                fontWeight: \"700\",\n                textAlign: \"center\",\n                marginBottom: 50,\n                color: themeStyle.colors.primary.default,\n              }}\n            >\n              Email sent!\n            </Text>\n            <Text style={{ color: themeStyle.colors.grayscale.lowest }}>\n              We&apos;ve sent an email to{\" \"}\n              <Text style={{ fontWeight: \"700\" }}>{email}</Text>\n            </Text>\n            <Text\n              style={{\n                fontSize: 12,\n                textAlign: \"center\",\n                color: themeStyle.colors.grayscale.lowest,\n              }}\n            >\n              Don&apos;t forget to check your spam folder :)\n            </Text>\n          </View>\n          <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n            <Text\n              style={{\n                marginBottom: 10,\n                color: themeStyle.colors.grayscale.lowest,\n              }}\n            >\n              Didn&apos;t get an email?\n            </Text>\n            <TouchableOpacity onPress={() => setEmailSent(false)}>\n              <Text\n                style={{\n                  color: themeStyle.colors.secondary.default,\n                  fontWeight: \"700\",\n                }}\n              >\n                Try again\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      )}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default ForgotPasswordScreen;\n","import React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport themeStyle from \"../../theme.style\";\nimport ConnectionFailedScreen from \"./ConnectionFailedScreen\";\n\n// main screen is connection failed but can add other utility screens here to show if needed.\nconst Stack = createNativeStackNavigator();\nconst UtilityScreens = () => (\n  <Stack.Navigator\n    screenOptions={{\n      headerStyle: {\n        elevation: 0,\n        backgroundColor: themeStyle.colors.grayscale.highest,\n      },\n      cardStyle: { backgroundColor: themeStyle.colors.grayscale.highest },\n    }}\n    initialRouteName=\"ConnectionFailedScreen\"\n  >\n    <Stack.Screen\n      name=\"ConnectionFailedScreen\"\n      options={{ headerShown: false }}\n      component={ConnectionFailedScreen}\n    />\n  </Stack.Navigator>\n);\nexport default UtilityScreens;\n","import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport themeStyle from \"../../theme.style\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nconst ConnectionFailedScreen = () => (\n  <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n    <Text\n      style={{\n        color: themeStyle.colors.grayscale.lowest,\n        textAlign: \"center\",\n        fontSize: 20,\n        marginHorizontal: 10,\n        marginBottom: 50,\n      }}\n    >\n      There seems to be a connection problem. Please try again later.\n    </Text>\n    <MaterialCommunityIcons\n      name=\"connection\"\n      size={100}\n      color={themeStyle.colors.primary.default}\n    />\n  </View>\n);\n\nexport default ConnectionFailedScreen;\n","import React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport MainTabStack from \"./MainTabStack\";\nimport UserProfileScreen from \"./SubScreens/UserProfileScreen\";\nimport MediaScreen from \"./SubScreens/MediaScreen\";\nimport ShareScreen from \"./SubScreens/ShareScreen\";\nimport CommentsScreen from \"./SubScreens/CommentsScreen\";\nimport CommentsRepliesScreen from \"./SubScreens/CommentRepliesScreen\";\nimport themeStyle from \"../../theme.style\";\nimport PostScreen from \"./SubScreens/PostScreen\";\nimport ChatScreen from \"./SubScreens/ChatScreen\";\nimport ChatListScreen from \"./SubScreens/ChatListScreen\";\nimport CreateChatScreen from \"./SubScreens/CreateChatScreen\";\nimport EditUserDetailsScreen from \"./SubScreens/EditUserDetailsScreen\";\nimport SettingsScreen from \"./SubScreens/SettingsScreen\";\nimport PrivacyPolicyScreen from \"./SubScreens/PrivacyPolicyScreen\";\nimport TermsOfUseScreen from \"./SubScreens/TermsOfUseScreen\";\nimport OtherUserContactsScreen from \"./SubScreens/OtherUserContactsScreen\";\nimport EditPostScreen from \"./SubScreens/EditPostScreen\";\nimport AccountScreen from \"./SubScreens/AccountScreen\";\nimport FollowersModeScreen from \"./SubScreens/FollowersModeScreen\";\nimport AccountVisibilityScreen from \"./SubScreens/AccountVisibilityScreen\";\nimport EmailVerificationScreen from \"./SubScreens/EmailVerificationScreen\";\nimport { Dimensions } from \"react-native\";\n\nconst Stack = createNativeStackNavigator();\n\nconst MainStack = () => {\n  const screenWidth = Dimensions.get(\"window\").width;\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: { elevation: 0, backgroundColor: \"red\" },\n        cardStyle: { backgroundColor: themeStyle.colors.grayscale.highest },\n        ...(screenWidth > 900 // Check this against tablets not using the web\n          ? {\n              contentStyle: {\n                maxWidth: 900,\n                justifyContent: \"center\",\n                width: \"100%\",\n                alignSelf: \"center\",\n              },\n            }\n          : {}),\n      }}\n      initialRouteName=\"MainTabStack\"\n    >\n      <Stack.Screen\n        options={{\n          headerShown: false,\n          contentStyle: {\n            maxWidth: screenWidth,\n          },\n        }}\n        name=\"MainTabStack\"\n        component={MainTabStack}\n      />\n      <Stack.Screen\n        options={{\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          contentStyle: {\n            maxWidth: screenWidth,\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n          title: \"\",\n        }}\n        name=\"UserProfileScreen\"\n        component={UserProfileScreen}\n      />\n      <Stack.Screen\n        options={{\n          headerShown: false,\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"MediaScreen\"\n        component={MediaScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Share\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n          contentStyle: {\n            maxWidth: screenWidth,\n          },\n        }}\n        name=\"ShareScreen\"\n        component={ShareScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Comments\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n          contentStyle: {\n            maxWidth: screenWidth,\n          },\n        }}\n        name=\"CommentsScreen\"\n        component={CommentsScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Replies\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n          contentStyle: {\n            maxWidth: screenWidth,\n          },\n        }}\n        name=\"CommentRepliesScreen\"\n        component={CommentsRepliesScreen}\n      />\n      <Stack.Screen\n        options={{\n          headerTintColor: themeStyle.colors.grayscale.lowest,\n          title: \"\",\n          headerShown: true,\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n          contentStyle: {\n            maxWidth: screenWidth,\n          },\n        }}\n        name=\"PostScreen\"\n        component={PostScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n          contentStyle: {\n            maxWidth: screenWidth,\n          },\n        }}\n        name=\"ChatScreen\"\n        component={ChatScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Chats\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"ChatListScreen\"\n        component={ChatListScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"New Chat\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"CreateChatScreen\"\n        component={CreateChatScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Edit Details\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"EditUserDetailsScreen\"\n        component={EditUserDetailsScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"My Account\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"AccountScreen\"\n        component={AccountScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Settings\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Privacy Policy\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"PrivacyPolicyScreen\"\n        component={PrivacyPolicyScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Terms Of Use\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n          contentStyle: {\n            maxWidth: screenWidth,\n          },\n        }}\n        name=\"TermsOfUseScreen\"\n        component={TermsOfUseScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"OtherUserContactsScreen\"\n        component={OtherUserContactsScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Edit post\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n          contentStyle: {\n            maxWidth: screenWidth,\n          },\n        }}\n        name=\"EditPostScreen\"\n        component={EditPostScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Followers Mode\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"FollowersModeScreen\"\n        component={FollowersModeScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Account Visibility\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"AccountVisibilityScreen\"\n        component={AccountVisibilityScreen}\n      />\n      <Stack.Screen\n        options={{\n          title: \"Email Verification\",\n          headerShown: true,\n          headerTintColor: themeStyle.colors.primary.default,\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n          headerStyle: {\n            backgroundColor: themeStyle.colors.grayscale.highest,\n          },\n        }}\n        name=\"EmailVerificationScreen\"\n        component={EmailVerificationScreen}\n      />\n    </Stack.Navigator>\n  );\n};\nexport default MainStack;\n","import React, { useEffect } from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport HomeScreen from \"./Home\";\nimport AddScreen from \"./Add\";\nimport ProfileScreen from \"./Profile\";\nimport SearchStack from \"./Search\";\nimport ContactsScreen from \"./Contacts\";\nimport themeStyle from \"../../../theme.style\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport webPersistUserData from \"../../../helpers/webPersistUserData\";\n\nconst Tab = createBottomTabNavigator();\n\nconst MainTabStack = () => {\n  const dispatch = useDispatch();\n\n  const cameraActivated = useSelector((state) => state.cameraActivated);\n\n  const getUserData = async () => {\n    const { success, response } = await apiCall(\"GET\", \"/user/data\");\n\n    if (success) {\n      dispatch({ type: \"SET_USER_DATA\", payload: response });\n      webPersistUserData(response);\n    }\n  };\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      (async () => {\n        await getUserData();\n      })();\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Home\"\n      detachInactiveScreens\n      screenOptions={({ route }) => ({\n        tabBarHideOnKeyboard: true,\n        contentStyle: {\n          backgroundColor: themeStyle.colors.grayscale.lowest,\n        },\n        tabBarActiveTintColor: themeStyle.colors.primary.default,\n        tabBarInactiveTintColor: themeStyle.colors.grayscale.lowest,\n        tabBarShowLabel: false,\n        tabBarStyle: [\n          {\n            display: cameraActivated.state ? \"none\" : \"flex\",\n            backgroundColor: themeStyle.colors.grayscale.highest,\n            borderTopWidth: 0.5,\n            borderTopColor: themeStyle.colors.grayscale.cardsOuter,\n          },\n          null,\n        ],\n\n        headerShown: false,\n        tabBarIcon: ({ color, size }) => {\n          let iconName;\n          if (route.name === \"Home\") {\n            iconName = \"home\";\n          } else if (route.name === \"Add\") {\n            iconName = \"add\";\n          } else if (route.name === \"Me\") {\n            iconName = \"happy\";\n          } else if (route.name === \"Search\") {\n            iconName = \"search\";\n          } else if (route.name === \"Contacts\") {\n            iconName = \"people\";\n          }\n\n          return (\n            <Ionicons\n              name={iconName}\n              size={route.name === \"Add\" ? 35 : size}\n              color={color}\n            />\n          );\n        },\n      })}\n    >\n      <Tab.Screen headerShown name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Search\" component={SearchStack} />\n      <Tab.Screen name=\"Add\" component={AddScreen} />\n      <Tab.Screen name=\"Contacts\" component={ContactsScreen} />\n      <Tab.Screen name=\"Me\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\nexport default MainTabStack;\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  RefreshControl,\n  TouchableOpacity,\n  ScrollView,\n  SafeAreaView,\n  Dimensions,\n  ActivityIndicator,\n  Platform,\n} from \"react-native\";\nimport { Feather, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Constants from \"expo-constants\";\nimport themeStyle from \"../../../../theme.style\";\nimport PostCard from \"../../../../components/PostCard\";\nimport apiCall from \"../../../../helpers/apiCall\";\nimport { useScrollToTop } from \"@react-navigation/native\";\nimport PostOptionsModal from \"../../../../components/PostOptionsModal\";\nimport HomeScreenHeader from \"./HomeScreenHeader\";\n// import * as FacebookAds from \"expo-ads-facebook\";\nimport {\n  RecyclerListView,\n  DataProvider,\n  LayoutProvider,\n} from \"recyclerlistview\";\n// import ContentLoader from \"../../../../components/ContentLoader\";\nimport PostCardLoader from \"../../../../components/ContentLoader/PostCard\";\n\nconst { statusBarHeight } = Constants;\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n  const newPostCreated = useSelector((state) => state.postCreated);\n  const canPlayFeedVideos = useSelector((state) => state.canPlayFeedVideos);\n\n  const [isFocussed, setFocussed] = useState(false);\n  const [feed, setFeed] = useState(null);\n  const [originalFeed, setOriginalFeed] = useState(null);\n  const [allPostsLoaded, setAllPostsLoaded] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [postIds, setPostIds] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [connectionsAsSenderOffset, setConnectionsAsSenderOffset] = useState(0);\n  const [connectionsAsReceiverOffset, setConnectionsAsReceiverOffset] =\n    useState(0);\n  const [loading, setLoading] = useState(false);\n  const [showPostOptions, setShowPostOptions] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [feedError, setFeedError] = useState(\"\");\n  const [currentVisible, setCurrentVisible] = useState(0);\n  const [prevVisible, setPrevVisible] = useState(0);\n  const navigation = useNavigation();\n  const listRef = useRef(null);\n  const [scrolling, setScrolling] = useState(false);\n  const [positionBeforeScroll, setPositionBeforeScroll] = useState(0);\n\n  const { height: screenHeight, width: screenWidth } = Dimensions.get(\"window\");\n\n  const maxWidth = Math.min(screenWidth, 900);\n\n  const mobileSpecificListProps =\n    Platform.OS !== \"web\"\n      ? {\n          renderAheadOffset: screenHeight,\n        }\n      : {};\n\n  useScrollToTop(\n    useRef({\n      scrollToTop: () => {\n        setCurrentVisible(0);\n        listRef.current?.scrollToOffset({ offset: 2000 });\n      },\n    })\n  );\n\n  // const adsManager = new FacebookAds.NativeAdsManager(\n  //   \"3130380047243958_3167702336845062\",\n  //   10\n  // );\n\n  const calculateOffsets = async () => {\n    if (!originalFeed?.length) {\n      return {};\n    }\n    let i = 0;\n\n    let friendsInterestsOffset = 0;\n    while (i < originalFeed.length) {\n      if (originalFeed[i]?.likedBy) {\n        friendsInterestsOffset += 1;\n      }\n      i += 1;\n    }\n\n    return {\n      friendsInterestsOffset,\n      feedTimelineOffset: originalFeed.length - friendsInterestsOffset,\n      connectionsAsSenderOffset: connectionsAsSenderOffset,\n      connectionsAsReceiverOffset: connectionsAsReceiverOffset,\n    };\n  };\n\n  const renderFooter = () => (\n    <View style={{ marginVertical: 20 }}>\n      {allPostsLoaded ? (\n        <Text\n          style={{\n            color: themeStyle.colors.grayscale.lowest,\n            textAlign: \"center\",\n          }}\n        >\n          That&apos;s all for now.\n        </Text>\n      ) : (\n        <ActivityIndicator animating size={\"large\"} />\n      )}\n    </View>\n  );\n\n  const handleNavigation = (post) => {\n    navigation.navigate(\"MediaScreen\", { post });\n  };\n\n  const reportPost = async (reasonIndex) => {\n    setLoading(true);\n    const { success } = await apiCall(\"POST\", \"/posts/report\", {\n      postId: showPostOptions?._id,\n      reason: reasonIndex,\n    });\n    setLoading(false);\n    if (!success) {\n      setError(\"An error occurred.\");\n    } else {\n      setShowPostOptions(null);\n    }\n  };\n\n  const editPost = () => navigation.navigate(\"Add\");\n\n  const deletePost = async () => {\n    const { success } = await apiCall(\n      \"DELETE\",\n      `/posts/remove/${showPostOptions?._id}`\n    );\n    if (success) {\n      const newPosts = feed.map((post) => {\n        if (post._id === showPostOptions?._id) {\n          return {\n            ...post,\n            deleted: true,\n            customKey: `${post._id}-deleted}`,\n          };\n        }\n        return post;\n      });\n      setFeed(newPosts);\n      setShowPostOptions(null);\n    }\n  };\n\n  const getUserFeed = async () => {\n    if (!allPostsLoaded && !refreshing && !loading) {\n      const offsets = await calculateOffsets();\n      setLoading(true);\n      const { success, response } = await apiCall(\n        \"POST\",\n        \"/user/feed\",\n        offsets\n      );\n      setLoading(false);\n      if (success) {\n        if (!response.feed?.length || response.feed.length === 1) {\n          setAllPostsLoaded(true);\n        } else {\n          const noDuplicatesResponse = response.feed.filter((post) => {\n            if (!postIds.includes(post._id.toString())) return post;\n          });\n          setOriginalFeed([...originalFeed, ...(response.feed || [])]);\n          setFeed([...feed, ...noDuplicatesResponse]);\n          const ids = [\n            ...postIds,\n            ...response.feed.map((post) => post._id.toString()),\n          ];\n          setPostIds(ids);\n          // setFeed([...feed, ...(response.feed || [])]);\n          // dataProvider.cloneWithRows([\n          //   ...feed,\n          //   ...response.feed.filter((post) => {\n          //     if (!postIds.includes(post._id.toString())) return post;\n          //   }),\n          // ]);\n          setConnectionsAsSenderOffset(response.connectionsAsSenderOffset);\n          setConnectionsAsReceiverOffset(response.connectionsAsReceiverOffset);\n        }\n      } else if (feed.length) {\n        setFeedError(\n          \"Sorry... there was a problem loading more posts, please try again later.\"\n        );\n        setAllPostsLoaded(true);\n      }\n    }\n  };\n\n  const onRefresh = useCallback(async () => {\n    setAllPostsLoaded(false);\n    setRefreshing(true);\n    const { success, response } = await apiCall(\"POST\", \"/user/feed\");\n    const ids = [\n      ...postIds,\n      ...response.feed.map((post) => post._id.toString()),\n    ];\n    setRefreshing(false);\n    if (success) {\n      setPostIds(ids);\n      setConnectionsAsReceiverOffset(0);\n      setConnectionsAsSenderOffset(0);\n      setFeed(response.feed);\n      setOriginalFeed(response.feed);\n    }\n  }, []);\n\n  const handleReaction = async (post) => {\n    const oldFeed = feed || originalFeed;\n\n    if (post.liked) {\n      setFeed((prev) => {\n        return prev.map((p) => {\n          if (p._id === post._id) {\n            return {\n              ...p,\n              liked: false,\n              likes: post.likes ? post.likes - 1 : post.likes,\n            };\n          }\n          return p;\n        });\n      });\n      const { success } = await apiCall(\n        \"GET\",\n        `/posts/like/remove/${post._id}`\n      );\n      if (!success) {\n        setFeed(oldFeed);\n      }\n\n      return;\n    }\n\n    setFeed((prev) => {\n      return prev.map((p) => {\n        if (p._id === post._id) {\n          return {\n            ...p,\n            liked: true,\n            likes: typeof post.likes === \"number\" ? post.likes + 1 : post.likes,\n          };\n        }\n        return p;\n      });\n    });\n    const { success } = await apiCall(\"GET\", `/posts/like/add/${post._id}`);\n    if (!success) {\n      setFeed(oldFeed);\n    }\n  };\n\n  const handleUnMute = (state) => {\n    dispatch({ type: \"SET_GLOBAL_UNMUTE_VIDEOS\", payload: state });\n\n    // setFeed((prevFeed) => {\n    //   return prevFeed.map((post) => ({ ...post, unMute: state }));\n    // });\n  };\n  const rowRenderer = useCallback(\n    (_, item, index, extendedState) => {\n      return (\n        <PostCard\n          setShowPostOptions={triggerOptionsModal}\n          loadingMore={loading && index === feed.length - 1}\n          isVisible={\n            extendedState.currentVisible === index &&\n            !extendedState.scrolling &&\n            isFocussed\n          }\n          setUnMuteVideos={handleUnMute}\n          currentVisible={extendedState.currentVisible}\n          index={index}\n          post={item}\n          screenHeight={screenHeight}\n          screenWidth={screenWidth}\n          handleReaction={handleReaction}\n          handleNavigation={handleNavigation}\n        />\n      );\n    },\n    [isFocussed]\n  );\n  const triggerOptionsModal = (post) => {\n    setError(\"\");\n    setShowPostOptions(post);\n  };\n\n  useEffect(() => {\n    navigation.addListener(\"focus\", async () => {\n      setFocussed(true);\n      const { success, response } = await apiCall(\"GET\", \"/user/data\");\n      if (success) {\n        setUserData(response);\n      }\n    });\n    navigation.addListener(\"blur\", async () => {\n      setFocussed(false);\n    });\n    return () => {\n      navigation.removeListener(\"focus\");\n      navigation.removeListener(\"blur\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!feed) return;\n    const ids = [...postIds, ...feed.map((post) => post._id.toString())];\n    setPostIds(ids);\n\n    if (newPostCreated.state) {\n      setTimeout(() => {\n        dispatch({ type: \"SET_POST_CREATED\", payload: false });\n      }, 3000);\n    }\n  }, [newPostCreated, feed]);\n\n  let dataProvider = new DataProvider(\n    (r1, r2) => {\n      return (\n        r1._id !== r2._id || r1.liked !== r2.liked || r1.likes !== r2.likes\n      );\n    }\n    // (index) => `${postIds[index]}`\n  ).cloneWithRows(feed || []);\n\n  const layoutProvider = useRef(\n    new LayoutProvider(\n      () => 0,\n      (type, dim) => {\n        dim.width = maxWidth;\n        dim.height = 490;\n      }\n    )\n  ).current;\n\n  const _applyWindowCorrection = (offset, offsetY, windowCorrection) => {\n    // This may need to be calculated based on screen height but works for now\n    windowCorrection.startCorrection = 220;\n  };\n\n  useEffect(() => {\n    (async () => {\n      const { success, response } = await apiCall(\"POST\", \"/user/feed\");\n\n      if (success) {\n        setFeed(response.feed);\n        setOriginalFeed(response.feed);\n      }\n    })();\n  }, []);\n\n  if (!feed) {\n    // if (feed) {\n    return (\n      <SafeAreaView\n        style={{\n          flex: 1,\n          backgroundColor: themeStyle.colors.grayscale.cardsOuter,\n        }}\n      >\n        <HomeScreenHeader navigation={navigation} userData={userData} />\n        <View\n          style={{\n            backgroundColor: themeStyle.colors.grayscale.cardsOuter,\n            alignItems: \"center\",\n          }}\n        >\n          <PostCardLoader hasImage screenWidth={maxWidth} />\n          <PostCardLoader hasImage screenWidth={maxWidth} />\n          <PostCardLoader hasImage screenWidth={maxWidth} />\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  if (feed?.length) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={{ flex: 1 }}>\n          <HomeScreenHeader navigation={navigation} userData={userData} />\n          {newPostCreated.state ? (\n            <View style={styles.newPostPill}>\n              <Text style={{ color: themeStyle.colors.white }}>\n                Post {newPostCreated.state.type}\n              </Text>\n            </View>\n          ) : null}\n          <RecyclerListView\n            {...mobileSpecificListProps}\n            initialOffset={Platform.OS === \"web\" ? 1 : 0} // prevents broken layout on web where everything is squished on initial load\n            ref={listRef}\n            applyWindowCorrection={_applyWindowCorrection}\n            style={{ minHeight: 1, minWidth: 1 }}\n            dataProvider={dataProvider}\n            layoutProvider={layoutProvider}\n            onEndReached={() => getUserFeed()}\n            onEndReachedThreshold={0.5}\n            // initialRenderIndex={currentVisible + 1}\n            extendedState={{\n              currentVisible: canPlayFeedVideos ? currentVisible : null,\n              scrolling: canPlayFeedVideos ? scrolling : null,\n            }}\n            rowRenderer={rowRenderer}\n            forceNonDeterministicRendering\n            renderFooter={renderFooter}\n            onScroll={(event) => {\n              if (\n                !scrolling &&\n                Math.abs(\n                  event.nativeEvent.contentOffset.y - positionBeforeScroll\n                ) > 300 &&\n                currentVisible !== 0\n                // if they scroll far enough, enable scroll to pause video\n              ) {\n                setScrolling(true);\n                setPositionBeforeScroll(event.nativeEvent.contentOffset.y);\n              }\n            }}\n            onVisibleIndicesChanged={async (items) => {\n              if (typeof items[0] === \"number\" && items[0] !== currentVisible) {\n                setCurrentVisible(items[0]);\n              }\n            }}\n            scrollViewProps={{\n              contentContainerStyle: {\n                maxWidth: 900,\n                alignSelf: \"center\",\n              },\n              removeClippedSubviews: true,\n              onMomentumScrollEnd: () => {\n                if (prevVisible !== currentVisible) {\n                  setScrolling(false);\n                }\n              },\n              refreshControl: (\n                <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n              ),\n            }}\n          />\n        </View>\n\n        <PostOptionsModal\n          showOptions={!!showPostOptions}\n          setShowPostOptions={setShowPostOptions}\n          reportPost={reportPost}\n          deletePost={deletePost}\n          editPost={editPost}\n          belongsToUser={false}\n          error={error}\n        />\n      </SafeAreaView>\n    );\n  }\n  return (\n    <ScrollView\n      contentContainerStyle={{ flex: 1 }}\n      refreshControl={\n        <RefreshControl onRefresh={onRefresh} refreshing={refreshing} />\n      }\n    >\n      <SafeAreaView>\n        <HomeScreenHeader userData={userData} navigation={navigation} />\n        {newPostCreated.state ? (\n          <Text style={styles.newPostPill}>\n            Post {newPostCreated.state.type}\n          </Text>\n        ) : null}\n        {userData.profileVideoUrl ? (\n          <View\n            style={{\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100%\",\n            }}\n          >\n            <Feather\n              name=\"coffee\"\n              size={100}\n              color={themeStyle.colors.grayscale.high}\n            />\n            <View\n              style={{\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginTop: 20,\n              }}\n            >\n              <Text\n                style={{\n                  fontWeight: \"700\",\n                  color: themeStyle.colors.grayscale.lowest,\n                }}\n              >\n                It&apos;s quiet here...\n              </Text>\n              <Text\n                style={{\n                  marginBottom: 20,\n                  fontWeight: \"700\",\n                  color: themeStyle.colors.grayscale.lowest,\n                }}\n              >\n                Try adding some people.\n              </Text>\n              <TouchableOpacity onPress={() => navigation.navigate(\"Search\")}>\n                <View\n                  style={{\n                    paddingVertical: 5,\n                    paddingHorizontal: 10,\n                    borderWidth: 1,\n                    borderColor: themeStyle.colors.secondary.default,\n                    borderRadius: 5,\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: themeStyle.colors.grayscale.lowest,\n                    }}\n                  >\n                    Search\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n          </View>\n        ) : (\n          <View\n            style={{\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100%\",\n            }}\n          >\n            <MaterialCommunityIcons\n              name=\"account-alert-outline\"\n              size={150}\n              color={themeStyle.colors.grayscale.high}\n            />\n            <View\n              style={{\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginTop: 20,\n              }}\n            >\n              <Text\n                style={{\n                  fontWeight: \"700\",\n                  marginBottom: 20,\n                  color: themeStyle.colors.grayscale.lowest,\n                  width: 250,\n                  textAlign: \"center\",\n                }}\n              >\n                Complete your profile by adding a profile video.\n              </Text>\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"EditUserDetailsScreen\")}\n              >\n                <View\n                  style={{\n                    paddingVertical: 5,\n                    paddingHorizontal: 10,\n                    backgroundColor: themeStyle.colors.secondary.default,\n                    borderRadius: 5,\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: themeStyle.colors.white,\n                    }}\n                  >\n                    Complete profile\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n      </SafeAreaView>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  newPostPill: {\n    zIndex: 3, // works on ios\n    elevation: 3, // works on android\n    backgroundColor: themeStyle.colors.primary.default,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderRadius: 20,\n    alignSelf: \"center\",\n    position: \"absolute\",\n    marginTop: statusBarHeight + 30,\n    color: themeStyle.colors.white,\n  },\n});\n\nexport default HomeScreen;\n","import React from \"react\";\nimport { Text, View, StyleSheet } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Avatar from \"../Avatar\";\nimport themeStyle from \"../../theme.style\";\n\nconst PostAuthor = ({ author }) => {\n  const navigation = useNavigation();\n\n  return (\n    <View style={[styles.postAuthorContainer]}>\n      <Avatar\n        navigation={navigation}\n        userId={author._id}\n        size={50}\n        avatarUrl={author.profileGifUrl}\n        profileGifHeaders={author.profileGifHeaders}\n        flipProfileVideo={author.flipProfileVideo}\n      />\n      <View\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginLeft: 20,\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{\n            fontWeight: \"700\",\n            maxWidth: 200,\n            color: themeStyle.colors.grayscale.lowest,\n          }}\n        >\n          {author.username}\n        </Text>\n        <Text\n          style={{\n            maxWidth: 200,\n            color: themeStyle.colors.grayscale.lowest,\n          }}\n          numberOfLines={1}\n        >\n          {author.firstName} {author.lastName}\n        </Text>\n        {author.jobTitle && (\n          <Text\n            numberOfLines={1}\n            style={{\n              color: themeStyle.colors.grayscale.low,\n              maxWidth: 200,\n            }}\n          >\n            {author.jobTitle}\n          </Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  postAuthorContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: 5,\n    borderColor: themeStyle.colors.grayscale.low,\n  },\n});\n\nexport default React.memo(PostAuthor);\n","import React, { useRef } from \"react\";\nimport { Text, View, TouchableOpacity } from \"react-native\";\nimport {\n  MaterialCommunityIcons,\n  FontAwesome,\n  Ionicons,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport themeStyle from \"../../theme.style\";\nimport AnimatedLottieView from \"lottie-react-native\";\nimport PostAge from \"../PostAge\";\nconst Actions = ({ post, handleReaction, navigation }) => {\n  const lottieRef = useRef(null);\n\n  return (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flex: 1,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          {!post.belongsToUser ? (\n            <TouchableOpacity\n              onPress={() => {\n                if (!post.liked) {\n                  lottieRef?.current?.play(15, 1000);\n                }\n                handleReaction(post);\n              }}\n              style={{\n                width: 48,\n                height: 48,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {post.liked ? (\n                <MaterialIcons\n                  name={\"thumb-up\"}\n                  size={22}\n                  color={themeStyle.colors.secondary.default}\n                />\n              ) : (\n                <MaterialCommunityIcons\n                  name={\"thumb-up-outline\"}\n                  size={22}\n                  color={themeStyle.colors.grayscale.lowest}\n                />\n              )}\n            </TouchableOpacity>\n          ) : null}\n          <TouchableOpacity\n            onPress={() =>\n              navigation.navigate(\"CommentsScreen\", {\n                postId: post._id,\n              })\n            }\n            style={{\n              width: 48,\n              height: 48,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <FontAwesome\n              name=\"comment-o\"\n              size={22}\n              color={themeStyle.colors.grayscale.lowest}\n            />\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity\n          onPress={() =>\n            navigation.navigate(\"ShareScreen\", {\n              prevScreen: \"Home\",\n              post: post.repostPostObj || post,\n            })\n          }\n          style={{\n            width: 48,\n            height: 48,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginHorizontal: 5,\n            justifySelf: \"flex-end\",\n          }}\n        >\n          <Ionicons\n            name=\"arrow-redo-outline\"\n            size={22}\n            color={themeStyle.colors.grayscale.lowest}\n          />\n        </TouchableOpacity>\n      </View>\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          marginTop: 5,\n        }}\n      >\n        {post.likedBy ? (\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontSize: 12,\n              marginHorizontal: 10,\n              marginVertical: 5,\n              flex: 1,\n            }}\n          >\n            Liked by{\" \"}\n            <Text\n              style={{\n                fontWeight: \"700\",\n                color: themeStyle.colors.grayscale.lowest,\n              }}\n              onPress={() =>\n                navigation.navigate(\"UserProfileScreen\", {\n                  userId: post.likedBy._id,\n                })\n              }\n            >\n              {post.likedBy.firstName} {post.likedBy.lastName}{\" \"}\n            </Text>\n            {post.likes > 1 ? `and ${post.likes - 1} others` : \"\"}\n          </Text>\n        ) : (\n          <Text\n            style={{\n              color: themeStyle.colors.grayscale.lowest,\n              fontSize: 12,\n              marginHorizontal: 10,\n              marginVertical: 5,\n              flexWrap: \"wrap\",\n              flex: 1,\n            }}\n          >\n            {post.likes} likes\n          </Text>\n        )}\n        {post.numberOfComments ? (\n          <TouchableOpacity\n            style={{ height: 30, justifyContent: \"center\" }}\n            onPress={() =>\n              navigation.navigate(\"CommentsScreen\", {\n                postId: post._id,\n              })\n            }\n          >\n            <Text\n              style={{\n                color: themeStyle.colors.grayscale.lower,\n                fontSize: 12,\n                marginHorizontal: 10,\n                fontWeight: \"700\",\n              }}\n            >\n              View {post.numberOfComments}{\" \"}\n              {post.numberOfComments > 1 ? \"comments\" : \"comment\"}\n            </Text>\n          </TouchableOpacity>\n        ) : null}\n      </View>\n      <PostAge age={post.age} />\n    </View>\n  );\n};\n\nexport default React.memo(\n  Actions,\n  (prevProps, nextProps) => prevProps.post === nextProps.post\n);\n","module.exports = __webpack_public_path__ + \"static/media/via_tenor_logo_blue.f119d1eb.png\";","import React from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StatusBar,\n  useColorScheme,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport themeStyle from \"../../../../theme.style\";\nimport Logo from \"../../../../Logo\";\nconst HomeScreenHeader = ({ userData, navigation }) => {\n  const colorSchema = useColorScheme();\n\n  return (\n    <View>\n      <StatusBar\n        backgroundColor={themeStyle.colors.black}\n        barStyle=\"light-content\"\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          height: 48,\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          backgroundColor:\n            colorSchema === \"dark\"\n              ? themeStyle.colors.grayscale.highest\n              : themeStyle.colors.grayscale.higher,\n          borderBottomWidth: 1,\n          borderBottomColor: themeStyle.colors.grayscale.lowest,\n        }}\n      >\n        <View style={{ marginHorizontal: 20 }}>\n          <Logo fill={themeStyle.colors.grayscale.lowest} />\n        </View>\n        <TouchableOpacity\n          style={{\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          onPress={() => navigation.navigate(\"ChatListScreen\")}\n        >\n          <View style={{ flexDirection: \"row\" }}>\n            <Ionicons\n              name=\"paper-plane-outline\"\n              size={24}\n              color={themeStyle.colors.grayscale.lowest}\n              style={{ marginRight: 22, paddingVertical: 10 }}\n            />\n            {userData?.unreadChatsCount ? (\n              <View\n                style={{\n                  backgroundColor: themeStyle.colors.primary.default,\n                  borderRadius: 100,\n                  minWidth: 20,\n                  height: 20,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginRight: -5,\n                  zIndex: 10,\n                  paddingHorizontal: 5,\n                  position: \"absolute\",\n                  left: 15,\n                  top: 0,\n                }}\n              >\n                <Text\n                  style={{\n                    color: themeStyle.colors.white,\n                    textAlign: \"center\",\n                    fontSize: 12,\n                    maxWidth: 50,\n                  }}\n                  numberOfLines={1}\n                >\n                  {userData.unreadChatsCount >= 10\n                    ? \"10+\"\n                    : userData.unreadChatsCount}\n                </Text>\n              </View>\n            ) : null}\n          </View>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default React.memo(\n  HomeScreenHeader,\n  (prevProps, nextProps) => prevProps.userData === nextProps.userData\n);\n","import ContentLoader, { Circle, Rect } from \"react-content-loader/native\";\nimport { View } from \"react-native\";\nimport themeStyle from \"../../theme.style\";\n\nconst PostCardLoader = ({ hasImage, screenWidth }) => (\n  <View\n    style={{\n      backgroundColor: themeStyle.colors.grayscale.cards,\n      marginVertical: 2,\n    }}\n  >\n    <ContentLoader\n      backgroundColor={themeStyle.colors.grayscale.higher}\n      foregroundColor={themeStyle.colors.grayscale.high}\n      viewBox={`0 0 ${screenWidth} ${screenWidth + 200}`}\n      width={screenWidth}\n      height={screenWidth + 200}\n    >\n      <Circle cx=\"31\" cy=\"31\" r=\"25\" />\n      <Rect x=\"75\" y=\"18\" rx=\"2\" ry=\"2\" width=\"140\" height=\"10\" />\n      <Rect x=\"75\" y=\"34\" rx=\"2\" ry=\"2\" width=\"140\" height=\"10\" />\n      {hasImage ? (\n        <Rect\n          x=\"0\"\n          y=\"60\"\n          rx=\"2\"\n          ry=\"2\"\n          width={`${screenWidth}`}\n          height={`${screenWidth}`}\n        />\n      ) : null}\n      <Circle cx=\"20\" cy={`${screenWidth + 80}`} r=\"13\" />\n      <Circle cx=\"60\" cy={`${screenWidth + 80}`} r=\"13\" />\n      <Rect\n        x=\"5\"\n        y={`${screenWidth + 120}`}\n        rx=\"5\"\n        ry=\"5\"\n        width={`${screenWidth - 10}`}\n        height=\"10\"\n      />\n      <Rect\n        x=\"5\"\n        y={`${screenWidth + 140}`}\n        rx=\"5\"\n        ry=\"5\"\n        width={`${screenWidth - 10}`}\n        height=\"10\"\n      />\n      <Rect\n        x=\"5\"\n        y={`${screenWidth + 160}`}\n        rx=\"5\"\n        ry=\"5\"\n        width={`${screenWidth - 50}`}\n        height=\"10\"\n      />\n    </ContentLoader>\n  </View>\n);\n\nexport default PostCardLoader;\n","import React, { Fragment, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  ActivityIndicator,\n  TouchableOpacity,\n  Platform,\n  Dimensions,\n  KeyboardAvoidingView,\n  Alert,\n} from \"react-native\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\nimport { useDispatch } from \"react-redux\";\nimport themeStyle from \"../../../theme.style\";\nimport apiCall from \"../../../helpers/apiCall\";\nimport CameraStandard from \"../../../components/CameraStandard\";\nimport ImageWithCache from \"../../../components/ImageWithCache\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { getInfoAsync } from \"expo-file-system\";\nimport {\n  Video as VideoCompress,\n  Image as ImageCompress,\n  backgroundUpload as compressorUpload,\n} from \"react-native-compressor\";\nimport VideoPlayer from \"expo-video-player\";\nimport { AntDesign, MaterialIcons } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { getThumbnailAsync } from \"expo-video-thumbnails\";\nimport { StatusBar } from \"expo-status-bar\";\nimport GifModal from \"../../../components/GifModal\";\nimport openAppSettings from \"../../../helpers/openAppSettings\";\nimport backgroundUpload from \"../../../helpers/backgroundUpload\";\nimport { gestureHandlerRootHOC } from \"react-native-gesture-handler\";\nimport { Image } from \"react-native\";\n\nconst AddScreen = () => {\n  const isFocused = useIsFocused();\n  const [postBody, setPostBody] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [file, setFile] = useState({});\n  const [cameraActive, setCameraActive] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const [showMediaSizeError, setShowMediaSizeError] = useState(false);\n  const [showGifsModal, setShowGifsModal] = useState(false);\n  const [gif, setGif] = useState(\"\");\n  const [height, setHeight] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [thumbnail, setThumbnail] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  const { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\n\n  const dispatch = useDispatch();\n  const createPostData = async () => {\n    let postData = {};\n    if (postBody) {\n      // upload any text body if there is an\n      postData.postBody = postBody;\n    }\n    if (gif) {\n      // if there's a gif, skip everything and just upload the gif\n      postData.gif = gif;\n      return postData;\n    }\n    if (file.uri) {\n      // if there's a file, determine if compression is required\n      const { type, name, uri, isSelfie } = file;\n      if (type.split(\"/\")[0] === \"video\") {\n        ///here, need to upload figure out how to upload thumbnails\n\n        // just adds thumbnail for videos. We add the rest of the media later.\n        const thumbnailUri = await generateThumbnail(uri);\n        const thumbnailFormat = thumbnailUri.split(\".\").pop();\n\n        // get signed url for uploading thumbnail\n        const { response, success } = await apiCall(\n          \"POST\",\n          \"/files/signed-upload-url\",\n          { filename: `mediaThumbnail.${thumbnailFormat}` }\n        );\n        if (!success) {\n          setError(\n            \"Sorry, we could not upload the selected media. Please try again later.\"\n          );\n          return;\n        }\n        postData.mimetype = thumbnailFormat;\n        postData.mediaKey = response.fileKey; // This is the thumbnail. We send this to backend which saves it as the thumbnailkey for this post,\n        postData.mediaType = \"video\";\n        postData.mediaIsSelfie = isSelfie || false;\n        postData.height = height;\n        postData.width = width;\n\n        await backgroundUpload({\n          // TODO: try axios here\n          filePath:\n            Platform.OS == \"android\"\n              ? thumbnailUri.replace(\"file://\", \"\")\n              : thumbnailUri,\n          url: response.signedUrl,\n        });\n      } else {\n        const mediaInfo = await getInfoAsync(uri);\n        const mediaSizeInMb = mediaInfo?.size / 100000;\n\n        const format = uri.split(\".\").pop();\n        await ImageCompress.compress(\n          uri,\n          {\n            compressionMethod: \"auto\",\n            minimumFileSizeForCompress: 3,\n          },\n          (progress) => {\n            console.log({ compression: progress });\n          }\n        );\n        if (mediaSizeInMb >= 100) {\n          return null;\n        }\n        const { response, success } = await apiCall(\n          \"POST\",\n          \"/files/signed-upload-url\",\n          { filename: `media.${format}` }\n        );\n        if (!success) {\n          setError(\n            \"Sorry, we could not upload the selected media. Please try again later.\"\n          );\n          return;\n        }\n        postData.height = height;\n        postData.width = width;\n        postData.mimetype = format;\n        postData.mediaKey = response.fileKey;\n        postData.mediaType = \"image\";\n        postData.mediaIsSelfie = isSelfie || false;\n        await backgroundUpload({\n          // TODO: try axios here\n          filePath: Platform.OS == \"android\" ? uri.replace(\"file://\", \"\") : uri,\n          url: response.signedUrl,\n        });\n      }\n    }\n\n    return postData;\n  };\n\n  const generateThumbnail = async (path) => {\n    try {\n      const { uri } = await getThumbnailAsync(path || file.uri, {\n        time: 0,\n        quality: 0.5,\n      });\n      return uri;\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  const handlePostCreation = async () => {\n    setLoading(true);\n    const postData = await createPostData();\n\n    if (!postData) return null;\n    const { success, response, message } = await apiCall(\n      \"POST\",\n      \"/posts/new\",\n      postData\n    );\n    setLoading(false);\n    if (success) {\n      setThumbnail(\"\");\n      setGif(\"\");\n      return response.post;\n    } else {\n      setLoading(false);\n      setError(\n        \"An error occurred creating your post. Please try again, or check your connection.\"\n      );\n      return;\n    }\n  };\n\n  const handleVideoUpload = async (compressedUrl, post) => {\n    const { response: signedData, success } = await apiCall(\n      \"POST\",\n      \"/files/signed-upload-url\",\n      { filename: `media.${compressedUrl.split(\".\").pop()}` }\n    );\n    if (!success) {\n      setError(\n        \"Sorry, we could not upload the selected media. Please try again later.\"\n      );\n      return;\n    }\n    const filePath = compressedUrl\n      ? Platform.OS == \"android\"\n        ? compressedUrl?.replace(\"file://\", \"/\")\n        : compressedUrl\n      : Platform.OS == \"android\"\n      ? file?.uri.replace(\"file://\", \"\")\n      : file?.uri;\n\n    // await uploadAsync(signedData.signedUrl, filePath, {\n    //   httpMethod: \"PUT\",\n    //   fieldName: \"file\",\n    //   // Below are options only supported on Android\n    // })\n    //   .then(async () => {\n    //     const { response, success } = await apiCall(\"POST\", \"/posts/new\", {\n    //       postId: post?._id,\n    //       mediaType: \"video\",\n    //       mediaKey: signedData.fileKey,\n    //     });\n    //     if (!success) {\n    //       setError(\n    //         \"Sorry, we could not upload the selected media. Please try again later.\"\n    //       );\n    //     }\n    //   })\n    //   .catch((err) => console.error(err));\n\n    const headers = {};\n\n    await compressorUpload(signedData.signedUrl, filePath, {\n      httpMethod: \"PUT\",\n      headers,\n    }).then(async () => {\n      const { success } = await apiCall(\"POST\", \"/posts/new\", {\n        postId: post?._id,\n        mediaType: \"video\",\n        mediaKey: signedData.fileKey,\n      });\n      if (!success) {\n        setError(\n          \"Sorry, we could not upload the selected media. Please try again later.\"\n        );\n      }\n    });\n\n    // await backgroundUpload({\n    //   filePath,\n    //   url: signedData.signedUrl,\n    //   failureRoute: `/posts/fail/${post?._id}`,\n    //   onComplete: async () => {\n    //     const { response, success } = await apiCall(\"POST\", \"/posts/new\", {\n    //       postId: post?._id,\n    //       mediaType: \"video\",\n    //       mediaKey: signedData.fileKey,\n    //     });\n    //     if (!success) {\n    //       setError(\n    //         \"Sorry, we could not upload the selected media. Please try again later.\"\n    //       );\n    //     }\n    //   },\n    // });\n  };\n\n  const handleLargeFileCompression = async (post) => {\n    await VideoCompress.compress(\n      file.uri,\n      {\n        compressionMethod: \"auto\",\n        minimumFileSizeForCompress: 10,\n      },\n      (progress) => {\n        console.log({ compression: progress });\n      }\n    )\n      .then(async (compressedUrl) => {\n        await handleVideoUpload(compressedUrl, post);\n      })\n      .catch(async (e) => {\n        // await apiCall(\"GET\", `/posts/fail/${post?._id}`);\n\n        console.log(e);\n      }); // TODO:maybe show notification here?\n  };\n\n  const createPost = async () => {\n    setError(\"\");\n    await handlePostCreation().then(async (post) => {\n      if (!post) return;\n      setPostBody(\"\");\n      setFile(\"\");\n      if (file.type?.split(\"/\")[0] === \"video\") {\n        dispatch({\n          type: \"SET_POST_CREATED\",\n          payload: { posted: true, type: \"created\" },\n        });\n        navigation.navigate(\"Home\");\n        await handleLargeFileCompression(post);\n      } else {\n        dispatch({\n          type: \"SET_POST_CREATED\",\n          payload: { posted: true, type: \"created\" },\n        });\n        navigation.navigate(\"Home\");\n      }\n    });\n  };\n\n  const pickMedia = async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      Alert.alert(\n        \"Unable access camera roll\",\n        \"Please enable storage permissions to post media from your local files.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Settings\",\n            onPress: () => openAppSettings(),\n          },\n        ]\n      );\n    }\n\n    if (status === \"granted\") {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        quality: 0.3,\n        allowsMultipleSelection: false,\n      });\n      setGif(\"\");\n      setThumbnail(\"\");\n      if (!result.cancelled) {\n        const mediaInfo = await getInfoAsync(result.uri);\n        const mediaSizeInMb = mediaInfo.size / 1000000;\n        if (mediaSizeInMb > 100) {\n          setShowMediaSizeError(true);\n          setFile({ uri: \"none\" });\n          setLoading(false);\n          return;\n        }\n        if (result.type.split(\"/\")[0] === \"video\") {\n          const thumbnailUri = await generateThumbnail(result.uri);\n          setThumbnail(thumbnailUri);\n        }\n        setShowMediaSizeError(false);\n        setFile({ ...result, ...mediaInfo });\n      }\n    }\n  };\n\n  const handleGifSelect = (gifUrl) => {\n    setShowMediaSizeError(false);\n    setFile({});\n    setGif(gifUrl);\n  };\n\n  if (!isFocused) {\n    return null;\n  }\n\n  if (cameraActive && isFocused) {\n    return (\n      <CameraStandard\n        cameraActive={cameraActive}\n        recording={recording}\n        setCameraActive={setCameraActive}\n        setFile={async (file) => {\n          setThumbnail(\"\");\n          if (file.type?.split(\"/\")[0] === \"video\") {\n            const { uri } = await getThumbnailAsync(file.uri, {\n              time: 0,\n              quality: 0.5,\n            });\n            setThumbnail(uri);\n          }\n          setFile(file);\n          setGif(\"\");\n          setLoading(false);\n        }}\n        setRecording={setRecording}\n      />\n    );\n  }\n  return (\n    <Fragment>\n      <SafeAreaView\n        style={{\n          flex: 0,\n          backgroundColor: themeStyle.colors.grayscale.highest,\n        }}\n      />\n      {Platform.OS === \"ios\" ? <StatusBar translucent={true} /> : null}\n      <SafeAreaView style={styles.container}>\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" && \"padding\"}\n          keyboardVerticalOffset={93}\n          style={{ flex: 1 }}\n        >\n          <GifModal\n            selectGif={handleGifSelect}\n            active={showGifsModal}\n            setShowModal={setShowGifsModal}\n          />\n          <View\n            style={{\n              padding: 10,\n              backgroundColor: themeStyle.colors.grayscale.highest,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 24,\n                color: themeStyle.colors.primary.default,\n              }}\n            >\n              New Post\n            </Text>\n            <View\n              style={{\n                justifyContent: \"center\",\n                flexDirection: \"row\",\n                opacity: !file?.uri && !postBody && !gif ? 0.7 : 1,\n                marginHorizontal: 10,\n              }}\n            >\n              <TouchableOpacity\n                disabled={\n                  (!file.uri && !postBody && !gif) ||\n                  loading ||\n                  showMediaSizeError\n                }\n                onPress={() => createPost()}\n              >\n                {loading ? (\n                  <ActivityIndicator\n                    animating\n                    color={themeStyle.colors.secondary.default}\n                    size={\"small\"}\n                  />\n                ) : (\n                  <Text\n                    style={{\n                      fontSize: 18,\n                      color: themeStyle.colors.secondary.default,\n                    }}\n                  >\n                    Create\n                  </Text>\n                )}\n              </TouchableOpacity>\n            </View>\n          </View>\n          {postBody.length >= 2000 - 25 ? (\n            <Text style={styles.postLimitMessage}>\n              {2000 - postBody.length} Characters Remaining\n            </Text>\n          ) : null}\n          <ScrollView contentContainerStyle={{ padding: 10 }}>\n            <TextInput\n              style={{\n                minHeight: Platform.OS === \"web\" ? screenHeight / 2 : 100,\n                textAlignVertical: \"top\",\n                fontSize: 16,\n                color: themeStyle.colors.grayscale.lowest,\n              }}\n              value={postBody}\n              placeholder=\"What's on your mind?\"\n              placeholderTextColor={themeStyle.colors.grayscale.lower}\n              multiline\n              maxLength={2000}\n              onChangeText={(v) => setPostBody(v)}\n            />\n            {file.uri ? (\n              <View\n                style={{\n                  borderWidth: showMediaSizeError ? 2 : 0,\n                  borderColor: themeStyle.colors.error.default,\n                  backgroundColor: \"rgba(0,0,0,0.4)\",\n                  borderRadius: 10,\n                }}\n              >\n                <TouchableOpacity\n                  style={{\n                    alignSelf: \"flex-end\",\n                    height: 48,\n                    width: 48,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => {\n                    setFile({});\n                    setShowMediaSizeError(false);\n                  }}\n                >\n                  <AntDesign\n                    name=\"close\"\n                    size={24}\n                    color={themeStyle.colors.grayscale.lowest}\n                    style={{}}\n                  />\n                </TouchableOpacity>\n\n                {showMediaSizeError ? (\n                  <Text\n                    style={{\n                      color: themeStyle.colors.error.default,\n                      marginHorizontal: 5,\n                    }}\n                  >\n                    Choose a file smaller than 100MB\n                  </Text>\n                ) : thumbnail ? (\n                  <View\n                    style={{\n                      alignItems: \"center\",\n                      padding: 5,\n                    }}\n                  >\n                    <ImageWithCache\n                      onLoad={(e) => {\n                        setHeight(e?.nativeEvent?.source?.height);\n                        setWidth(e?.nativeEvent?.source?.width);\n                      }}\n                      style={{ height: 1, width: 1, opacity: 0 }} // so onload gets called we set height and width to 1. Doesn't when set to 0\n                      mediaUrl={thumbnail}\n                    />\n\n                    <VideoPlayer\n                      autoHidePlayer={false}\n                      fullscreen\n                      mediaIsSelfie\n                      videoProps={{\n                        shouldPlay: true,\n                        resizeMode: \"contain\",\n                        source: {\n                          uri: file.uri,\n                        },\n                        style: {\n                          transform: [{ scaleX: file.isSelfie ? -1 : 1 }],\n                          height: \"100%\",\n                        },\n                      }}\n                      style={{ height: 300 }}\n                    />\n                  </View>\n                ) : file.type?.split(\"/\")[0] === \"image\" ? (\n                  <View\n                    style={{\n                      height: screenWidth - 40,\n                      alignItems: \"center\",\n                      padding: 5,\n                    }}\n                  >\n                    <ImageWithCache\n                      onLoad={(e) => {\n                        setHeight(e?.nativeEvent?.source?.height);\n                        setWidth(e?.nativeEvent?.source?.width);\n                      }}\n                      removeBackround\n                      mediaIsSelfie={file.isSelfie}\n                      resizeMode=\"contain\"\n                      mediaUrl={file.uri}\n                      aspectRatio={1 / 1}\n                      removeBorderRadius\n                    />\n                  </View>\n                ) : null}\n              </View>\n            ) : gif ? (\n              <View\n                style={{ backgroundColor: \"rgba(0,0,0,0.4)\", borderRadius: 10 }}\n              >\n                <TouchableOpacity\n                  style={{\n                    alignSelf: \"flex-end\",\n                    height: 48,\n                    width: 48,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => {\n                    setFile({});\n                    setShowMediaSizeError(false);\n                    setGif(\"\");\n                  }}\n                >\n                  <AntDesign\n                    name=\"close\"\n                    size={24}\n                    color={themeStyle.colors.grayscale.lowest}\n                    style={{}}\n                  />\n                </TouchableOpacity>\n                <View\n                  style={{\n                    maxHeight: 340,\n                    alignItems: \"center\",\n                    padding: 5,\n                  }}\n                >\n                  <Image\n                    resizeMode=\"contain\"\n                    style={{ width: \"100%\", height: \"100%\", maxHeight: 300 }}\n                    source={{ uri: gif }}\n                  />\n                </View>\n              </View>\n            ) : null}\n          </ScrollView>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: 10,\n              backgroundColor: themeStyle.colors.grayscale.highest,\n            }}\n          >\n            <View style={{ flexDirection: \"row\", alignItems: \"flex-start\" }}>\n              {Platform.OS !== \"web\" ? (\n                <>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      marginHorizontal: 10,\n                    }}\n                  >\n                    <TouchableOpacity onPress={() => setCameraActive(true)}>\n                      <FontAwesome\n                        name=\"camera\"\n                        size={24}\n                        color={themeStyle.colors.grayscale.lowest}\n                      />\n                    </TouchableOpacity>\n                  </View>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      marginHorizontal: 10,\n                    }}\n                  >\n                    <TouchableOpacity onPress={() => pickMedia()}>\n                      <FontAwesome\n                        name=\"image\"\n                        size={24}\n                        color={themeStyle.colors.grayscale.lowest}\n                      />\n                    </TouchableOpacity>\n                  </View>\n                </>\n              ) : null}\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  marginHorizontal: 10,\n                  borderWidth: 1,\n                  borderColor: themeStyle.colors.grayscale.lowest,\n                  borderRadius: 5,\n                }}\n              >\n                <TouchableOpacity onPress={() => setShowGifsModal(true)}>\n                  <MaterialIcons\n                    name=\"gif\"\n                    size={24}\n                    color={themeStyle.colors.grayscale.lowest}\n                  />\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n          {error ? (\n            <View>\n              <Text style={styles.errorMessage}>{error}</Text>\n            </View>\n          ) : null}\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    </Fragment>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  postLimitMessage: {\n    alignSelf: \"flex-end\",\n    color: themeStyle.colors.error.default,\n  },\n  errorMessage: {\n    textAlign: \"center\",\n    color: themeStyle.colors.error.default,\n    fontSize: 14,\n  },\n});\n\nexport default gestureHandlerRootHOC(AddScreen);\n"],"sourceRoot":""}